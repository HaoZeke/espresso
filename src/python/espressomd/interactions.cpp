/* Generated by Cython 0.22 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_22"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#define __Pyx_void_to_None(void_result) (void_result, Py_INCREF(Py_None), Py_None)
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(T& ref) : ptr(&ref) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__espressomd__interactions
#define __PYX_HAVE_API__espressomd__interactions
#include "grid.hpp"
#include "string.h"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "utils.hpp"
#include "interaction_data.hpp"
#include "lj.hpp"
#include "forcecap.hpp"
#include "ljgen.hpp"
#include "fene.hpp"
#include "harmonic.hpp"
#include "dihedral.hpp"
#include "angle_harmonic.hpp"
#include "rattle.hpp"
#include "angle_cosine.hpp"
#include "angle_cossquare.hpp"
#include "subt_lj.hpp"
#include "object-in-fluid/stretching_force.hpp"
#include "object-in-fluid/area_force_local.hpp"
#include "object-in-fluid/bending_force.hpp"
#include "object-in-fluid/volume_force.hpp"
#include "object-in-fluid/area_force_global.hpp"
#include "object-in-fluid/stretchlin_force.hpp"
#include "harmonic_dumbbell.hpp"
#include "tab.hpp"
#include "overlap.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "espressomd/interactions.pyx",
  "__init__.pxd",
  "type.pxd",
};

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":726
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":727
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":728
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":729
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":733
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":734
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":735
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":736
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":740
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":741
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":750
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":751
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":752
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":754
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":755
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":756
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":758
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":759
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":761
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":762
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":763
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction;
struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction;
struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction;
struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions;
struct __pyx_obj_10espressomd_12interactions_BondedInteraction;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":765
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":766
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":767
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":769
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "espressomd/interactions.pyx":22
 * # Non-bonded interactions
 * 
 * cdef class NonBondedInteraction(object):             # <<<<<<<<<<<<<<
 * 
 *     cdef public object _partTypes
 */
struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction {
  PyObject_HEAD
  PyObject *_partTypes;
  PyObject *_params;
};


/* "espressomd/interactions.pyx":147
 * # Lennard Jones
 * 
 * cdef class LennardJonesInteraction(NonBondedInteraction):             # <<<<<<<<<<<<<<
 *     if LENNARD_JONES == 1:
 *         def validateParams(self):
 */
struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction {
  struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction __pyx_base;
};


/* "espressomd/interactions.pyx":209
 * # Generic Lennard Jones
 * 
 * cdef class GenericLennardJonesInteraction(NonBondedInteraction):             # <<<<<<<<<<<<<<
 *     if LENNARD_JONES_GENERIC == 1:
 *         def validateParams(self):
 */
struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction {
  struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction __pyx_base;
};


/* "espressomd/interactions.pyx":324
 * 
 * 
 * cdef class NonBondedInteractions:             # <<<<<<<<<<<<<<
 *     """Access to non-bonded interaction parameters via [i,j], where i,j are particle
 *     types. Returns NonBondedInteractionHandle.
 */
struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions {
  PyObject_HEAD
};


/* "espressomd/interactions.pyx":347
 * 
 * 
 * cdef class BondedInteraction(object):             # <<<<<<<<<<<<<<
 *     def __init__(self, *args, **kwargs):
 *         """Either called with an interaction id, in which case, the interaction will represent
 */
struct __pyx_obj_10espressomd_12interactions_BondedInteraction {
  PyObject_HEAD
};


/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) : \
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE int __Pyx_PyDict_Contains(PyObject* item, PyObject* dict, int eq) {
    int result = PyDict_Contains(dict, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d);

static CYTHON_INLINE int __Pyx_PySequence_Contains(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

#define __Pyx_CyFunction_USED 1
#include <structmember.h>
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f) \
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f) \
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f) \
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g) \
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code) \
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __Pyx_CyFunction_init(void);

static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if (defined(_WIN32) || defined(__clang__)) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'espressomd._system' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'espressomd.utils' */

/* Module declarations from 'espressomd.interactions' */
static PyTypeObject *__pyx_ptype_10espressomd_12interactions_NonBondedInteraction = 0;
static PyTypeObject *__pyx_ptype_10espressomd_12interactions_LennardJonesInteraction = 0;
static PyTypeObject *__pyx_ptype_10espressomd_12interactions_GenericLennardJonesInteraction = 0;
static PyTypeObject *__pyx_ptype_10espressomd_12interactions_NonBondedInteractions = 0;
static PyTypeObject *__pyx_ptype_10espressomd_12interactions_BondedInteraction = 0;
#define __Pyx_MODULE_NAME "espressomd.interactions"
int __pyx_module_is_main_espressomd__interactions = 0;

/* Implementation of 'espressomd.interactions' */
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static int __pyx_pf_10espressomd_12interactions_20NonBondedInteraction___init__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_2isValid(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_4getParams(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_6setParams(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self, PyObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_8validateParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_getParamsFromEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_12_setParamsInEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_14defaultParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_16isActive(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_18typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_20validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_22requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes___get__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static int __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_2__set__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_4__del__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_validateParams(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_2_getParamsFromEsCore(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_4isActive(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_6_setParamsInEsCore(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_8defaultParams(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_10typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_12validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_14requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_validateParams(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_2_getParamsFromEsCore(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_4isActive(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_6_setParamsInEsCore(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_8defaultParams(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_10typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_12validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_14requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_26NonBondedInteractionHandle___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v__type1, PyObject *__pyx_v__type2); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_21NonBondedInteractions___getitem__(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_21NonBondedInteractions_2setForceCap(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *__pyx_v_self, PyObject *__pyx_v_cap); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_21NonBondedInteractions_4getForceCap(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *__pyx_v_self); /* proto */
static int __pyx_pf_10espressomd_12interactions_17BondedInteraction___init__(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_2isValid(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_6params___get__(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static int __pyx_pf_10espressomd_12interactions_17BondedInteraction_6params_2__set__(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self, PyObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_4validateParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_6_getParamsFromEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_8_setParamsInEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_10setDefaultParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_12typeNumber(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_14typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_16validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_18requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_2typeNumber(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_4typeName(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_6validKeys(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_8requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_10setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_12_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_14_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_14Angle_Harmonic_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_2validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_4requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_6setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_8_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_10_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Angle_Cosine_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_14validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_18setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_20_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_22_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_15Angle_Cossquare_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_24typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_26validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_28requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_30setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_32_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_34_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_18BondedInteractions___getitem__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_10espressomd_12interactions_18BondedInteractions_2__setitem__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_10espressomd_12interactions_NonBondedInteraction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_10espressomd_12interactions_LennardJonesInteraction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_10espressomd_12interactions_GenericLennardJonesInteraction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_10espressomd_12interactions_NonBondedInteractions(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_10espressomd_12interactions_BondedInteraction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_B[] = "B";
static char __pyx_k_H[] = "H";
static char __pyx_k_I[] = "I";
static char __pyx_k_L[] = "L";
static char __pyx_k_O[] = "O";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_b[] = "b";
static char __pyx_k_d[] = "d";
static char __pyx_k_f[] = "f";
static char __pyx_k_g[] = "g";
static char __pyx_k_h[] = "h";
static char __pyx_k_i[] = "i";
static char __pyx_k_k[] = "k";
static char __pyx_k_l[] = "l";
static char __pyx_k_q[] = "q";
static char __pyx_k_r[] = "r";
static char __pyx_k_V0[] = "V0";
static char __pyx_k_Zd[] = "Zd";
static char __pyx_k_Zf[] = "Zf";
static char __pyx_k_Zg[] = "Zg";
static char __pyx_k_b1[] = "b1";
static char __pyx_k_b2[] = "b2";
static char __pyx_k_e1[] = "e1";
static char __pyx_k_e2[] = "e2";
static char __pyx_k_k1[] = "k1";
static char __pyx_k_k2[] = "k2";
static char __pyx_k_kb[] = "kb";
static char __pyx_k_ks[] = "ks";
static char __pyx_k_kv[] = "kv";
static char __pyx_k_r0[] = "r0";
static char __pyx_k__43[] = "";
static char __pyx_k__67[] = "  ";
static char __pyx_k_doc[] = "__doc__";
static char __pyx_k_end[] = "end";
static char __pyx_k_k_2[] = "k'";
static char __pyx_k_key[] = "key";
static char __pyx_k_min[] = "min";
static char __pyx_k_r_0[] = "r_0";
static char __pyx_k_str[] = "__str__";
static char __pyx_k_A0_g[] = "A0_g";
static char __pyx_k_A0_l[] = "A0_l";
static char __pyx_k_FENE[] = "FENE";
static char __pyx_k_args[] = "args";
static char __pyx_k_auto[] = "auto";
static char __pyx_k_bend[] = "bend";
static char __pyx_k_file[] = "file";
static char __pyx_k_init[] = "__init__";
static char __pyx_k_ka_g[] = "ka_g";
static char __pyx_k_ka_l[] = "ka_l";
static char __pyx_k_keys[] = "keys";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_mult[] = "mult";
static char __pyx_k_name[] = "__name__";
static char __pyx_k_phi0[] = "phi0";
static char __pyx_k_self[] = "self";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_type[] = "type";
static char __pyx_k_RIGID[] = "RIGID";
static char __pyx_k_delta[] = "delta";
static char __pyx_k_kslin[] = "kslin";
static char __pyx_k_phase[] = "phase";
static char __pyx_k_print[] = "print";
static char __pyx_k_r_cut[] = "r_cut";
static char __pyx_k_range[] = "range";
static char __pyx_k_shift[] = "shift";
static char __pyx_k_sigma[] = "sigma";
static char __pyx_k_type1[] = "_type1";
static char __pyx_k_type2[] = "_type2";
static char __pyx_k_value[] = "value";
static char __pyx_k_bondId[] = "_bondId";
static char __pyx_k_cutoff[] = "cutoff";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_kwargs[] = "kwargs";
static char __pyx_k_lambda[] = "lambda";
static char __pyx_k_maxval[] = "maxval";
static char __pyx_k_minval[] = "minval";
static char __pyx_k_module[] = "__module__";
static char __pyx_k_mult_2[] = "mult'";
static char __pyx_k_name_2[] = "name";
static char __pyx_k_object[] = "object";
static char __pyx_k_offset[] = "offset";
static char __pyx_k_params[] = "_params";
static char __pyx_k_update[] = "update";
static char __pyx_k_SUBT_LJ[] = "SUBT_LJ";
static char __pyx_k_Subt_Lj[] = "Subt_Lj";
static char __pyx_k_VIRTUAL[] = "VIRTUAL";
static char __pyx_k_Virtual[] = "Virtual";
static char __pyx_k_class_s[] = "__class_s__";
static char __pyx_k_d_r_max[] = "d_r_max";
static char __pyx_k_epsilon[] = "epsilon";
static char __pyx_k_getitem[] = "__getitem__";
static char __pyx_k_npoints[] = "npoints";
static char __pyx_k_prepare[] = "__prepare__";
static char __pyx_k_setitem[] = "__setitem__";
static char __pyx_k_type1_2[] = "type1";
static char __pyx_k_type2_2[] = "type2";
static char __pyx_k_DIHEDRAL[] = "DIHEDRAL";
static char __pyx_k_Dihedral[] = "Dihedral";
static char __pyx_k_FeneBond[] = "FeneBond";
static char __pyx_k_HARMONIC[] = "HARMONIC";
static char __pyx_k_bondId_2[] = "bondId";
static char __pyx_k_bondType[] = "bondType";
static char __pyx_k_filename[] = "filename";
static char __pyx_k_isActive[] = "isActive";
static char __pyx_k_params_2[] = "params";
static char __pyx_k_qualname[] = "__qualname__";
static char __pyx_k_typeName[] = "typeName";
static char __pyx_k_Exception[] = "Exception";
static char __pyx_k_RigidBond[] = "RigidBond";
static char __pyx_k_TABULATED[] = "TABULATED";
static char __pyx_k_Tabulated[] = "Tabulated";
static char __pyx_k_TypeError[] = "TypeError";
static char __pyx_k_bondClass[] = "bondClass";
static char __pyx_k_metaclass[] = "__metaclass__";
static char __pyx_k_validKeys[] = "validKeys";
static char __pyx_k_OVERLAPPED[] = "OVERLAPPED";
static char __pyx_k_Overlapped[] = "Overlapped";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_typeNumber[] = "typeNumber";
static char __pyx_k_invstepsize[] = "invstepsize";
static char __pyx_k_ANGLE_COSINE[] = "ANGLE_COSINE";
static char __pyx_k_Angle_Cosine[] = "Angle_Cosine";
static char __pyx_k_Endangledist[] = "Endangledist";
static char __pyx_k_HarmonicBond[] = "HarmonicBond";
static char __pyx_k_LennardJones[] = "LennardJones";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_VOLUME_FORCE[] = "VOLUME_FORCE";
static char __pyx_k_Volume_Force[] = "Volume_Force";
static char __pyx_k_lennardJones[] = "lennardJones";
static char __pyx_k_overlap_type[] = "overlap_type";
static char __pyx_k_requiredKeys[] = "requiredKeys";
static char __pyx_k_BENDING_FORCE[] = "BENDING_FORCE";
static char __pyx_k_Bending_Force[] = "Bending_Force";
static char __pyx_k_defaultParams[] = "defaultParams";
static char __pyx_k_ANGLE_HARMONIC[] = "ANGLE_HARMONIC";
static char __pyx_k_Angle_Harmonic[] = "Angle_Harmonic";
static char __pyx_k_validateParams[] = "validateParams";
static char __pyx_k_ANGLE_COSSQUARE[] = "ANGLE_COSSQUARE";
static char __pyx_k_Angle_Cossquare[] = "Angle_Cossquare";
static char __pyx_k_AREA_FORCE_LOCAL[] = "AREA_FORCE_LOCAL";
static char __pyx_k_Area_Force_Local[] = "Area_Force_Local";
static char __pyx_k_STRETCHING_FORCE[] = "STRETCHING_FORCE";
static char __pyx_k_STRETCHLIN_FORCE[] = "STRETCHLIN_FORCE";
static char __pyx_k_Stretching_Force[] = "Stretching_Force";
static char __pyx_k_Stretchlin_Force[] = "Stretchlin_Force";
static char __pyx_k_Subt_Lj_typeName[] = "Subt_Lj.typeName";
static char __pyx_k_Virtual_typeName[] = "Virtual.typeName";
static char __pyx_k_setDefaultParams[] = "setDefaultParams";
static char __pyx_k_AREA_FORCE_GLOBAL[] = "AREA_FORCE_GLOBAL";
static char __pyx_k_Area_Force_Global[] = "Area_Force_Global";
static char __pyx_k_BOND_ENDANGLEDIST[] = "BOND_ENDANGLEDIST";
static char __pyx_k_Dihedral_typeName[] = "Dihedral.typeName";
static char __pyx_k_FeneBond_typeName[] = "FeneBond.typeName";
static char __pyx_k_HARMONIC_DUMBBELL[] = "HARMONIC_DUMBBELL";
static char __pyx_k_Subt_Lj_validKeys[] = "Subt_Lj.validKeys";
static char __pyx_k_Virtual_validKeys[] = "Virtual.validKeys";
static char __pyx_k_setParamsInEsCore[] = "_setParamsInEsCore";
static char __pyx_k_BondedInteractions[] = "BondedInteractions";
static char __pyx_k_Dihedral_validKeys[] = "Dihedral.validKeys";
static char __pyx_k_FeneBond_validKeys[] = "FeneBond.validKeys";
static char __pyx_k_Subt_Lj_typeNumber[] = "Subt_Lj.typeNumber";
static char __pyx_k_Tabulated_typeName[] = "Tabulated.typeName";
static char __pyx_k_Virtual_typeNumber[] = "Virtual.typeNumber";
static char __pyx_k_is_not_yet_defined[] = " is not yet defined.";
static char __pyx_k_Dihedral_typeNumber[] = "Dihedral.typeNumber";
static char __pyx_k_FeneBond_typeNumber[] = "FeneBond.typeNumber";
static char __pyx_k_GenericLennardJones[] = "GenericLennardJones";
static char __pyx_k_Overlapped_typeName[] = "Overlapped.typeName";
static char __pyx_k_Tabulated_validKeys[] = "Tabulated.validKeys";
static char __pyx_k_genericLennardJones[] = "genericLennardJones";
static char __pyx_k_getParamsFromEsCore[] = "_getParamsFromEsCore";
static char __pyx_k_HarmonicDumbbellBond[] = "HarmonicDumbbellBond";
static char __pyx_k_Overlapped_validKeys[] = "Overlapped.validKeys";
static char __pyx_k_Subt_Lj_requiredKeys[] = "Subt_Lj.requiredKeys";
static char __pyx_k_Tabulated_typeNumber[] = "Tabulated.typeNumber";
static char __pyx_k_Virtual_requiredKeys[] = "Virtual.requiredKeys";
static char __pyx_k_Dihedral_requiredKeys[] = "Dihedral.requiredKeys";
static char __pyx_k_FeneBond_requiredKeys[] = "FeneBond.requiredKeys";
static char __pyx_k_HarmonicBond_typeName[] = "HarmonicBond.typeName";
static char __pyx_k_Overlapped_typeNumber[] = "Overlapped.typeNumber";
static char __pyx_k_Volume_Force_typeName[] = "Volume_Force.typeName";
static char __pyx_k_Bending_Force_typeName[] = "Bending_Force.typeName";
static char __pyx_k_Could_not_set_forcecap[] = "Could not set forcecap";
static char __pyx_k_HarmonicBond_validKeys[] = "HarmonicBond.validKeys";
static char __pyx_k_Tabulated_requiredKeys[] = "Tabulated.requiredKeys";
static char __pyx_k_Volume_Force_validKeys[] = "Volume_Force.validKeys";
static char __pyx_k_Angle_Cosine_typeNumber[] = "Angle_Cosine.typeNumber";
static char __pyx_k_Bending_Force_validKeys[] = "Bending_Force.validKeys";
static char __pyx_k_HarmonicBond_typeNumber[] = "HarmonicBond.typeNumber";
static char __pyx_k_Overlapped_requiredKeys[] = "Overlapped.requiredKeys";
static char __pyx_k_Volume_Force_typeNumber[] = "Volume_Force.typeNumber";
static char __pyx_k_espressomd_interactions[] = "espressomd.interactions";
static char __pyx_k_Bending_Force_typeNumber[] = "Bending_Force.typeNumber";
static char __pyx_k_Subt_Lj_setDefaultParams[] = "Subt_Lj.setDefaultParams";
static char __pyx_k_Virtual_setDefaultParams[] = "Virtual.setDefaultParams";
static char __pyx_k_bondedInteractionClasses[] = "bondedInteractionClasses";
static char __pyx_k_Angle_Harmonic_typeNumber[] = "Angle_Harmonic.typeNumber";
static char __pyx_k_Area_Force_Local_typeName[] = "Area_Force_Local.typeName";
static char __pyx_k_Dihedral_setDefaultParams[] = "Dihedral.setDefaultParams";
static char __pyx_k_FeneBond_setDefaultParams[] = "FeneBond.setDefaultParams";
static char __pyx_k_HarmonicBond_requiredKeys[] = "HarmonicBond.requiredKeys";
static char __pyx_k_Stretching_Force_typeName[] = "Stretching_Force.typeName";
static char __pyx_k_Stretchlin_Force_typeName[] = "Stretchlin_Force.typeName";
static char __pyx_k_Volume_Force_requiredKeys[] = "Volume_Force.requiredKeys";
static char __pyx_k_bond_in_the_Espresso_core[] = " bond in the Espresso core.";
static char __pyx_k_Angle_Cossquare_typeNumber[] = "Angle_Cossquare.typeNumber";
static char __pyx_k_Area_Force_Global_typeName[] = "Area_Force_Global.typeName";
static char __pyx_k_Area_Force_Local_validKeys[] = "Area_Force_Local.validKeys";
static char __pyx_k_Bending_Force_requiredKeys[] = "Bending_Force.requiredKeys";
static char __pyx_k_NonBondedInteractionHandle[] = "NonBondedInteractionHandle";
static char __pyx_k_Stretching_Force_validKeys[] = "Stretching_Force.validKeys";
static char __pyx_k_Stretchlin_Force_validKeys[] = "Stretchlin_Force.validKeys";
static char __pyx_k_Subt_Lj__setParamsInEsCore[] = "Subt_Lj._setParamsInEsCore";
static char __pyx_k_Tabulated_setDefaultParams[] = "Tabulated.setDefaultParams";
static char __pyx_k_Virtual__setParamsInEsCore[] = "Virtual._setParamsInEsCore";
static char __pyx_k_Area_Force_Global_validKeys[] = "Area_Force_Global.validKeys";
static char __pyx_k_Area_Force_Local_typeNumber[] = "Area_Force_Local.typeNumber";
static char __pyx_k_BondedInteractionNotDefined[] = "BondedInteractionNotDefined";
static char __pyx_k_Dihedral__setParamsInEsCore[] = "Dihedral._setParamsInEsCore";
static char __pyx_k_FeneBond__setParamsInEsCore[] = "FeneBond._setParamsInEsCore";
static char __pyx_k_Overlapped_setDefaultParams[] = "Overlapped.setDefaultParams";
static char __pyx_k_Stretching_Force_typeNumber[] = "Stretching_Force.typeNumber";
static char __pyx_k_Stretchlin_Force_typeNumber[] = "Stretchlin_Force.typeNumber";
static char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static char __pyx_k_Area_Force_Global_typeNumber[] = "Area_Force_Global.typeNumber";
static char __pyx_k_BondedInteractions___getitem[] = "BondedInteractions.__getitem__";
static char __pyx_k_BondedInteractions___setitem[] = "BondedInteractions.__setitem__";
static char __pyx_k_Subt_Lj__getParamsFromEsCore[] = "Subt_Lj._getParamsFromEsCore";
static char __pyx_k_Tabulated__setParamsInEsCore[] = "Tabulated._setParamsInEsCore";
static char __pyx_k_Virtual__getParamsFromEsCore[] = "Virtual._getParamsFromEsCore";
static char __pyx_k_Area_Force_Local_requiredKeys[] = "Area_Force_Local.requiredKeys";
static char __pyx_k_Dihedral__getParamsFromEsCore[] = "Dihedral._getParamsFromEsCore";
static char __pyx_k_FeneBond__getParamsFromEsCore[] = "FeneBond._getParamsFromEsCore";
static char __pyx_k_HarmonicBond_setDefaultParams[] = "HarmonicBond.setDefaultParams";
static char __pyx_k_HarmonicDumbbellBond_typeName[] = "HarmonicDumbbellBond.typeName";
static char __pyx_k_Lennard_Jones_eps_has_to_be_0[] = "Lennard-Jones eps has to be >=0";
static char __pyx_k_Overlapped__setParamsInEsCore[] = "Overlapped._setParamsInEsCore";
static char __pyx_k_Stretching_Force_requiredKeys[] = "Stretching_Force.requiredKeys";
static char __pyx_k_Stretchlin_Force_requiredKeys[] = "Stretchlin_Force.requiredKeys";
static char __pyx_k_Volume_Force_setDefaultParams[] = "Volume_Force.setDefaultParams";
static char __pyx_k_Area_Force_Global_requiredKeys[] = "Area_Force_Global.requiredKeys";
static char __pyx_k_Bending_Force_setDefaultParams[] = "Bending_Force.setDefaultParams";
static char __pyx_k_HarmonicDumbbellBond_validKeys[] = "HarmonicDumbbellBond.validKeys";
static char __pyx_k_Tabulated__getParamsFromEsCore[] = "Tabulated._getParamsFromEsCore";
static char __pyx_k_Generic_Lennard_Jones_sigma_has[] = "Generic Lennard-Jones sigma has to be >=0";
static char __pyx_k_HarmonicBond__setParamsInEsCore[] = "HarmonicBond._setParamsInEsCore";
static char __pyx_k_HarmonicDumbbellBond_typeNumber[] = "HarmonicDumbbellBond.typeNumber";
static char __pyx_k_Index_to_BondedInteractions_has[] = "Index to BondedInteractions[] has to ba an integer referring to a bond id";
static char __pyx_k_Lennard_Jones_sigma_has_to_be_0[] = "Lennard-Jones sigma has to be >=0";
static char __pyx_k_Overlapped__getParamsFromEsCore[] = "Overlapped._getParamsFromEsCore";
static char __pyx_k_Subclasses_of_BondedInteraction[] = "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.";
static char __pyx_k_The_bonded_interaction_with_the[] = "The bonded interaction with the id ";
static char __pyx_k_Volume_Force__setParamsInEsCore[] = "Volume_Force._setParamsInEsCore";
static char __pyx_k_home_haozeke_Github_LabBom_espr[] = "/home/haozeke/Github/LabBom/espresso/src/python/espressomd/interactions.pyx";
static char __pyx_k_not_compiled_into_Espresso_core[] = " not compiled into Espresso core";
static char __pyx_k_s_has_to_be_defined_in_myconfig[] = "%s has to be defined in myconfig.hpp.";
static char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_Area_Force_Global__getParamsFrom[] = "Area_Force_Global._getParamsFromEsCore";
static char __pyx_k_Area_Force_Global__setParamsInEs[] = "Area_Force_Global._setParamsInEsCore";
static char __pyx_k_Area_Force_Global_setDefaultPara[] = "Area_Force_Global.setDefaultParams";
static char __pyx_k_Area_Force_Local__getParamsFromE[] = "Area_Force_Local._getParamsFromEsCore";
static char __pyx_k_Area_Force_Local__setParamsInEsC[] = "Area_Force_Local._setParamsInEsCore";
static char __pyx_k_Area_Force_Local_setDefaultParam[] = "Area_Force_Local.setDefaultParams";
static char __pyx_k_At_least_the_following_keys_have[] = "At least the following keys have to be given as keyword arguments: ";
static char __pyx_k_Bending_Force__getParamsFromEsCo[] = "Bending_Force._getParamsFromEsCore";
static char __pyx_k_Bending_Force__setParamsInEsCore[] = "Bending_Force._setParamsInEsCore";
static char __pyx_k_BondedInteractionNotDefined___in[] = "BondedInteractionNotDefined.__init__";
static char __pyx_k_BondedInteractionNotDefined__get[] = "BondedInteractionNotDefined._getParamsFromEsCore";
static char __pyx_k_BondedInteractionNotDefined__set[] = "BondedInteractionNotDefined._setParamsInEsCore";
static char __pyx_k_BondedInteractionNotDefined_requ[] = "BondedInteractionNotDefined.requiredKeys";
static char __pyx_k_BondedInteractionNotDefined_setD[] = "BondedInteractionNotDefined.setDefaultParams";
static char __pyx_k_BondedInteractionNotDefined_type[] = "BondedInteractionNotDefined.typeNumber";
static char __pyx_k_BondedInteractionNotDefined_vali[] = "BondedInteractionNotDefined.validKeys";
static char __pyx_k_Could_not_set_Generic_Lennard_Jo[] = "Could not set Generic Lennard Jones parameters";
static char __pyx_k_Could_not_set_Lennard_Jones_para[] = "Could not set Lennard Jones parameters";
static char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_Generic_Lennard_Jones_cutoff_has[] = "Generic Lennard-Jones cutoff has to be >=0";
static char __pyx_k_Generic_Lennard_Jones_eps_has_to[] = "Generic Lennard-Jones eps has to be >=0";
static char __pyx_k_HarmonicBond__getParamsFromEsCor[] = "HarmonicBond._getParamsFromEsCore";
static char __pyx_k_HarmonicDumbbellBond__getParamsF[] = "HarmonicDumbbellBond._getParamsFromEsCore";
static char __pyx_k_HarmonicDumbbellBond__setParamsI[] = "HarmonicDumbbellBond._setParamsInEsCore";
static char __pyx_k_HarmonicDumbbellBond_requiredKey[] = "HarmonicDumbbellBond.requiredKeys";
static char __pyx_k_HarmonicDumbbellBond_setDefaultP[] = "HarmonicDumbbellBond.setDefaultParams";
static char __pyx_k_Index_to_BondedInteractions_hast[] = "Index to BondedInteractions[] hast to ba an integer referring to a bond id";
static char __pyx_k_Lennard_Jones_cutoff_has_to_be_0[] = "Lennard-Jones cutoff has to be >=0";
static char __pyx_k_NonBondedInteractionHandle___ini[] = "NonBondedInteractionHandle.__init__";
static char __pyx_k_NonBondedInteractions_expects_tw[] = "NonBondedInteractions[] expects two particle types as indices.";
static char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static char __pyx_k_Only_subclasses_of_BondedInterac[] = "Only subclasses of BondedInteraction can be assigned.";
static char __pyx_k_Only_the_following_keys_are_supp[] = "Only the following keys are supported: ";
static char __pyx_k_Provides_access_to_all_Non_bonde[] = "Provides access to all Non-bonded interactions between\n    two particle types.";
static char __pyx_k_Represents_the_bonded_interactio[] = "Represents the bonded interactions. Individual interactions can be accessed using\n    NonBondedInteractions[i], where i is the bond id. Will return an instance o\n    BondedInteractionHandle";
static char __pyx_k_Stretching_Force__getParamsFromE[] = "Stretching_Force._getParamsFromEsCore";
static char __pyx_k_Stretching_Force__setParamsInEsC[] = "Stretching_Force._setParamsInEsCore";
static char __pyx_k_Stretching_Force_setDefaultParam[] = "Stretching_Force.setDefaultParams";
static char __pyx_k_Stretchlin_Force__getParamsFromE[] = "Stretchlin_Force._getParamsFromEsCore";
static char __pyx_k_Stretchlin_Force__setParamsInEsC[] = "Stretchlin_Force._setParamsInEsCore";
static char __pyx_k_Stretchlin_Force_setDefaultParam[] = "Stretchlin_Force.setDefaultParams";
static char __pyx_k_Subclasses_of_NonBondedInteracti[] = "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.";
static char __pyx_k_The_bond_with_this_id_is_not_def[] = "The bond with this id is not defined as a ";
static char __pyx_k_The_constructor_has_to_be_called[] = "The constructor has to be called either with two particle type ids (as interger), or with a set of keyword arguments describing a new interaction";
static char __pyx_k_The_particle_types_have_to_be_of[] = "The particle types have to be of type integer.";
static char __pyx_k_Volume_Force__getParamsFromEsCor[] = "Volume_Force._getParamsFromEsCore";
static char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static char __pyx_k_Subclasses_of_BondedInteraction_2[] = "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.";
static char __pyx_k_Subclasses_of_BondedInteraction_3[] = "Subclasses of BondedInteraction must define the setDefaultParams() method.";
static char __pyx_k_Subclasses_of_BondedInteraction_4[] = "Subclasses of BondedInteraction must define the typeNumber() method.";
static char __pyx_k_Subclasses_of_BondedInteraction_5[] = "Subclasses of BondedInteraction must define the typeName() method.";
static char __pyx_k_Subclasses_of_BondedInteraction_6[] = "Subclasses of BondedInteraction must define the validKeys() method.";
static char __pyx_k_Subclasses_of_BondedInteraction_7[] = "Subclasses of BondedInteraction must define the requiredKeys() method.";
static char __pyx_k_BondedInteractionNotDefined_type_2[] = "BondedInteractionNotDefined.typeName";
static char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static char __pyx_k_Subclasses_of_NonBondedInteracti_2[] = "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.";
static char __pyx_k_Subclasses_of_NonBondedInteracti_3[] = "Subclasses of NonBondedInteraction must define the defaultParams() method.";
static char __pyx_k_Subclasses_of_NonBondedInteracti_4[] = "Subclasses of NonBondedInteraction must define the isActive() method.";
static char __pyx_k_Subclasses_of_NonBondedInteracti_5[] = "Subclasses of NonBondedInteraction must define the typeName() method.";
static char __pyx_k_Subclasses_of_NonBondedInteracti_6[] = "Subclasses of NonBondedInteraction must define the validKeys() method.";
static char __pyx_k_Subclasses_of_NonBondedInteracti_7[] = "Subclasses of NonBondedInteraction must define the requiredKeys() method.";
static char __pyx_k_The_constructor_has_to_be_called_2[] = "The constructor has to be called either with a bond id (as interger), or with a set of keyword arguments describing a new interaction";
static PyObject *__pyx_n_s_A0_g;
static PyObject *__pyx_n_s_A0_l;
static PyObject *__pyx_n_s_ANGLE_COSINE;
static PyObject *__pyx_n_s_ANGLE_COSSQUARE;
static PyObject *__pyx_n_s_ANGLE_HARMONIC;
static PyObject *__pyx_n_s_AREA_FORCE_GLOBAL;
static PyObject *__pyx_n_s_AREA_FORCE_LOCAL;
static PyObject *__pyx_n_s_Angle_Cosine;
static PyObject *__pyx_n_s_Angle_Cosine_typeNumber;
static PyObject *__pyx_n_s_Angle_Cossquare;
static PyObject *__pyx_n_s_Angle_Cossquare_typeNumber;
static PyObject *__pyx_n_s_Angle_Harmonic;
static PyObject *__pyx_n_s_Angle_Harmonic_typeNumber;
static PyObject *__pyx_n_s_Area_Force_Global;
static PyObject *__pyx_n_s_Area_Force_Global__getParamsFrom;
static PyObject *__pyx_n_s_Area_Force_Global__setParamsInEs;
static PyObject *__pyx_n_s_Area_Force_Global_requiredKeys;
static PyObject *__pyx_n_s_Area_Force_Global_setDefaultPara;
static PyObject *__pyx_n_s_Area_Force_Global_typeName;
static PyObject *__pyx_n_s_Area_Force_Global_typeNumber;
static PyObject *__pyx_n_s_Area_Force_Global_validKeys;
static PyObject *__pyx_n_s_Area_Force_Local;
static PyObject *__pyx_n_s_Area_Force_Local__getParamsFromE;
static PyObject *__pyx_n_s_Area_Force_Local__setParamsInEsC;
static PyObject *__pyx_n_s_Area_Force_Local_requiredKeys;
static PyObject *__pyx_n_s_Area_Force_Local_setDefaultParam;
static PyObject *__pyx_n_s_Area_Force_Local_typeName;
static PyObject *__pyx_n_s_Area_Force_Local_typeNumber;
static PyObject *__pyx_n_s_Area_Force_Local_validKeys;
static PyObject *__pyx_kp_s_At_least_the_following_keys_have;
static PyObject *__pyx_n_s_BENDING_FORCE;
static PyObject *__pyx_n_s_BOND_ENDANGLEDIST;
static PyObject *__pyx_n_s_Bending_Force;
static PyObject *__pyx_n_s_Bending_Force__getParamsFromEsCo;
static PyObject *__pyx_n_s_Bending_Force__setParamsInEsCore;
static PyObject *__pyx_n_s_Bending_Force_requiredKeys;
static PyObject *__pyx_n_s_Bending_Force_setDefaultParams;
static PyObject *__pyx_n_s_Bending_Force_typeName;
static PyObject *__pyx_n_s_Bending_Force_typeNumber;
static PyObject *__pyx_n_s_Bending_Force_validKeys;
static PyObject *__pyx_n_s_BondedInteractionNotDefined;
static PyObject *__pyx_n_s_BondedInteractionNotDefined___in;
static PyObject *__pyx_n_s_BondedInteractionNotDefined__get;
static PyObject *__pyx_n_s_BondedInteractionNotDefined__set;
static PyObject *__pyx_n_s_BondedInteractionNotDefined_requ;
static PyObject *__pyx_n_s_BondedInteractionNotDefined_setD;
static PyObject *__pyx_n_s_BondedInteractionNotDefined_type;
static PyObject *__pyx_n_s_BondedInteractionNotDefined_type_2;
static PyObject *__pyx_n_s_BondedInteractionNotDefined_vali;
static PyObject *__pyx_n_s_BondedInteractions;
static PyObject *__pyx_n_s_BondedInteractions___getitem;
static PyObject *__pyx_n_s_BondedInteractions___setitem;
static PyObject *__pyx_kp_s_Could_not_set_Generic_Lennard_Jo;
static PyObject *__pyx_kp_s_Could_not_set_Lennard_Jones_para;
static PyObject *__pyx_kp_s_Could_not_set_forcecap;
static PyObject *__pyx_n_s_DIHEDRAL;
static PyObject *__pyx_n_s_Dihedral;
static PyObject *__pyx_n_s_Dihedral__getParamsFromEsCore;
static PyObject *__pyx_n_s_Dihedral__setParamsInEsCore;
static PyObject *__pyx_n_s_Dihedral_requiredKeys;
static PyObject *__pyx_n_s_Dihedral_setDefaultParams;
static PyObject *__pyx_n_s_Dihedral_typeName;
static PyObject *__pyx_n_s_Dihedral_typeNumber;
static PyObject *__pyx_n_s_Dihedral_validKeys;
static PyObject *__pyx_n_s_Endangledist;
static PyObject *__pyx_n_s_Exception;
static PyObject *__pyx_n_s_FENE;
static PyObject *__pyx_n_s_FeneBond;
static PyObject *__pyx_n_s_FeneBond__getParamsFromEsCore;
static PyObject *__pyx_n_s_FeneBond__setParamsInEsCore;
static PyObject *__pyx_n_s_FeneBond_requiredKeys;
static PyObject *__pyx_n_s_FeneBond_setDefaultParams;
static PyObject *__pyx_n_s_FeneBond_typeName;
static PyObject *__pyx_n_s_FeneBond_typeNumber;
static PyObject *__pyx_n_s_FeneBond_validKeys;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_GenericLennardJones;
static PyObject *__pyx_kp_s_Generic_Lennard_Jones_cutoff_has;
static PyObject *__pyx_kp_s_Generic_Lennard_Jones_eps_has_to;
static PyObject *__pyx_kp_s_Generic_Lennard_Jones_sigma_has;
static PyObject *__pyx_n_s_HARMONIC;
static PyObject *__pyx_n_s_HARMONIC_DUMBBELL;
static PyObject *__pyx_n_s_HarmonicBond;
static PyObject *__pyx_n_s_HarmonicBond__getParamsFromEsCor;
static PyObject *__pyx_n_s_HarmonicBond__setParamsInEsCore;
static PyObject *__pyx_n_s_HarmonicBond_requiredKeys;
static PyObject *__pyx_n_s_HarmonicBond_setDefaultParams;
static PyObject *__pyx_n_s_HarmonicBond_typeName;
static PyObject *__pyx_n_s_HarmonicBond_typeNumber;
static PyObject *__pyx_n_s_HarmonicBond_validKeys;
static PyObject *__pyx_n_s_HarmonicDumbbellBond;
static PyObject *__pyx_n_s_HarmonicDumbbellBond__getParamsF;
static PyObject *__pyx_n_s_HarmonicDumbbellBond__setParamsI;
static PyObject *__pyx_n_s_HarmonicDumbbellBond_requiredKey;
static PyObject *__pyx_n_s_HarmonicDumbbellBond_setDefaultP;
static PyObject *__pyx_n_s_HarmonicDumbbellBond_typeName;
static PyObject *__pyx_n_s_HarmonicDumbbellBond_typeNumber;
static PyObject *__pyx_n_s_HarmonicDumbbellBond_validKeys;
static PyObject *__pyx_kp_s_Index_to_BondedInteractions_has;
static PyObject *__pyx_kp_s_Index_to_BondedInteractions_hast;
static PyObject *__pyx_n_s_LennardJones;
static PyObject *__pyx_kp_s_Lennard_Jones_cutoff_has_to_be_0;
static PyObject *__pyx_kp_s_Lennard_Jones_eps_has_to_be_0;
static PyObject *__pyx_kp_s_Lennard_Jones_sigma_has_to_be_0;
static PyObject *__pyx_n_s_NonBondedInteractionHandle;
static PyObject *__pyx_n_s_NonBondedInteractionHandle___ini;
static PyObject *__pyx_kp_s_NonBondedInteractions_expects_tw;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_OVERLAPPED;
static PyObject *__pyx_kp_s_Only_subclasses_of_BondedInterac;
static PyObject *__pyx_kp_s_Only_the_following_keys_are_supp;
static PyObject *__pyx_n_s_Overlapped;
static PyObject *__pyx_n_s_Overlapped__getParamsFromEsCore;
static PyObject *__pyx_n_s_Overlapped__setParamsInEsCore;
static PyObject *__pyx_n_s_Overlapped_requiredKeys;
static PyObject *__pyx_n_s_Overlapped_setDefaultParams;
static PyObject *__pyx_n_s_Overlapped_typeName;
static PyObject *__pyx_n_s_Overlapped_typeNumber;
static PyObject *__pyx_n_s_Overlapped_validKeys;
static PyObject *__pyx_kp_s_Provides_access_to_all_Non_bonde;
static PyObject *__pyx_n_s_RIGID;
static PyObject *__pyx_kp_s_Represents_the_bonded_interactio;
static PyObject *__pyx_n_s_RigidBond;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_STRETCHING_FORCE;
static PyObject *__pyx_n_s_STRETCHLIN_FORCE;
static PyObject *__pyx_n_s_SUBT_LJ;
static PyObject *__pyx_n_s_Stretching_Force;
static PyObject *__pyx_n_s_Stretching_Force__getParamsFromE;
static PyObject *__pyx_n_s_Stretching_Force__setParamsInEsC;
static PyObject *__pyx_n_s_Stretching_Force_requiredKeys;
static PyObject *__pyx_n_s_Stretching_Force_setDefaultParam;
static PyObject *__pyx_n_s_Stretching_Force_typeName;
static PyObject *__pyx_n_s_Stretching_Force_typeNumber;
static PyObject *__pyx_n_s_Stretching_Force_validKeys;
static PyObject *__pyx_n_s_Stretchlin_Force;
static PyObject *__pyx_n_s_Stretchlin_Force__getParamsFromE;
static PyObject *__pyx_n_s_Stretchlin_Force__setParamsInEsC;
static PyObject *__pyx_n_s_Stretchlin_Force_requiredKeys;
static PyObject *__pyx_n_s_Stretchlin_Force_setDefaultParam;
static PyObject *__pyx_n_s_Stretchlin_Force_typeName;
static PyObject *__pyx_n_s_Stretchlin_Force_typeNumber;
static PyObject *__pyx_n_s_Stretchlin_Force_validKeys;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction_2;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction_3;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction_4;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction_5;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction_6;
static PyObject *__pyx_kp_s_Subclasses_of_BondedInteraction_7;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti_2;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti_3;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti_4;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti_5;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti_6;
static PyObject *__pyx_kp_s_Subclasses_of_NonBondedInteracti_7;
static PyObject *__pyx_n_s_Subt_Lj;
static PyObject *__pyx_n_s_Subt_Lj__getParamsFromEsCore;
static PyObject *__pyx_n_s_Subt_Lj__setParamsInEsCore;
static PyObject *__pyx_n_s_Subt_Lj_requiredKeys;
static PyObject *__pyx_n_s_Subt_Lj_setDefaultParams;
static PyObject *__pyx_n_s_Subt_Lj_typeName;
static PyObject *__pyx_n_s_Subt_Lj_typeNumber;
static PyObject *__pyx_n_s_Subt_Lj_validKeys;
static PyObject *__pyx_n_s_TABULATED;
static PyObject *__pyx_n_s_Tabulated;
static PyObject *__pyx_n_s_Tabulated__getParamsFromEsCore;
static PyObject *__pyx_n_s_Tabulated__setParamsInEsCore;
static PyObject *__pyx_n_s_Tabulated_requiredKeys;
static PyObject *__pyx_n_s_Tabulated_setDefaultParams;
static PyObject *__pyx_n_s_Tabulated_typeName;
static PyObject *__pyx_n_s_Tabulated_typeNumber;
static PyObject *__pyx_n_s_Tabulated_validKeys;
static PyObject *__pyx_kp_s_The_bond_with_this_id_is_not_def;
static PyObject *__pyx_kp_s_The_bonded_interaction_with_the;
static PyObject *__pyx_kp_s_The_constructor_has_to_be_called;
static PyObject *__pyx_kp_s_The_constructor_has_to_be_called_2;
static PyObject *__pyx_kp_s_The_particle_types_have_to_be_of;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_V0;
static PyObject *__pyx_n_s_VIRTUAL;
static PyObject *__pyx_n_s_VOLUME_FORCE;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_Virtual;
static PyObject *__pyx_n_s_Virtual__getParamsFromEsCore;
static PyObject *__pyx_n_s_Virtual__setParamsInEsCore;
static PyObject *__pyx_n_s_Virtual_requiredKeys;
static PyObject *__pyx_n_s_Virtual_setDefaultParams;
static PyObject *__pyx_n_s_Virtual_typeName;
static PyObject *__pyx_n_s_Virtual_typeNumber;
static PyObject *__pyx_n_s_Virtual_validKeys;
static PyObject *__pyx_n_s_Volume_Force;
static PyObject *__pyx_n_s_Volume_Force__getParamsFromEsCor;
static PyObject *__pyx_n_s_Volume_Force__setParamsInEsCore;
static PyObject *__pyx_n_s_Volume_Force_requiredKeys;
static PyObject *__pyx_n_s_Volume_Force_setDefaultParams;
static PyObject *__pyx_n_s_Volume_Force_typeName;
static PyObject *__pyx_n_s_Volume_Force_typeNumber;
static PyObject *__pyx_n_s_Volume_Force_validKeys;
static PyObject *__pyx_kp_s__43;
static PyObject *__pyx_kp_s__67;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_auto;
static PyObject *__pyx_n_s_b1;
static PyObject *__pyx_n_s_b2;
static PyObject *__pyx_n_s_bend;
static PyObject *__pyx_n_s_bondClass;
static PyObject *__pyx_n_s_bondId;
static PyObject *__pyx_n_s_bondId_2;
static PyObject *__pyx_n_s_bondType;
static PyObject *__pyx_kp_s_bond_in_the_Espresso_core;
static PyObject *__pyx_n_s_bondedInteractionClasses;
static PyObject *__pyx_n_s_class_s;
static PyObject *__pyx_n_s_cutoff;
static PyObject *__pyx_n_s_d_r_max;
static PyObject *__pyx_n_s_defaultParams;
static PyObject *__pyx_n_s_delta;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_e1;
static PyObject *__pyx_n_s_e2;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_epsilon;
static PyObject *__pyx_n_s_espressomd_interactions;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_filename;
static PyObject *__pyx_n_s_genericLennardJones;
static PyObject *__pyx_n_s_getParamsFromEsCore;
static PyObject *__pyx_n_s_getitem;
static PyObject *__pyx_kp_s_home_haozeke_Github_LabBom_espr;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_invstepsize;
static PyObject *__pyx_n_s_isActive;
static PyObject *__pyx_kp_s_is_not_yet_defined;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_k1;
static PyObject *__pyx_n_s_k2;
static PyObject *__pyx_kp_s_k_2;
static PyObject *__pyx_n_s_ka_g;
static PyObject *__pyx_n_s_ka_l;
static PyObject *__pyx_n_s_kb;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_ks;
static PyObject *__pyx_n_s_kslin;
static PyObject *__pyx_n_s_kv;
static PyObject *__pyx_n_s_kwargs;
static PyObject *__pyx_n_s_lambda;
static PyObject *__pyx_n_s_lennardJones;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_maxval;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_min;
static PyObject *__pyx_n_s_minval;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_mult;
static PyObject *__pyx_kp_s_mult_2;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_kp_s_not_compiled_into_Espresso_core;
static PyObject *__pyx_n_s_npoints;
static PyObject *__pyx_n_s_object;
static PyObject *__pyx_n_s_offset;
static PyObject *__pyx_n_s_overlap_type;
static PyObject *__pyx_n_s_params;
static PyObject *__pyx_n_s_params_2;
static PyObject *__pyx_n_s_phase;
static PyObject *__pyx_n_s_phi0;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_r0;
static PyObject *__pyx_n_s_r_0;
static PyObject *__pyx_n_s_r_cut;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_requiredKeys;
static PyObject *__pyx_kp_s_s_has_to_be_defined_in_myconfig;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_s_setDefaultParams;
static PyObject *__pyx_n_s_setParamsInEsCore;
static PyObject *__pyx_n_s_setitem;
static PyObject *__pyx_n_s_shift;
static PyObject *__pyx_n_s_sigma;
static PyObject *__pyx_n_s_str;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_type;
static PyObject *__pyx_n_s_type1;
static PyObject *__pyx_n_s_type1_2;
static PyObject *__pyx_n_s_type2;
static PyObject *__pyx_n_s_type2_2;
static PyObject *__pyx_n_s_typeName;
static PyObject *__pyx_n_s_typeNumber;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_validKeys;
static PyObject *__pyx_n_s_validateParams;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_float_0_;
static PyObject *__pyx_float_1_;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_9;
static PyObject *__pyx_int_11;
static PyObject *__pyx_int_12;
static PyObject *__pyx_int_13;
static PyObject *__pyx_int_14;
static PyObject *__pyx_int_15;
static PyObject *__pyx_int_16;
static PyObject *__pyx_int_17;
static PyObject *__pyx_int_18;
static PyObject *__pyx_int_19;
static PyObject *__pyx_int_20;
static PyObject *__pyx_int_21;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__55;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__73;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__94;
static PyObject *__pyx_tuple__96;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__108;
static PyObject *__pyx_tuple__110;
static PyObject *__pyx_tuple__112;
static PyObject *__pyx_tuple__114;
static PyObject *__pyx_tuple__116;
static PyObject *__pyx_tuple__118;
static PyObject *__pyx_tuple__120;
static PyObject *__pyx_tuple__122;
static PyObject *__pyx_tuple__124;
static PyObject *__pyx_tuple__126;
static PyObject *__pyx_tuple__128;
static PyObject *__pyx_tuple__130;
static PyObject *__pyx_tuple__132;
static PyObject *__pyx_tuple__134;
static PyObject *__pyx_tuple__136;
static PyObject *__pyx_tuple__138;
static PyObject *__pyx_tuple__140;
static PyObject *__pyx_tuple__142;
static PyObject *__pyx_tuple__144;
static PyObject *__pyx_tuple__146;
static PyObject *__pyx_tuple__148;
static PyObject *__pyx_tuple__150;
static PyObject *__pyx_tuple__152;
static PyObject *__pyx_tuple__154;
static PyObject *__pyx_tuple__156;
static PyObject *__pyx_tuple__158;
static PyObject *__pyx_tuple__160;
static PyObject *__pyx_tuple__162;
static PyObject *__pyx_tuple__164;
static PyObject *__pyx_tuple__166;
static PyObject *__pyx_tuple__168;
static PyObject *__pyx_tuple__170;
static PyObject *__pyx_tuple__172;
static PyObject *__pyx_tuple__174;
static PyObject *__pyx_tuple__176;
static PyObject *__pyx_tuple__178;
static PyObject *__pyx_tuple__180;
static PyObject *__pyx_tuple__182;
static PyObject *__pyx_tuple__184;
static PyObject *__pyx_tuple__186;
static PyObject *__pyx_tuple__188;
static PyObject *__pyx_tuple__190;
static PyObject *__pyx_tuple__192;
static PyObject *__pyx_tuple__194;
static PyObject *__pyx_tuple__196;
static PyObject *__pyx_tuple__198;
static PyObject *__pyx_tuple__200;
static PyObject *__pyx_tuple__202;
static PyObject *__pyx_tuple__204;
static PyObject *__pyx_tuple__206;
static PyObject *__pyx_tuple__208;
static PyObject *__pyx_tuple__210;
static PyObject *__pyx_tuple__212;
static PyObject *__pyx_tuple__214;
static PyObject *__pyx_tuple__216;
static PyObject *__pyx_tuple__218;
static PyObject *__pyx_tuple__220;
static PyObject *__pyx_tuple__222;
static PyObject *__pyx_tuple__224;
static PyObject *__pyx_tuple__226;
static PyObject *__pyx_tuple__228;
static PyObject *__pyx_tuple__230;
static PyObject *__pyx_tuple__232;
static PyObject *__pyx_tuple__234;
static PyObject *__pyx_tuple__236;
static PyObject *__pyx_tuple__238;
static PyObject *__pyx_tuple__240;
static PyObject *__pyx_tuple__242;
static PyObject *__pyx_tuple__244;
static PyObject *__pyx_tuple__246;
static PyObject *__pyx_tuple__248;
static PyObject *__pyx_tuple__250;
static PyObject *__pyx_tuple__252;
static PyObject *__pyx_tuple__254;
static PyObject *__pyx_tuple__256;
static PyObject *__pyx_tuple__258;
static PyObject *__pyx_tuple__260;
static PyObject *__pyx_tuple__262;
static PyObject *__pyx_tuple__264;
static PyObject *__pyx_tuple__266;
static PyObject *__pyx_tuple__268;
static PyObject *__pyx_tuple__270;
static PyObject *__pyx_tuple__272;
static PyObject *__pyx_tuple__274;
static PyObject *__pyx_tuple__276;
static PyObject *__pyx_tuple__278;
static PyObject *__pyx_tuple__280;
static PyObject *__pyx_tuple__282;
static PyObject *__pyx_tuple__284;
static PyObject *__pyx_tuple__286;
static PyObject *__pyx_tuple__288;
static PyObject *__pyx_tuple__290;
static PyObject *__pyx_tuple__292;
static PyObject *__pyx_tuple__294;
static PyObject *__pyx_tuple__296;
static PyObject *__pyx_tuple__298;
static PyObject *__pyx_tuple__300;
static PyObject *__pyx_tuple__302;
static PyObject *__pyx_tuple__304;
static PyObject *__pyx_tuple__306;
static PyObject *__pyx_tuple__308;
static PyObject *__pyx_tuple__310;
static PyObject *__pyx_tuple__312;
static PyObject *__pyx_tuple__314;
static PyObject *__pyx_tuple__316;
static PyObject *__pyx_tuple__318;
static PyObject *__pyx_tuple__320;
static PyObject *__pyx_tuple__322;
static PyObject *__pyx_tuple__324;
static PyObject *__pyx_tuple__326;
static PyObject *__pyx_tuple__328;
static PyObject *__pyx_tuple__330;
static PyObject *__pyx_tuple__332;
static PyObject *__pyx_tuple__334;
static PyObject *__pyx_codeobj__77;
static PyObject *__pyx_codeobj__79;
static PyObject *__pyx_codeobj__81;
static PyObject *__pyx_codeobj__83;
static PyObject *__pyx_codeobj__85;
static PyObject *__pyx_codeobj__87;
static PyObject *__pyx_codeobj__89;
static PyObject *__pyx_codeobj__91;
static PyObject *__pyx_codeobj__93;
static PyObject *__pyx_codeobj__95;
static PyObject *__pyx_codeobj__97;
static PyObject *__pyx_codeobj__99;
static PyObject *__pyx_codeobj__101;
static PyObject *__pyx_codeobj__103;
static PyObject *__pyx_codeobj__105;
static PyObject *__pyx_codeobj__107;
static PyObject *__pyx_codeobj__109;
static PyObject *__pyx_codeobj__111;
static PyObject *__pyx_codeobj__113;
static PyObject *__pyx_codeobj__115;
static PyObject *__pyx_codeobj__117;
static PyObject *__pyx_codeobj__119;
static PyObject *__pyx_codeobj__121;
static PyObject *__pyx_codeobj__123;
static PyObject *__pyx_codeobj__125;
static PyObject *__pyx_codeobj__127;
static PyObject *__pyx_codeobj__129;
static PyObject *__pyx_codeobj__131;
static PyObject *__pyx_codeobj__133;
static PyObject *__pyx_codeobj__135;
static PyObject *__pyx_codeobj__137;
static PyObject *__pyx_codeobj__139;
static PyObject *__pyx_codeobj__141;
static PyObject *__pyx_codeobj__143;
static PyObject *__pyx_codeobj__145;
static PyObject *__pyx_codeobj__147;
static PyObject *__pyx_codeobj__149;
static PyObject *__pyx_codeobj__151;
static PyObject *__pyx_codeobj__153;
static PyObject *__pyx_codeobj__155;
static PyObject *__pyx_codeobj__157;
static PyObject *__pyx_codeobj__159;
static PyObject *__pyx_codeobj__161;
static PyObject *__pyx_codeobj__163;
static PyObject *__pyx_codeobj__165;
static PyObject *__pyx_codeobj__167;
static PyObject *__pyx_codeobj__169;
static PyObject *__pyx_codeobj__171;
static PyObject *__pyx_codeobj__173;
static PyObject *__pyx_codeobj__175;
static PyObject *__pyx_codeobj__177;
static PyObject *__pyx_codeobj__179;
static PyObject *__pyx_codeobj__181;
static PyObject *__pyx_codeobj__183;
static PyObject *__pyx_codeobj__185;
static PyObject *__pyx_codeobj__187;
static PyObject *__pyx_codeobj__189;
static PyObject *__pyx_codeobj__191;
static PyObject *__pyx_codeobj__193;
static PyObject *__pyx_codeobj__195;
static PyObject *__pyx_codeobj__197;
static PyObject *__pyx_codeobj__199;
static PyObject *__pyx_codeobj__201;
static PyObject *__pyx_codeobj__203;
static PyObject *__pyx_codeobj__205;
static PyObject *__pyx_codeobj__207;
static PyObject *__pyx_codeobj__209;
static PyObject *__pyx_codeobj__211;
static PyObject *__pyx_codeobj__213;
static PyObject *__pyx_codeobj__215;
static PyObject *__pyx_codeobj__217;
static PyObject *__pyx_codeobj__219;
static PyObject *__pyx_codeobj__221;
static PyObject *__pyx_codeobj__223;
static PyObject *__pyx_codeobj__225;
static PyObject *__pyx_codeobj__227;
static PyObject *__pyx_codeobj__229;
static PyObject *__pyx_codeobj__231;
static PyObject *__pyx_codeobj__233;
static PyObject *__pyx_codeobj__235;
static PyObject *__pyx_codeobj__237;
static PyObject *__pyx_codeobj__239;
static PyObject *__pyx_codeobj__241;
static PyObject *__pyx_codeobj__243;
static PyObject *__pyx_codeobj__245;
static PyObject *__pyx_codeobj__247;
static PyObject *__pyx_codeobj__249;
static PyObject *__pyx_codeobj__251;
static PyObject *__pyx_codeobj__253;
static PyObject *__pyx_codeobj__255;
static PyObject *__pyx_codeobj__257;
static PyObject *__pyx_codeobj__259;
static PyObject *__pyx_codeobj__261;
static PyObject *__pyx_codeobj__263;
static PyObject *__pyx_codeobj__265;
static PyObject *__pyx_codeobj__267;
static PyObject *__pyx_codeobj__269;
static PyObject *__pyx_codeobj__271;
static PyObject *__pyx_codeobj__273;
static PyObject *__pyx_codeobj__275;
static PyObject *__pyx_codeobj__277;
static PyObject *__pyx_codeobj__279;
static PyObject *__pyx_codeobj__281;
static PyObject *__pyx_codeobj__283;
static PyObject *__pyx_codeobj__285;
static PyObject *__pyx_codeobj__287;
static PyObject *__pyx_codeobj__289;
static PyObject *__pyx_codeobj__291;
static PyObject *__pyx_codeobj__293;
static PyObject *__pyx_codeobj__295;
static PyObject *__pyx_codeobj__297;
static PyObject *__pyx_codeobj__299;
static PyObject *__pyx_codeobj__301;
static PyObject *__pyx_codeobj__303;
static PyObject *__pyx_codeobj__305;
static PyObject *__pyx_codeobj__307;
static PyObject *__pyx_codeobj__309;
static PyObject *__pyx_codeobj__311;
static PyObject *__pyx_codeobj__313;
static PyObject *__pyx_codeobj__315;
static PyObject *__pyx_codeobj__317;
static PyObject *__pyx_codeobj__319;
static PyObject *__pyx_codeobj__321;
static PyObject *__pyx_codeobj__323;
static PyObject *__pyx_codeobj__325;
static PyObject *__pyx_codeobj__327;
static PyObject *__pyx_codeobj__329;
static PyObject *__pyx_codeobj__331;
static PyObject *__pyx_codeobj__333;
static PyObject *__pyx_codeobj__335;

/* "espressomd/interactions.pyx":27
 *     cdef object _params
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Represents an instance of a non-bonded interaction, such as lennard jones
 *         Either called with two particle type id, in which case, the interaction
 */

/* Python wrapper */
static int __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_10espressomd_12interactions_20NonBondedInteraction___init__[] = "Represents an instance of a non-bonded interaction, such as lennard jones\n        Either called with two particle type id, in which case, the interaction\n        will represent the bonded interaction as it is defined in Espresso core\n        Or called with keyword arguments describing a new interaction.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_10espressomd_12interactions_20NonBondedInteraction___init__;
#endif
static int __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction___init__(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_10espressomd_12interactions_20NonBondedInteraction___init__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_k = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "espressomd/interactions.pyx":34
 * 
 *         # Interaction id as argument
 *         if len(args) == 2 and isinstance(args[0], int) and isinstance(args[1], int):             # <<<<<<<<<<<<<<
 *             self._partTypes = args
 * 
 */
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_v_args); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((__pyx_t_2 == 2) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_args, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyInt_Check(__pyx_t_4); 
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_1 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_args, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyInt_Check(__pyx_t_4); 
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__pyx_t_5 != 0);
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":35
 *         # Interaction id as argument
 *         if len(args) == 2 and isinstance(args[0], int) and isinstance(args[1], int):
 *             self._partTypes = args             # <<<<<<<<<<<<<<
 * 
 *             # Load the parameters currently set in the Espresso core
 */
    __Pyx_INCREF(__pyx_v_args);
    __Pyx_GIVEREF(__pyx_v_args);
    __Pyx_GOTREF(__pyx_v_self->_partTypes);
    __Pyx_DECREF(__pyx_v_self->_partTypes);
    __pyx_v_self->_partTypes = __pyx_v_args;

    /* "espressomd/interactions.pyx":38
 * 
 *             # Load the parameters currently set in the Espresso core
 *             self._params = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 * 
 *         # Or have we been called with keyword args describing the interaction
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->_params);
    __Pyx_DECREF(__pyx_v_self->_params);
    __pyx_v_self->_params = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }

  /* "espressomd/interactions.pyx":41
 * 
 *         # Or have we been called with keyword args describing the interaction
 *         elif len(args) == 0:             # <<<<<<<<<<<<<<
 *             # Initialize default values
 *             self._params = self.defaultParams()
 */
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_v_args); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = ((__pyx_t_2 == 0) != 0);
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":43
 *         elif len(args) == 0:
 *             # Initialize default values
 *             self._params = self.defaultParams()             # <<<<<<<<<<<<<<
 *             self._partTypes = [-1, -1]
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_defaultParams); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->_params);
    __Pyx_DECREF(__pyx_v_self->_params);
    __pyx_v_self->_params = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "espressomd/interactions.pyx":44
 *             # Initialize default values
 *             self._params = self.defaultParams()
 *             self._partTypes = [-1, -1]             # <<<<<<<<<<<<<<
 * 
 *             # Check if all required keys are given
 */
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_int_neg_1);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_int_neg_1);
    __Pyx_GIVEREF(__pyx_int_neg_1);
    __Pyx_INCREF(__pyx_int_neg_1);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_neg_1);
    __Pyx_GIVEREF(__pyx_int_neg_1);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->_partTypes);
    __Pyx_DECREF(__pyx_v_self->_partTypes);
    __pyx_v_self->_partTypes = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "espressomd/interactions.pyx":47
 * 
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():             # <<<<<<<<<<<<<<
 *                 if k not in kwargs:
 *                     raise ValueError(
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_requiredKeys); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_6 = __pyx_t_4; __Pyx_INCREF(__pyx_t_6); __pyx_t_2 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_2 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_8(__pyx_t_6);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "espressomd/interactions.pyx":48
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():
 *                 if k not in kwargs:             # <<<<<<<<<<<<<<
 *                     raise ValueError(
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 */
      __pyx_t_1 = (__Pyx_PyDict_Contains(__pyx_v_k, __pyx_v_kwargs, Py_NE)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = (__pyx_t_1 != 0);
      if (__pyx_t_3) {

        /* "espressomd/interactions.pyx":50
 *                 if k not in kwargs:
 *                     raise ValueError(
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())             # <<<<<<<<<<<<<<
 * 
 *             self._params = kwargs
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_requiredKeys); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
          }
        }
        if (__pyx_t_10) {
          __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        } else {
          __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_9); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_str); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
          }
        }
        if (__pyx_t_7) {
          __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else {
          __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_9); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyNumber_Add(__pyx_kp_s_At_least_the_following_keys_have, __pyx_t_4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "espressomd/interactions.pyx":49
 *             for k in self.requiredKeys():
 *                 if k not in kwargs:
 *                     raise ValueError(             # <<<<<<<<<<<<<<
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 * 
 */
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_9);
        __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_9, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "espressomd/interactions.pyx":47
 * 
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():             # <<<<<<<<<<<<<<
 *                 if k not in kwargs:
 *                     raise ValueError(
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "espressomd/interactions.pyx":52
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 * 
 *             self._params = kwargs             # <<<<<<<<<<<<<<
 * 
 *             # Validation of parameters
 */
    __Pyx_INCREF(__pyx_v_kwargs);
    __Pyx_GIVEREF(__pyx_v_kwargs);
    __Pyx_GOTREF(__pyx_v_self->_params);
    __Pyx_DECREF(__pyx_v_self->_params);
    __pyx_v_self->_params = __pyx_v_kwargs;

    /* "espressomd/interactions.pyx":55
 * 
 *             # Validation of parameters
 *             self.validateParams()             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_validateParams); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    if (__pyx_t_4) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_9); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "espressomd/interactions.pyx":58
 * 
 *         else:
 *             raise Exception(             # <<<<<<<<<<<<<<
 *                 "The constructor has to be called either with two particle type ids (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "espressomd/interactions.pyx":27
 *     cdef object _params
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Represents an instance of a non-bonded interaction, such as lennard jones
 *         Either called with two particle type id, in which case, the interaction
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":61
 *                 "The constructor has to be called either with two particle type ids (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 *     def isValid(self):             # <<<<<<<<<<<<<<
 *         """Check, if the data stored in the instance still matches what is in Espresso"""
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_3isValid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_10espressomd_12interactions_20NonBondedInteraction_2isValid[] = "Check, if the data stored in the instance still matches what is in Espresso";
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_3isValid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isValid (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_2isValid(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_2isValid(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_v_tempParams = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isValid", 0);

  /* "espressomd/interactions.pyx":66
 *         # check, if the bond parameters saved in the class still match those
 *         # saved in Espresso
 *         tempParams = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 *         if self._params != tempParams:
 *             return False
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_tempParams = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":67
 *         # saved in Espresso
 *         tempParams = self._getParamsFromEsCore()
 *         if self._params != tempParams:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_self->_params, __pyx_v_tempParams, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "espressomd/interactions.pyx":68
 *         tempParams = self._getParamsFromEsCore()
 *         if self._params != tempParams:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         # If we're still here, the instance is valid
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;
  }

  /* "espressomd/interactions.pyx":71
 * 
 *         # If we're still here, the instance is valid
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def getParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":61
 *                 "The constructor has to be called either with two particle type ids (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 *     def isValid(self):             # <<<<<<<<<<<<<<
 *         """Check, if the data stored in the instance still matches what is in Espresso"""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.isValid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tempParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":73
 *         return True
 * 
 *     def getParams(self):             # <<<<<<<<<<<<<<
 *         """Get interaction parameters"""
 *         # If this instance refers to an actual interaction defined in the es core, load
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_5getParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_10espressomd_12interactions_20NonBondedInteraction_4getParams[] = "Get interaction parameters";
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_5getParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_4getParams(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_4getParams(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getParams", 0);

  /* "espressomd/interactions.pyx":77
 *         # If this instance refers to an actual interaction defined in the es core, load
 *         # current parameters from there
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:             # <<<<<<<<<<<<<<
 *             self._params = self._getParamsFromEsCore()
 * 
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_1 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":78
 *         # current parameters from there
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 *             self._params = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 * 
 *         return self._params
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->_params);
    __Pyx_DECREF(__pyx_v_self->_params);
    __pyx_v_self->_params = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "espressomd/interactions.pyx":80
 *             self._params = self._getParamsFromEsCore()
 * 
 *         return self._params             # <<<<<<<<<<<<<<
 * 
 *     def setParams(self, **p):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_params);
  __pyx_r = __pyx_v_self->_params;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":73
 *         return True
 * 
 *     def getParams(self):             # <<<<<<<<<<<<<<
 *         """Get interaction parameters"""
 *         # If this instance refers to an actual interaction defined in the es core, load
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.getParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":82
 *         return self._params
 * 
 *     def setParams(self, **p):             # <<<<<<<<<<<<<<
 *         """Update parameters. Only given """
 *         # Check, if any key was passed, which is not known
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_7setParams(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_10espressomd_12interactions_20NonBondedInteraction_6setParams[] = "Update parameters. Only given ";
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_7setParams(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_p = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setParams (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("setParams", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return NULL;}
  if (__pyx_kwds && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "setParams", 1))) return NULL;
  __pyx_v_p = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_p)) return NULL;
  __Pyx_GOTREF(__pyx_v_p);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_6setParams(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self), __pyx_v_p);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_p);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_6setParams(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setParams", 0);

  /* "espressomd/interactions.pyx":85
 *         """Update parameters. Only given """
 *         # Check, if any key was passed, which is not known
 *         for k in p.keys():             # <<<<<<<<<<<<<<
 *             if k not in self.validKeys():
 *                 raise ValueError(
 */
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "espressomd/interactions.pyx":86
 *         # Check, if any key was passed, which is not known
 *         for k in p.keys():
 *             if k not in self.validKeys():             # <<<<<<<<<<<<<<
 *                 raise ValueError(
 *                     "Only the following keys are supported: " + self.validKeys().__str__())
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_validKeys); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = (__Pyx_PySequence_Contains(__pyx_v_k, __pyx_t_1, Py_NE)); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = (__pyx_t_7 != 0);
    if (__pyx_t_8) {

      /* "espressomd/interactions.pyx":88
 *             if k not in self.validKeys():
 *                 raise ValueError(
 *                     "Only the following keys are supported: " + self.validKeys().__str__())             # <<<<<<<<<<<<<<
 * 
 *         # When an interaction is newly activated, all required keys must be
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_validKeys); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      if (__pyx_t_9) {
        __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_9); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_str); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      if (__pyx_t_5) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(__pyx_kp_s_Only_the_following_keys_are_supp, __pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "espressomd/interactions.pyx":87
 *         for k in p.keys():
 *             if k not in self.validKeys():
 *                 raise ValueError(             # <<<<<<<<<<<<<<
 *                     "Only the following keys are supported: " + self.validKeys().__str__())
 * 
 */
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_1, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "espressomd/interactions.pyx":85
 *         """Update parameters. Only given """
 *         # Check, if any key was passed, which is not known
 *         for k in p.keys():             # <<<<<<<<<<<<<<
 *             if k not in self.validKeys():
 *                 raise ValueError(
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":92
 *         # When an interaction is newly activated, all required keys must be
 *         # given
 *         if not self.isActive():             # <<<<<<<<<<<<<<
 *             for k in self.requiredKeys():
 *                 if k not in p:
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isActive); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = ((!__pyx_t_8) != 0);
  if (__pyx_t_7) {

    /* "espressomd/interactions.pyx":93
 *         # given
 *         if not self.isActive():
 *             for k in self.requiredKeys():             # <<<<<<<<<<<<<<
 *                 if k not in p:
 *                     raise ValueError(
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_requiredKeys); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_1) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_3 = 0;
      __pyx_t_4 = NULL;
    } else {
      __pyx_t_3 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_4)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_4(__pyx_t_6);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "espressomd/interactions.pyx":94
 *         if not self.isActive():
 *             for k in self.requiredKeys():
 *                 if k not in p:             # <<<<<<<<<<<<<<
 *                     raise ValueError(
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 */
      __pyx_t_7 = (__Pyx_PyDict_Contains(__pyx_v_k, __pyx_v_p, Py_NE)); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = (__pyx_t_7 != 0);
      if (__pyx_t_8) {

        /* "espressomd/interactions.pyx":96
 *                 if k not in p:
 *                     raise ValueError(
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())             # <<<<<<<<<<<<<<
 * 
 *         # If this instance refers to an interaction defined in the espresso core,
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_requiredKeys); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_9 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_9)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_9);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        if (__pyx_t_9) {
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        } else {
          __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_str); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        if (__pyx_t_1) {
          __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        } else {
          __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_kp_s_At_least_the_following_keys_have, __pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "espressomd/interactions.pyx":95
 *             for k in self.requiredKeys():
 *                 if k not in p:
 *                     raise ValueError(             # <<<<<<<<<<<<<<
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 * 
 */
        __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "espressomd/interactions.pyx":93
 *         # given
 *         if not self.isActive():
 *             for k in self.requiredKeys():             # <<<<<<<<<<<<<<
 *                 if k not in p:
 *                     raise ValueError(
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "espressomd/interactions.pyx":101
 *         # load the parameters from there
 * 
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:             # <<<<<<<<<<<<<<
 *             self._params = self._getParamsFromEsCore()
 * 
 */
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_6, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L11_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_5, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_8 = __pyx_t_7;
  __pyx_L11_bool_binop_done:;
  if (__pyx_t_8) {

    /* "espressomd/interactions.pyx":102
 * 
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 *             self._params = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 * 
 *         # Put in values given by the user
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_2) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_6);
    __Pyx_GOTREF(__pyx_v_self->_params);
    __Pyx_DECREF(__pyx_v_self->_params);
    __pyx_v_self->_params = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L10;
  }
  __pyx_L10:;

  /* "espressomd/interactions.pyx":105
 * 
 *         # Put in values given by the user
 *         self._params.update(p)             # <<<<<<<<<<<<<<
 * 
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->_params, __pyx_n_s_update); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_p); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
  } else {
    __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(__pyx_v_p);
    PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_v_p);
    __Pyx_GIVEREF(__pyx_v_p);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "espressomd/interactions.pyx":107
 *         self._params.update(p)
 * 
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:             # <<<<<<<<<<<<<<
 *             self._setParamsInEsCore()
 * 
 */
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_6, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L14_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_5, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_8 = __pyx_t_7;
  __pyx_L14_bool_binop_done:;
  if (__pyx_t_8) {

    /* "espressomd/interactions.pyx":108
 * 
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 *             self._setParamsInEsCore()             # <<<<<<<<<<<<<<
 * 
 *     def validateParams(self):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setParamsInEsCore); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_1) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L13;
  }
  __pyx_L13:;

  /* "espressomd/interactions.pyx":82
 *         return self._params
 * 
 *     def setParams(self, **p):             # <<<<<<<<<<<<<<
 *         """Update parameters. Only given """
 *         # Check, if any key was passed, which is not known
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.setParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":110
 *             self._setParamsInEsCore()
 * 
 *     def validateParams(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_9validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_9validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validateParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_8validateParams(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_8validateParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validateParams", 0);

  /* "espressomd/interactions.pyx":111
 * 
 *     def validateParams(self):
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":110
 *             self._setParamsInEsCore()
 * 
 *     def validateParams(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":113
 *         return True
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_11_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_11_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_getParamsFromEsCore(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_getParamsFromEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":114
 * 
 *     def _getParamsFromEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":113
 *         return True
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":117
 *             "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_13_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_13_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_12_setParamsInEsCore(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_12_setParamsInEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":118
 * 
 *     def _setParamsInEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":117
 *             "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":121
 *             "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.")
 * 
 *     def defaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the defaultParams() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_15defaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_15defaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("defaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_14defaultParams(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_14defaultParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("defaultParams", 0);

  /* "espressomd/interactions.pyx":122
 * 
 *     def defaultParams(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the defaultParams() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":121
 *             "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.")
 * 
 *     def defaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the defaultParams() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.defaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":125
 *             "Subclasses of NonBondedInteraction must define the defaultParams() method.")
 * 
 *     def isActive(self):             # <<<<<<<<<<<<<<
 *         # If this instance refers to an actual interaction defined in the es core, load
 *         # current parameters from there
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_17isActive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_17isActive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isActive (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_16isActive(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_16isActive(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isActive", 0);

  /* "espressomd/interactions.pyx":128
 *         # If this instance refers to an actual interaction defined in the es core, load
 *         # current parameters from there
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:             # <<<<<<<<<<<<<<
 *             self._params = self._getParamsFromEsCore()
 *         raise Exception(
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_1 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_self->_partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":129
 *         # current parameters from there
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 *             self._params = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the isActive() method.")
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->_params);
    __Pyx_DECREF(__pyx_v_self->_params);
    __pyx_v_self->_params = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "espressomd/interactions.pyx":130
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 *             self._params = self._getParamsFromEsCore()
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the isActive() method.")
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":125
 *             "Subclasses of NonBondedInteraction must define the defaultParams() method.")
 * 
 *     def isActive(self):             # <<<<<<<<<<<<<<
 *         # If this instance refers to an actual interaction defined in the es core, load
 *         # current parameters from there
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.isActive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":133
 *             "Subclasses of NonBondedInteraction must define the isActive() method.")
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the typeName() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_19typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_19typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_18typeName(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_18typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":134
 * 
 *     def typeName(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the typeName() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":133
 *             "Subclasses of NonBondedInteraction must define the isActive() method.")
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the typeName() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.typeName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":137
 *             "Subclasses of NonBondedInteraction must define the typeName() method.")
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the validKeys() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_21validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_21validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_20validKeys(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_20validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":138
 * 
 *     def validKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the validKeys() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":137
 *             "Subclasses of NonBondedInteraction must define the typeName() method.")
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the validKeys() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.validKeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":141
 *             "Subclasses of NonBondedInteraction must define the validKeys() method.")
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the requiredKeys() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_23requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_23requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_22requiredKeys(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_22requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":142
 * 
 *     def requiredKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the requiredKeys() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":141
 *             "Subclasses of NonBondedInteraction must define the validKeys() method.")
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of NonBondedInteraction must define the requiredKeys() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteraction.requiredKeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":24
 * cdef class NonBondedInteraction(object):
 * 
 *     cdef public object _partTypes             # <<<<<<<<<<<<<<
 *     cdef object _params
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes___get__(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes___get__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_partTypes);
  __pyx_r = __pyx_v_self->_partTypes;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_2__set__(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_2__set__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_partTypes);
  __Pyx_DECREF(__pyx_v_self->_partTypes);
  __pyx_v_self->_partTypes = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_4__del__(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_4__del__(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_partTypes);
  __Pyx_DECREF(__pyx_v_self->_partTypes);
  __pyx_v_self->_partTypes = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":149
 * cdef class LennardJonesInteraction(NonBondedInteraction):
 *     if LENNARD_JONES == 1:
 *         def validateParams(self):             # <<<<<<<<<<<<<<
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Lennard-Jones eps has to be >=0")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_1validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_1validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validateParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_validateParams(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_validateParams(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("validateParams", 0);

  /* "espressomd/interactions.pyx":150
 *     if LENNARD_JONES == 1:
 *         def validateParams(self):
 *             if self._params["epsilon"] < 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_epsilon); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "espressomd/interactions.pyx":151
 *         def validateParams(self):
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Lennard-Jones eps has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":152
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "espressomd/interactions.pyx":153
 *                 raise ValueError("Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Lennard-Jones cutoff has to be >=0")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":154
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Lennard-Jones cutoff has to be >=0")
 *             return True
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "espressomd/interactions.pyx":155
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Lennard-Jones cutoff has to be >=0")             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":156
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Lennard-Jones cutoff has to be >=0")
 *             return True             # <<<<<<<<<<<<<<
 * 
 *         def _getParamsFromEsCore(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":149
 * cdef class LennardJonesInteraction(NonBondedInteraction):
 *     if LENNARD_JONES == 1:
 *         def validateParams(self):             # <<<<<<<<<<<<<<
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Lennard-Jones eps has to be >=0")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.LennardJonesInteraction.validateParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":158
 *             return True
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_3_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_3_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_2_getParamsFromEsCore(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_2_getParamsFromEsCore(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  IA_parameters *__pyx_v_iaParams;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":160
 *         def _getParamsFromEsCore(self):
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])             # <<<<<<<<<<<<<<
 *             return {
 *                 "epsilon": iaParams.LJ_eps,
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_iaParams = get_ia_param(__pyx_t_2, __pyx_t_3);

  /* "espressomd/interactions.pyx":161
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 *             return {             # <<<<<<<<<<<<<<
 *                 "epsilon": iaParams.LJ_eps,
 *                 "sigma": iaParams.LJ_sig,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "espressomd/interactions.pyx":162
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 *             return {
 *                 "epsilon": iaParams.LJ_eps,             # <<<<<<<<<<<<<<
 *                 "sigma": iaParams.LJ_sig,
 *                 "cutoff": iaParams.LJ_cut,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJ_eps); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_epsilon, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":163
 *             return {
 *                 "epsilon": iaParams.LJ_eps,
 *                 "sigma": iaParams.LJ_sig,             # <<<<<<<<<<<<<<
 *                 "cutoff": iaParams.LJ_cut,
 *                 "shift": iaParams.LJ_shift,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJ_sig); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_sigma, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":164
 *                 "epsilon": iaParams.LJ_eps,
 *                 "sigma": iaParams.LJ_sig,
 *                 "cutoff": iaParams.LJ_cut,             # <<<<<<<<<<<<<<
 *                 "shift": iaParams.LJ_shift,
 *                 "offset": iaParams.LJ_offset,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJ_cut); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_cutoff, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":165
 *                 "sigma": iaParams.LJ_sig,
 *                 "cutoff": iaParams.LJ_cut,
 *                 "shift": iaParams.LJ_shift,             # <<<<<<<<<<<<<<
 *                 "offset": iaParams.LJ_offset,
 *                 "min": iaParams.LJ_min}
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJ_shift); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_shift, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":166
 *                 "cutoff": iaParams.LJ_cut,
 *                 "shift": iaParams.LJ_shift,
 *                 "offset": iaParams.LJ_offset,             # <<<<<<<<<<<<<<
 *                 "min": iaParams.LJ_min}
 * 
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJ_offset); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_offset, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":167
 *                 "shift": iaParams.LJ_shift,
 *                 "offset": iaParams.LJ_offset,
 *                 "min": iaParams.LJ_min}             # <<<<<<<<<<<<<<
 * 
 *         def isActive(self):
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJ_min); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_min, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":158
 *             return True
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("espressomd.interactions.LennardJonesInteraction._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":169
 *                 "min": iaParams.LJ_min}
 * 
 *         def isActive(self):             # <<<<<<<<<<<<<<
 *             return (self._params["epsilon"] > 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_5isActive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_5isActive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isActive (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_4isActive(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_4isActive(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isActive", 0);

  /* "espressomd/interactions.pyx":170
 * 
 *         def isActive(self):
 *             return (self._params["epsilon"] > 0)             # <<<<<<<<<<<<<<
 * 
 *         def _setParamsInEsCore(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_epsilon); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":169
 *                 "min": iaParams.LJ_min}
 * 
 *         def isActive(self):             # <<<<<<<<<<<<<<
 *             return (self._params["epsilon"] > 0)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.LennardJonesInteraction.isActive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":172
 *             return (self._params["epsilon"] > 0)
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             # Handle the case of shift="auto"
 *             if self._params["shift"] == "auto":
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_7_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_7_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_6_setParamsInEsCore(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_6_setParamsInEsCore(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  double __pyx_t_8;
  double __pyx_t_9;
  double __pyx_t_10;
  double __pyx_t_11;
  double __pyx_t_12;
  double __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":174
 *         def _setParamsInEsCore(self):
 *             # Handle the case of shift="auto"
 *             if self._params["shift"] == "auto":             # <<<<<<<<<<<<<<
 *                 # Calc shift
 *                 self._params["shift"] = -((self._params["sigma"] / self._params["cutoff"])**12 - (
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_shift); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_auto, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":176
 *             if self._params["shift"] == "auto":
 *                 # Calc shift
 *                 self._params["shift"] = -((self._params["sigma"] / self._params["cutoff"])**12 - (             # <<<<<<<<<<<<<<
 *                     self._params["sigma"] / self._params["cutoff"])**6)
 * 
 */
    __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Power(__pyx_t_4, __pyx_int_12, Py_None); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "espressomd/interactions.pyx":177
 *                 # Calc shift
 *                 self._params["shift"] = -((self._params["sigma"] / self._params["cutoff"])**12 - (
 *                     self._params["sigma"] / self._params["cutoff"])**6)             # <<<<<<<<<<<<<<
 * 
 *             if lennard_jones_set_params(self._partTypes[0], self._partTypes[1],
 */
    __pyx_t_4 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Power(__pyx_t_5, __pyx_int_6, Py_None); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "espressomd/interactions.pyx":176
 *             if self._params["shift"] == "auto":
 *                 # Calc shift
 *                 self._params["shift"] = -((self._params["sigma"] / self._params["cutoff"])**12 - (             # <<<<<<<<<<<<<<
 *                     self._params["sigma"] / self._params["cutoff"])**6)
 * 
 */
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Negative(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_shift, __pyx_t_1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "espressomd/interactions.pyx":179
 *                     self._params["sigma"] / self._params["cutoff"])**6)
 * 
 *             if lennard_jones_set_params(self._partTypes[0], self._partTypes[1],             # <<<<<<<<<<<<<<
 *                                         self._params["epsilon"],
 *                                         self._params["sigma"],
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":180
 * 
 *             if lennard_jones_set_params(self._partTypes[0], self._partTypes[1],
 *                                         self._params["epsilon"],             # <<<<<<<<<<<<<<
 *                                         self._params["sigma"],
 *                                         self._params["cutoff"],
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_epsilon); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":181
 *             if lennard_jones_set_params(self._partTypes[0], self._partTypes[1],
 *                                         self._params["epsilon"],
 *                                         self._params["sigma"],             # <<<<<<<<<<<<<<
 *                                         self._params["cutoff"],
 *                                         self._params["shift"],
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":182
 *                                         self._params["epsilon"],
 *                                         self._params["sigma"],
 *                                         self._params["cutoff"],             # <<<<<<<<<<<<<<
 *                                         self._params["shift"],
 *                                         self._params["offset"],
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":183
 *                                         self._params["sigma"],
 *                                         self._params["cutoff"],
 *                                         self._params["shift"],             # <<<<<<<<<<<<<<
 *                                         self._params["offset"],
 *                                         0.0,
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_shift); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":184
 *                                         self._params["cutoff"],
 *                                         self._params["shift"],
 *                                         self._params["offset"],             # <<<<<<<<<<<<<<
 *                                         0.0,
 *                                         self._params["min"]):
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_offset); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":186
 *                                         self._params["offset"],
 *                                         0.0,
 *                                         self._params["min"]):             # <<<<<<<<<<<<<<
 *                 raise Exception("Could not set Lennard Jones parameters")
 * 
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_min); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":179
 *                     self._params["sigma"] / self._params["cutoff"])**6)
 * 
 *             if lennard_jones_set_params(self._partTypes[0], self._partTypes[1],             # <<<<<<<<<<<<<<
 *                                         self._params["epsilon"],
 *                                         self._params["sigma"],
 */
  __pyx_t_2 = (lennard_jones_set_params(__pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, 0.0, __pyx_t_13) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":187
 *                                         0.0,
 *                                         self._params["min"]):
 *                 raise Exception("Could not set Lennard Jones parameters")             # <<<<<<<<<<<<<<
 * 
 *         def defaultParams(self):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":172
 *             return (self._params["epsilon"] > 0)
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             # Handle the case of shift="auto"
 *             if self._params["shift"] == "auto":
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("espressomd.interactions.LennardJonesInteraction._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":189
 *                 raise Exception("Could not set Lennard Jones parameters")
 * 
 *         def defaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {
 *                 "epsilon": 0.,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_9defaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_9defaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("defaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_8defaultParams(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_8defaultParams(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("defaultParams", 0);

  /* "espressomd/interactions.pyx":190
 * 
 *         def defaultParams(self):
 *             self._params = {             # <<<<<<<<<<<<<<
 *                 "epsilon": 0.,
 *                 "sigma": 0.,
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_epsilon, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_sigma, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_cutoff, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_shift, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_offset, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_min, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._params);
  __Pyx_DECREF(__pyx_v_self->__pyx_base._params);
  __pyx_v_self->__pyx_base._params = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":189
 *                 raise Exception("Could not set Lennard Jones parameters")
 * 
 *         def defaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {
 *                 "epsilon": 0.,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.LennardJonesInteraction.defaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":198
 *                 "min": 0.}
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "LennardJones"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_11typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_11typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_10typeName(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_10typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":199
 * 
 *         def typeName(self):
 *             return "LennardJones"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_LennardJones);
  __pyx_r = __pyx_n_s_LennardJones;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":198
 *                 "min": 0.}
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "LennardJones"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":201
 *             return "LennardJones"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "min"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_13validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_13validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_12validKeys(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_12validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":202
 * 
 *         def validKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "min"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__13);
  __pyx_r = __pyx_tuple__13;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":201
 *             return "LennardJones"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "min"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":204
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "min"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_15requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_15requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_14requiredKeys(((struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_23LennardJonesInteraction_14requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":205
 * 
 *         def requiredKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift"             # <<<<<<<<<<<<<<
 * 
 * # Generic Lennard Jones
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__14);
  __pyx_r = __pyx_tuple__14;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":204
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "min"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":211
 * cdef class GenericLennardJonesInteraction(NonBondedInteraction):
 *     if LENNARD_JONES_GENERIC == 1:
 *         def validateParams(self):             # <<<<<<<<<<<<<<
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_1validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_1validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validateParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_validateParams(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_validateParams(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("validateParams", 0);

  /* "espressomd/interactions.pyx":212
 *     if LENNARD_JONES_GENERIC == 1:
 *         def validateParams(self):
 *             if self._params["epsilon"] < 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_epsilon); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "espressomd/interactions.pyx":213
 *         def validateParams(self):
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":214
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "espressomd/interactions.pyx":215
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Generic Lennard-Jones cutoff has to be >=0")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":216
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Generic Lennard-Jones cutoff has to be >=0")
 *             return True
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "espressomd/interactions.pyx":217
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Generic Lennard-Jones cutoff has to be >=0")             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":218
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Generic Lennard-Jones cutoff has to be >=0")
 *             return True             # <<<<<<<<<<<<<<
 * 
 *         def _getParamsFromEsCore(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":211
 * cdef class GenericLennardJonesInteraction(NonBondedInteraction):
 *     if LENNARD_JONES_GENERIC == 1:
 *         def validateParams(self):             # <<<<<<<<<<<<<<
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.GenericLennardJonesInteraction.validateParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":220
 *             return True
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_3_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_3_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_2_getParamsFromEsCore(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_2_getParamsFromEsCore(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  IA_parameters *__pyx_v_iaParams;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":222
 *         def _getParamsFromEsCore(self):
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])             # <<<<<<<<<<<<<<
 *             return {
 *                 "epsilon": iaParams.LJGEN_eps,
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_iaParams = get_ia_param(__pyx_t_2, __pyx_t_3);

  /* "espressomd/interactions.pyx":223
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 *             return {             # <<<<<<<<<<<<<<
 *                 "epsilon": iaParams.LJGEN_eps,
 *                 "sigma": iaParams.LJGEN_sig,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "espressomd/interactions.pyx":224
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 *             return {
 *                 "epsilon": iaParams.LJGEN_eps,             # <<<<<<<<<<<<<<
 *                 "sigma": iaParams.LJGEN_sig,
 *                 "cutoff": iaParams.LJGEN_cut,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_eps); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_epsilon, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":225
 *             return {
 *                 "epsilon": iaParams.LJGEN_eps,
 *                 "sigma": iaParams.LJGEN_sig,             # <<<<<<<<<<<<<<
 *                 "cutoff": iaParams.LJGEN_cut,
 *                 "shift": iaParams.LJGEN_shift,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_sig); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_sigma, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":226
 *                 "epsilon": iaParams.LJGEN_eps,
 *                 "sigma": iaParams.LJGEN_sig,
 *                 "cutoff": iaParams.LJGEN_cut,             # <<<<<<<<<<<<<<
 *                 "shift": iaParams.LJGEN_shift,
 *                 "offset": iaParams.LJGEN_offset,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_cut); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_cutoff, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":227
 *                 "sigma": iaParams.LJGEN_sig,
 *                 "cutoff": iaParams.LJGEN_cut,
 *                 "shift": iaParams.LJGEN_shift,             # <<<<<<<<<<<<<<
 *                 "offset": iaParams.LJGEN_offset,
 *                 "e1": iaParams.LJGEN_a1,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_shift); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_shift, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":228
 *                 "cutoff": iaParams.LJGEN_cut,
 *                 "shift": iaParams.LJGEN_shift,
 *                 "offset": iaParams.LJGEN_offset,             # <<<<<<<<<<<<<<
 *                 "e1": iaParams.LJGEN_a1,
 *                 "e2": iaParams.LJGEN_a2,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_offset); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_offset, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":229
 *                 "shift": iaParams.LJGEN_shift,
 *                 "offset": iaParams.LJGEN_offset,
 *                 "e1": iaParams.LJGEN_a1,             # <<<<<<<<<<<<<<
 *                 "e2": iaParams.LJGEN_a2,
 *                 "b1": iaParams.LJGEN_b1,
 */
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_iaParams->LJGEN_a1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_e1, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":230
 *                 "offset": iaParams.LJGEN_offset,
 *                 "e1": iaParams.LJGEN_a1,
 *                 "e2": iaParams.LJGEN_a2,             # <<<<<<<<<<<<<<
 *                 "b1": iaParams.LJGEN_b1,
 *                 "b2": iaParams.LJGEN_b2,
 */
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_iaParams->LJGEN_a2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_e2, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":231
 *                 "e1": iaParams.LJGEN_a1,
 *                 "e2": iaParams.LJGEN_a2,
 *                 "b1": iaParams.LJGEN_b1,             # <<<<<<<<<<<<<<
 *                 "b2": iaParams.LJGEN_b2,
 *                 "lambda": iaParams.LJGEN_lambda,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_b1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_b1, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":232
 *                 "e2": iaParams.LJGEN_a2,
 *                 "b1": iaParams.LJGEN_b1,
 *                 "b2": iaParams.LJGEN_b2,             # <<<<<<<<<<<<<<
 *                 "lambda": iaParams.LJGEN_lambda,
 *                 "delta": iaParams.LJGEN_softrad
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_b2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_b2, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":233
 *                 "b1": iaParams.LJGEN_b1,
 *                 "b2": iaParams.LJGEN_b2,
 *                 "lambda": iaParams.LJGEN_lambda,             # <<<<<<<<<<<<<<
 *                 "delta": iaParams.LJGEN_softrad
 *             }
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_lambda); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_lambda, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":234
 *                 "b2": iaParams.LJGEN_b2,
 *                 "lambda": iaParams.LJGEN_lambda,
 *                 "delta": iaParams.LJGEN_softrad             # <<<<<<<<<<<<<<
 *             }
 * 
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_iaParams->LJGEN_softrad); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_delta, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":220
 *             return True
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             cdef IA_parameters * iaParams
 *             iaParams = get_ia_param(self._partTypes[0], self._partTypes[1])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("espressomd.interactions.GenericLennardJonesInteraction._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":237
 *             }
 * 
 *         def isActive(self):             # <<<<<<<<<<<<<<
 *             return (self._params["epsilon"] > 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_5isActive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_5isActive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isActive (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_4isActive(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_4isActive(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isActive", 0);

  /* "espressomd/interactions.pyx":238
 * 
 *         def isActive(self):
 *             return (self._params["epsilon"] > 0)             # <<<<<<<<<<<<<<
 * 
 *         def _setParamsInEsCore(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_epsilon); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":237
 *             }
 * 
 *         def isActive(self):             # <<<<<<<<<<<<<<
 *             return (self._params["epsilon"] > 0)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.GenericLennardJonesInteraction.isActive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":240
 *             return (self._params["epsilon"] > 0)
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             # Handle the case of shift="auto"
 *             if self._params["shift"] == "auto":
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_7_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_7_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_6_setParamsInEsCore(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_6_setParamsInEsCore(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  double __pyx_t_9;
  double __pyx_t_10;
  double __pyx_t_11;
  double __pyx_t_12;
  double __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  double __pyx_t_16;
  double __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":242
 *         def _setParamsInEsCore(self):
 *             # Handle the case of shift="auto"
 *             if self._params["shift"] == "auto":             # <<<<<<<<<<<<<<
 *                 # Calc shift
 *                 self._params["shift"] = -(self._params["b1"] * (self._params["sigma"] / self._params["cutoff"])**self._params[
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_shift); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_auto, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":244
 *             if self._params["shift"] == "auto":
 *                 # Calc shift
 *                 self._params["shift"] = -(self._params["b1"] * (self._params["sigma"] / self._params["cutoff"])**self._params[             # <<<<<<<<<<<<<<
 *                                           "e1"] - self._params["b2"] * (self._params["sigma"] / self._params["cutoff"])**self._params["e2"])
 *             IF LJGEN_SOFTCORE:
 */
    __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_b1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_e1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Power(__pyx_t_5, __pyx_t_4, Py_None); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "espressomd/interactions.pyx":245
 *                 # Calc shift
 *                 self._params["shift"] = -(self._params["b1"] * (self._params["sigma"] / self._params["cutoff"])**self._params[
 *                                           "e1"] - self._params["b2"] * (self._params["sigma"] / self._params["cutoff"])**self._params["e2"])             # <<<<<<<<<<<<<<
 *             IF LJGEN_SOFTCORE:
 *                 if ljgen_set_params(self._partTypes[0], self._partTypes[1],
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_b2); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_e2); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyNumber_Power(__pyx_t_6, __pyx_t_5, Py_None); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Subtract(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "espressomd/interactions.pyx":244
 *             if self._params["shift"] == "auto":
 *                 # Calc shift
 *                 self._params["shift"] = -(self._params["b1"] * (self._params["sigma"] / self._params["cutoff"])**self._params[             # <<<<<<<<<<<<<<
 *                                           "e1"] - self._params["b2"] * (self._params["sigma"] / self._params["cutoff"])**self._params["e2"])
 *             IF LJGEN_SOFTCORE:
 */
    __pyx_t_5 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_shift, __pyx_t_5) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "espressomd/interactions.pyx":263
 *                         "Could not set Generic Lennard Jones parameters")
 *             ELSE:
 *                 if ljgen_set_params(self._partTypes[0], self._partTypes[1],             # <<<<<<<<<<<<<<
 *                                     self._params["epsilon"],
 *                                     self._params["sigma"],
 */
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_self->__pyx_base._partTypes, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":264
 *             ELSE:
 *                 if ljgen_set_params(self._partTypes[0], self._partTypes[1],
 *                                     self._params["epsilon"],             # <<<<<<<<<<<<<<
 *                                     self._params["sigma"],
 *                                     self._params["cutoff"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_epsilon); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":265
 *                 if ljgen_set_params(self._partTypes[0], self._partTypes[1],
 *                                     self._params["epsilon"],
 *                                     self._params["sigma"],             # <<<<<<<<<<<<<<
 *                                     self._params["cutoff"],
 *                                     self._params["shift"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_sigma); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":266
 *                                     self._params["epsilon"],
 *                                     self._params["sigma"],
 *                                     self._params["cutoff"],             # <<<<<<<<<<<<<<
 *                                     self._params["shift"],
 *                                     self._params["offset"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_cutoff); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":267
 *                                     self._params["sigma"],
 *                                     self._params["cutoff"],
 *                                     self._params["shift"],             # <<<<<<<<<<<<<<
 *                                     self._params["offset"],
 *                                     self._params["e1"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_shift); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":268
 *                                     self._params["cutoff"],
 *                                     self._params["shift"],
 *                                     self._params["offset"],             # <<<<<<<<<<<<<<
 *                                     self._params["e1"],
 *                                     self._params["e2"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_offset); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":269
 *                                     self._params["shift"],
 *                                     self._params["offset"],
 *                                     self._params["e1"],             # <<<<<<<<<<<<<<
 *                                     self._params["e2"],
 *                                     self._params["b1"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_e1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":270
 *                                     self._params["offset"],
 *                                     self._params["e1"],
 *                                     self._params["e2"],             # <<<<<<<<<<<<<<
 *                                     self._params["b1"],
 *                                     self._params["b2"],
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_e2); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":271
 *                                     self._params["e1"],
 *                                     self._params["e2"],
 *                                     self._params["b1"],             # <<<<<<<<<<<<<<
 *                                     self._params["b2"],
 *                                     0.0):
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_b1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":272
 *                                     self._params["e2"],
 *                                     self._params["b1"],
 *                                     self._params["b2"],             # <<<<<<<<<<<<<<
 *                                     0.0):
 *                     raise Exception(
 */
  __pyx_t_5 = PyObject_GetItem(__pyx_v_self->__pyx_base._params, __pyx_n_s_b2); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_17 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_17 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":263
 *                         "Could not set Generic Lennard Jones parameters")
 *             ELSE:
 *                 if ljgen_set_params(self._partTypes[0], self._partTypes[1],             # <<<<<<<<<<<<<<
 *                                     self._params["epsilon"],
 *                                     self._params["sigma"],
 */
  __pyx_t_2 = (ljgen_set_params(__pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, __pyx_t_13, __pyx_t_14, __pyx_t_15, __pyx_t_16, __pyx_t_17, 0.0) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":274
 *                                     self._params["b2"],
 *                                     0.0):
 *                     raise Exception(             # <<<<<<<<<<<<<<
 *                         "Could not set Generic Lennard Jones parameters")
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":240
 *             return (self._params["epsilon"] > 0)
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             # Handle the case of shift="auto"
 *             if self._params["shift"] == "auto":
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("espressomd.interactions.GenericLennardJonesInteraction._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":277
 *                         "Could not set Generic Lennard Jones parameters")
 * 
 *         def defaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {
 *                 "epsilon": 0.,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_9defaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_9defaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("defaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_8defaultParams(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_8defaultParams(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("defaultParams", 0);

  /* "espressomd/interactions.pyx":278
 * 
 *         def defaultParams(self):
 *             self._params = {             # <<<<<<<<<<<<<<
 *                 "epsilon": 0.,
 *                 "sigma": 0.,
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_epsilon, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_sigma, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_cutoff, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_shift, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_offset, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_e1, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_e2, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_b1, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_b2, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_delta, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_lambda, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._params);
  __Pyx_DECREF(__pyx_v_self->__pyx_base._params);
  __pyx_v_self->__pyx_base._params = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":277
 *                         "Could not set Generic Lennard Jones parameters")
 * 
 *         def defaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {
 *                 "epsilon": 0.,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.GenericLennardJonesInteraction.defaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":291
 *                 "lambda": 0.}
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "GenericLennardJones"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_11typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_11typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_10typeName(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_10typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":292
 * 
 *         def typeName(self):
 *             return "GenericLennardJones"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_GenericLennardJones);
  __pyx_r = __pyx_n_s_GenericLennardJones;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":291
 *                 "lambda": 0.}
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "GenericLennardJones"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":294
 *             return "GenericLennardJones"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2", "delta", "lambda"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_13validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_13validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_12validKeys(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_12validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":295
 * 
 *         def validKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2", "delta", "lambda"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__19);
  __pyx_r = __pyx_tuple__19;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":294
 *             return "GenericLennardJones"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2", "delta", "lambda"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":297
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2", "delta", "lambda"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_15requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_15requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_14requiredKeys(((struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30GenericLennardJonesInteraction_14requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":298
 * 
 *         def requiredKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__20);
  __pyx_r = __pyx_tuple__20;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":297
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2", "delta", "lambda"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":312
 *     lennardJones = None
 * 
 *     def __init__(self, _type1, _type2):             # <<<<<<<<<<<<<<
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_26NonBondedInteractionHandle_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_10espressomd_12interactions_26NonBondedInteractionHandle___init__[] = "Takes two particle types as argument";
static PyMethodDef __pyx_mdef_10espressomd_12interactions_26NonBondedInteractionHandle_1__init__ = {"__init__", (PyCFunction)__pyx_pw_10espressomd_12interactions_26NonBondedInteractionHandle_1__init__, METH_VARARGS|METH_KEYWORDS, __pyx_doc_10espressomd_12interactions_26NonBondedInteractionHandle___init__};
static PyObject *__pyx_pw_10espressomd_12interactions_26NonBondedInteractionHandle_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v__type1 = 0;
  PyObject *__pyx_v__type2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_type1,&__pyx_n_s_type2,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_type1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_type2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v__type1 = values[1];
    __pyx_v__type2 = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteractionHandle.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_10espressomd_12interactions_26NonBondedInteractionHandle___init__(__pyx_self, __pyx_v_self, __pyx_v__type1, __pyx_v__type2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_26NonBondedInteractionHandle___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v__type1, PyObject *__pyx_v__type2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "espressomd/interactions.pyx":314
 *     def __init__(self, _type1, _type2):
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):             # <<<<<<<<<<<<<<
 *             raise TypeError("The particle types have to be of type integer.")
 *         self.type1 = _type1
 */
  __pyx_t_2 = PyInt_Check(__pyx_v__type1); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = PyInt_Check(__pyx_v__type2); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":315
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 *             raise TypeError("The particle types have to be of type integer.")             # <<<<<<<<<<<<<<
 *         self.type1 = _type1
 *         self.type2 = _type2
 */
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":316
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 *             raise TypeError("The particle types have to be of type integer.")
 *         self.type1 = _type1             # <<<<<<<<<<<<<<
 *         self.type2 = _type2
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_type1_2, __pyx_v__type1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":317
 *             raise TypeError("The particle types have to be of type integer.")
 *         self.type1 = _type1
 *         self.type2 = _type2             # <<<<<<<<<<<<<<
 * 
 *         # Here, add one line for each nonbonded ia
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_type2_2, __pyx_v__type2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":320
 * 
 *         # Here, add one line for each nonbonded ia
 *         self.lennardJones = LennardJonesInteraction(_type1, _type2)             # <<<<<<<<<<<<<<
 *         self.genericLennardJones = LennardJonesInteraction(_type1, _type2)
 * 
 */
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v__type1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v__type1);
  __Pyx_GIVEREF(__pyx_v__type1);
  __Pyx_INCREF(__pyx_v__type2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v__type2);
  __Pyx_GIVEREF(__pyx_v__type2);
  __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_LennardJonesInteraction)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_lennardJones, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "espressomd/interactions.pyx":321
 *         # Here, add one line for each nonbonded ia
 *         self.lennardJones = LennardJonesInteraction(_type1, _type2)
 *         self.genericLennardJones = LennardJonesInteraction(_type1, _type2)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v__type1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v__type1);
  __Pyx_GIVEREF(__pyx_v__type1);
  __Pyx_INCREF(__pyx_v__type2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v__type2);
  __Pyx_GIVEREF(__pyx_v__type2);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_LennardJonesInteraction)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_genericLennardJones, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":312
 *     lennardJones = None
 * 
 *     def __init__(self, _type1, _type2):             # <<<<<<<<<<<<<<
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteractionHandle.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":330
 *     """
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if not isinstance(key, tuple):
 *             raise ValueError(
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_1__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_1__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_21NonBondedInteractions___getitem__(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_21NonBondedInteractions___getitem__(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "espressomd/interactions.pyx":331
 * 
 *     def __getitem__(self, key):
 *         if not isinstance(key, tuple):             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 */
  __pyx_t_1 = PyTuple_Check(__pyx_v_key); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":332
 *     def __getitem__(self, key):
 *         if not isinstance(key, tuple):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         if len(key) != 2 or (not isinstance(key[0], int)) or (not isinstance(key[1], int)):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":334
 *             raise ValueError(
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         if len(key) != 2 or (not isinstance(key[0], int)) or (not isinstance(key[1], int)):             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_key); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = ((__pyx_t_4 != 2) != 0);
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_key, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyInt_Check(__pyx_t_3); 
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = ((!(__pyx_t_1 != 0)) != 0);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_2 = __pyx_t_5;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_key, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyInt_Check(__pyx_t_3); 
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = ((!(__pyx_t_5 != 0)) != 0);
  __pyx_t_2 = __pyx_t_1;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":335
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         if len(key) != 2 or (not isinstance(key[0], int)) or (not isinstance(key[1], int)):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         return NonBondedInteractionHandle(key[0], key[1])
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":337
 *             raise ValueError(
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         return NonBondedInteractionHandle(key[0], key[1])             # <<<<<<<<<<<<<<
 * 
 *     def setForceCap(self, cap):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_NonBondedInteractionHandle); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_key, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_key, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_10 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  if (__pyx_t_9) {
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
  }
  PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_4, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_4, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_10, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":330
 *     """
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if not isinstance(key, tuple):
 *             raise ValueError(
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteractions.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":339
 *         return NonBondedInteractionHandle(key[0], key[1])
 * 
 *     def setForceCap(self, cap):             # <<<<<<<<<<<<<<
 *         if forcecap_set_params(cap):
 *             raise Exception("Could not set forcecap")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_3setForceCap(PyObject *__pyx_v_self, PyObject *__pyx_v_cap); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_3setForceCap(PyObject *__pyx_v_self, PyObject *__pyx_v_cap) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setForceCap (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_21NonBondedInteractions_2setForceCap(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *)__pyx_v_self), ((PyObject *)__pyx_v_cap));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_21NonBondedInteractions_2setForceCap(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *__pyx_v_self, PyObject *__pyx_v_cap) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setForceCap", 0);

  /* "espressomd/interactions.pyx":340
 * 
 *     def setForceCap(self, cap):
 *         if forcecap_set_params(cap):             # <<<<<<<<<<<<<<
 *             raise Exception("Could not set forcecap")
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_cap); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (forcecap_set_params(__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":341
 *     def setForceCap(self, cap):
 *         if forcecap_set_params(cap):
 *             raise Exception("Could not set forcecap")             # <<<<<<<<<<<<<<
 * 
 *     def getForceCap(self):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":339
 *         return NonBondedInteractionHandle(key[0], key[1])
 * 
 *     def setForceCap(self, cap):             # <<<<<<<<<<<<<<
 *         if forcecap_set_params(cap):
 *             raise Exception("Could not set forcecap")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteractions.setForceCap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":343
 *             raise Exception("Could not set forcecap")
 * 
 *     def getForceCap(self):             # <<<<<<<<<<<<<<
 *         return force_cap
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_5getForceCap(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_5getForceCap(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getForceCap (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_21NonBondedInteractions_4getForceCap(((struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_21NonBondedInteractions_4getForceCap(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getForceCap", 0);

  /* "espressomd/interactions.pyx":344
 * 
 *     def getForceCap(self):
 *         return force_cap             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(force_cap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":343
 *             raise Exception("Could not set forcecap")
 * 
 *     def getForceCap(self):             # <<<<<<<<<<<<<<
 *         return force_cap
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.NonBondedInteractions.getForceCap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":348
 * 
 * cdef class BondedInteraction(object):
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Either called with an interaction id, in which case, the interaction will represent
 *            the bonded interaction as it is defined in Espresso core
 */

/* Python wrapper */
static int __pyx_pw_10espressomd_12interactions_17BondedInteraction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_10espressomd_12interactions_17BondedInteraction___init__[] = "Either called with an interaction id, in which case, the interaction will represent\n           the bonded interaction as it is defined in Espresso core\n           Or called with keyword arguments describing a new interaction.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_10espressomd_12interactions_17BondedInteraction___init__;
#endif
static int __pyx_pw_10espressomd_12interactions_17BondedInteraction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction___init__(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_10espressomd_12interactions_17BondedInteraction___init__(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_bondId = NULL;
  PyObject *__pyx_v_k = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "espressomd/interactions.pyx":353
 *            Or called with keyword arguments describing a new interaction."""
 *         # Interaction id as argument
 *         if len(args) == 1 and isinstance(args[0], int):             # <<<<<<<<<<<<<<
 *             bondId = args[0]
 *             # Check, if the bond in Espresso core is really defined as a FENE
 */
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_v_args); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((__pyx_t_2 == 1) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_args, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyInt_Check(__pyx_t_4); 
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":354
 *         # Interaction id as argument
 *         if len(args) == 1 and isinstance(args[0], int):
 *             bondId = args[0]             # <<<<<<<<<<<<<<
 *             # Check, if the bond in Espresso core is really defined as a FENE
 *             # bond
 */
    __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_args, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_bondId = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "espressomd/interactions.pyx":357
 *             # Check, if the bond in Espresso core is really defined as a FENE
 *             # bond
 *             if bonded_ia_params[bondId].type != self.typeNumber():             # <<<<<<<<<<<<<<
 *                 raise Exception(
 *                     "The bond with this id is not defined as a " + self.typeName() + " bond in the Espresso core.")
 */
    __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_v_bondId); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = __Pyx_PyInt_From_int((bonded_ia_params[__pyx_t_2]).type); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_typeNumber); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (__pyx_t_8) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else {
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_RichCompare(__pyx_t_4, __pyx_t_6, Py_NE); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (__pyx_t_1) {

      /* "espressomd/interactions.pyx":359
 *             if bonded_ia_params[bondId].type != self.typeNumber():
 *                 raise Exception(
 *                     "The bond with this id is not defined as a " + self.typeName() + " bond in the Espresso core.")             # <<<<<<<<<<<<<<
 * 
 *             self._bondId = bondId
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_typeName); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(__pyx_kp_s_The_bond_with_this_id_is_not_def, __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Add(__pyx_t_6, __pyx_kp_s_bond_in_the_Espresso_core); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "espressomd/interactions.pyx":358
 *             # bond
 *             if bonded_ia_params[bondId].type != self.typeNumber():
 *                 raise Exception(             # <<<<<<<<<<<<<<
 *                     "The bond with this id is not defined as a " + self.typeName() + " bond in the Espresso core.")
 * 
 */
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_7, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "espressomd/interactions.pyx":361
 *                     "The bond with this id is not defined as a " + self.typeName() + " bond in the Espresso core.")
 * 
 *             self._bondId = bondId             # <<<<<<<<<<<<<<
 * 
 *             # Load the parameters currently set in the Espresso core
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bondId, __pyx_v_bondId) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "espressomd/interactions.pyx":364
 * 
 *             # Load the parameters currently set in the Espresso core
 *             self._params = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 *             self._bondId = bondId
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_4) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_params, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "espressomd/interactions.pyx":365
 *             # Load the parameters currently set in the Espresso core
 *             self._params = self._getParamsFromEsCore()
 *             self._bondId = bondId             # <<<<<<<<<<<<<<
 * 
 *         # Or have we been called with keyword args describing the interaction
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bondId, __pyx_v_bondId) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }

  /* "espressomd/interactions.pyx":368
 * 
 *         # Or have we been called with keyword args describing the interaction
 *         elif len(args) == 0:             # <<<<<<<<<<<<<<
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():
 */
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_v_args); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = ((__pyx_t_2 == 0) != 0);
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":370
 *         elif len(args) == 0:
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():             # <<<<<<<<<<<<<<
 *                 if k not in kwargs:
 *                     raise ValueError(
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_requiredKeys); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_4) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
      __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_2 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_2 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_2); __Pyx_INCREF(__pyx_t_7); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_2); __Pyx_INCREF(__pyx_t_7); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_7 = __pyx_t_9(__pyx_t_6);
        if (unlikely(!__pyx_t_7)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_7);
      }
      __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "espressomd/interactions.pyx":371
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():
 *                 if k not in kwargs:             # <<<<<<<<<<<<<<
 *                     raise ValueError(
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 */
      __pyx_t_1 = (__Pyx_PyDict_Contains(__pyx_v_k, __pyx_v_kwargs, Py_NE)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_5 = (__pyx_t_1 != 0);
      if (__pyx_t_5) {

        /* "espressomd/interactions.pyx":373
 *                 if k not in kwargs:
 *                     raise ValueError(
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())             # <<<<<<<<<<<<<<
 * 
 *             self.params = kwargs
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_requiredKeys); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_10 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        if (__pyx_t_10) {
          __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_10); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        } else {
          __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_str); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        if (__pyx_t_4) {
          __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else {
          __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_kp_s_At_least_the_following_keys_have, __pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "espressomd/interactions.pyx":372
 *             for k in self.requiredKeys():
 *                 if k not in kwargs:
 *                     raise ValueError(             # <<<<<<<<<<<<<<
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 * 
 */
        __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_Raise(__pyx_t_8, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "espressomd/interactions.pyx":370
 *         elif len(args) == 0:
 *             # Check if all required keys are given
 *             for k in self.requiredKeys():             # <<<<<<<<<<<<<<
 *                 if k not in kwargs:
 *                     raise ValueError(
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "espressomd/interactions.pyx":375
 *                         "At least the following keys have to be given as keyword arguments: " + self.requiredKeys().__str__())
 * 
 *             self.params = kwargs             # <<<<<<<<<<<<<<
 * 
 *             # Validation of parameters
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_params_2, __pyx_v_kwargs) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "espressomd/interactions.pyx":378
 * 
 *             # Validation of parameters
 *             self.validateParams()             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_validateParams); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "espressomd/interactions.pyx":381
 * 
 *         else:
 *             raise Exception(             # <<<<<<<<<<<<<<
 *                 "The constructor has to be called either with a bond id (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "espressomd/interactions.pyx":348
 * 
 * cdef class BondedInteraction(object):
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Either called with an interaction id, in which case, the interaction will represent
 *            the bonded interaction as it is defined in Espresso core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bondId);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":384
 *                 "The constructor has to be called either with a bond id (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 *     def isValid(self):             # <<<<<<<<<<<<<<
 *         """Check, if the data stored in the instance still matches what is in Espresso"""
 *         # Check if the bond type in Espresso still matches the bond type saved
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_3isValid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_10espressomd_12interactions_17BondedInteraction_2isValid[] = "Check, if the data stored in the instance still matches what is in Espresso";
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_3isValid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isValid (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_2isValid(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_2isValid(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_v_tempParams = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isValid", 0);

  /* "espressomd/interactions.pyx":388
 *         # Check if the bond type in Espresso still matches the bond type saved
 *         # in this class
 *         if bonded_ia_params[self._bondId].type != self.typeNumber():             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int((bonded_ia_params[__pyx_t_2]).type); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_typeNumber); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_NE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_6) {

    /* "espressomd/interactions.pyx":389
 *         # in this class
 *         if bonded_ia_params[self._bondId].type != self.typeNumber():
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         # check, if the bond parameters saved in the class still match those
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;
  }

  /* "espressomd/interactions.pyx":393
 *         # check, if the bond parameters saved in the class still match those
 *         # saved in Espresso
 *         tempParams = self._getParamsFromEsCore()             # <<<<<<<<<<<<<<
 *         if self._params != tempParams:
 *             return False
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getParamsFromEsCore); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_tempParams = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":394
 *         # saved in Espresso
 *         tempParams = self._getParamsFromEsCore()
 *         if self._params != tempParams:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_params); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_4, __pyx_v_tempParams, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_6) {

    /* "espressomd/interactions.pyx":395
 *         tempParams = self._getParamsFromEsCore()
 *         if self._params != tempParams:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         # If we're still here, the instance is valid
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;
  }

  /* "espressomd/interactions.pyx":398
 * 
 *         # If we're still here, the instance is valid
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     property params:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":384
 *                 "The constructor has to be called either with a bond id (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 *     def isValid(self):             # <<<<<<<<<<<<<<
 *         """Check, if the data stored in the instance still matches what is in Espresso"""
 *         # Check if the bond type in Espresso still matches the bond type saved
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.isValid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tempParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":401
 * 
 *     property params:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._params
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_6params_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_6params_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_6params___get__(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_6params___get__(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "espressomd/interactions.pyx":402
 *     property params:
 *         def __get__(self):
 *             return self._params             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, p):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":401
 * 
 *     property params:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._params
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.params.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":404
 *             return self._params
 * 
 *         def __set__(self, p):             # <<<<<<<<<<<<<<
 *             # Check, if any key was passed, which is not known
 *             for k in p.keys():
 */

/* Python wrapper */
static int __pyx_pw_10espressomd_12interactions_17BondedInteraction_6params_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static int __pyx_pw_10espressomd_12interactions_17BondedInteraction_6params_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_6params_2__set__(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self), ((PyObject *)__pyx_v_p));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_10espressomd_12interactions_17BondedInteraction_6params_2__set__(struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_v_k = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "espressomd/interactions.pyx":406
 *         def __set__(self, p):
 *             # Check, if any key was passed, which is not known
 *             for k in p.keys():             # <<<<<<<<<<<<<<
 *                 if k not in self.validKeys():
 *                     raise ValueError(
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_keys); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "espressomd/interactions.pyx":407
 *             # Check, if any key was passed, which is not known
 *             for k in p.keys():
 *                 if k not in self.validKeys():             # <<<<<<<<<<<<<<
 *                     raise ValueError(
 *                         "Only the following keys are supported: " + self.validKeys().__str__)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_validKeys); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_7 = (__Pyx_PySequence_Contains(__pyx_v_k, __pyx_t_1, Py_NE)); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = (__pyx_t_7 != 0);
    if (__pyx_t_8) {

      /* "espressomd/interactions.pyx":409
 *                 if k not in self.validKeys():
 *                     raise ValueError(
 *                         "Only the following keys are supported: " + self.validKeys().__str__)             # <<<<<<<<<<<<<<
 * 
 *             # Initialize default values
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_validKeys); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else {
        __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_str); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(__pyx_kp_s_Only_the_following_keys_are_supp, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "espressomd/interactions.pyx":408
 *             for k in p.keys():
 *                 if k not in self.validKeys():
 *                     raise ValueError(             # <<<<<<<<<<<<<<
 *                         "Only the following keys are supported: " + self.validKeys().__str__)
 * 
 */
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "espressomd/interactions.pyx":406
 *         def __set__(self, p):
 *             # Check, if any key was passed, which is not known
 *             for k in p.keys():             # <<<<<<<<<<<<<<
 *                 if k not in self.validKeys():
 *                     raise ValueError(
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":412
 * 
 *             # Initialize default values
 *             self.setDefaultParams()             # <<<<<<<<<<<<<<
 *             # Put in values given by the user
 *             self._params.update(p)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setDefaultParams); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":414
 *             self.setDefaultParams()
 *             # Put in values given by the user
 *             self._params.update(p)             # <<<<<<<<<<<<<<
 * 
 *     def validateParams(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_update); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_p); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_p);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_p);
    __Pyx_GIVEREF(__pyx_v_p);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":404
 *             return self._params
 * 
 *         def __set__(self, p):             # <<<<<<<<<<<<<<
 *             # Check, if any key was passed, which is not known
 *             for k in p.keys():
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.params.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":416
 *             self._params.update(p)
 * 
 *     def validateParams(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_5validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_5validateParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validateParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_4validateParams(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_4validateParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validateParams", 0);

  /* "espressomd/interactions.pyx":417
 * 
 *     def validateParams(self):
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":416
 *             self._params.update(p)
 * 
 *     def validateParams(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":419
 *         return True
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_7_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_7_getParamsFromEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_6_getParamsFromEsCore(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_6_getParamsFromEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":420
 * 
 *     def _getParamsFromEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":419
 *         return True
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":423
 *             "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_9_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_9_setParamsInEsCore(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_8_setParamsInEsCore(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_8_setParamsInEsCore(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":424
 * 
 *     def _setParamsInEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":423
 *             "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":427
 *             "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.")
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the setDefaultParams() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_11setDefaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_11setDefaultParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_10setDefaultParams(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_10setDefaultParams(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":428
 * 
 *     def setDefaultParams(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the setDefaultParams() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":427
 *             "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.")
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the setDefaultParams() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":431
 *             "Subclasses of BondedInteraction must define the setDefaultParams() method.")
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the typeNumber() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_13typeNumber(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_13typeNumber(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_12typeNumber(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_12typeNumber(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":432
 * 
 *     def typeNumber(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the typeNumber() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":431
 *             "Subclasses of BondedInteraction must define the setDefaultParams() method.")
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the typeNumber() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.typeNumber", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":435
 *             "Subclasses of BondedInteraction must define the typeNumber() method.")
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the typeName() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_15typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_15typeName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_14typeName(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_14typeName(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":436
 * 
 *     def typeName(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the typeName() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":435
 *             "Subclasses of BondedInteraction must define the typeNumber() method.")
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the typeName() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.typeName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":439
 *             "Subclasses of BondedInteraction must define the typeName() method.")
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the validKeys() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_17validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_17validKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_16validKeys(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_16validKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":440
 * 
 *     def validKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the validKeys() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":439
 *             "Subclasses of BondedInteraction must define the typeName() method.")
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the validKeys() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.validKeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":443
 *             "Subclasses of BondedInteraction must define the validKeys() method.")
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the requiredKeys() method.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_19requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_10espressomd_12interactions_17BondedInteraction_19requiredKeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17BondedInteraction_18requiredKeys(((struct __pyx_obj_10espressomd_12interactions_BondedInteraction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17BondedInteraction_18requiredKeys(CYTHON_UNUSED struct __pyx_obj_10espressomd_12interactions_BondedInteraction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":444
 * 
 *     def requiredKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the requiredKeys() method.")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":443
 *             "Subclasses of BondedInteraction must define the validKeys() method.")
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             "Subclasses of BondedInteraction must define the requiredKeys() method.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteraction.requiredKeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":450
 * class BondedInteractionNotDefined(object):
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_1__init__ = {"__init__", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 1) ? pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, used_pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined___init__(__pyx_self, __pyx_v_self, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "espressomd/interactions.pyx":452
 *     def __init__(self, *args, **kwargs):
 *         raise Exception(
 *             self.__class_s__.__name__ + " not compiled into Espresso core")             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_class_s); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_not_compiled_into_Espresso_core); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":451
 * 
 *     def __init__(self, *args, **kwargs):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 * 
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":450
 * class BondedInteractionNotDefined(object):
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":454
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_3typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_3typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_3typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_3typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_2typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_2typeNumber(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":455
 * 
 *     def typeNumber(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":454
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.typeNumber", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":457
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_5typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_5typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_5typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_5typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_4typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_4typeName(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":458
 * 
 *     def typeName(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":457
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.typeName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":460
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_7validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_7validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_7validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_7validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_6validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_6validKeys(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":461
 * 
 *     def validKeys(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":460
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.validKeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":463
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_9requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_9requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_9requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_9requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_8requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_8requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":464
 * 
 *     def requiredKeys(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":463
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.requiredKeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":466
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_11setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_11setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_11setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_11setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_10setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_10setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":467
 * 
 *     def setDefaultParams(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":466
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":469
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_13_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_13_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_13_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_13_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_12_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_12_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":470
 * 
 *     def _getParamsFromEsCore(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":469
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":472
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_15_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_15_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_15_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27BondedInteractionNotDefined_15_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_14_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_27BondedInteractionNotDefined_14_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":473
 * 
 *     def _setParamsInEsCore(self):
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":472
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractionNotDefined._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":478
 * class FeneBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":479
 * 
 *     def typeNumber(self):
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_0);
  __pyx_r = __pyx_int_0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":478
 * class FeneBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":481
 *         return 0
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "FENE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":482
 * 
 *     def typeName(self):
 *         return "FENE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_FENE);
  __pyx_r = __pyx_n_s_FENE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":481
 *         return 0
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "FENE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":484
 *         return "FENE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max", "r_0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":485
 * 
 *     def validKeys(self):
 *         return "k", "d_r_max", "r_0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__33);
  __pyx_r = __pyx_tuple__33;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":484
 *         return "FENE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max", "r_0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":487
 *         return "k", "d_r_max", "r_0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":488
 * 
 *     def requiredKeys(self):
 *         return "k", "d_r_max"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__34);
  __pyx_r = __pyx_tuple__34;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":487
 *         return "k", "d_r_max", "r_0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":490
 *         return "k", "d_r_max"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r_0": 0.}
 *         # Everything else has to be supplied by the user, anyway
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":491
 * 
 *     def setDefaultParams(self):
 *         self._params = {"r_0": 0.}             # <<<<<<<<<<<<<<
 *         # Everything else has to be supplied by the user, anyway
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_0, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":490
 *         return "k", "d_r_max"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r_0": 0.}
 *         # Everything else has to be supplied by the user, anyway
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.FeneBond.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":494
 *         # Everything else has to be supplied by the user, anyway
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":495
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 *              "d_r_max": bonded_ia_params[self._bondId].p.fene.drmax,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":496
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,             # <<<<<<<<<<<<<<
 *              "d_r_max": bonded_ia_params[self._bondId].p.fene.drmax,
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.fene.k); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_k, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":497
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 *              "d_r_max": bonded_ia_params[self._bondId].p.fene.drmax,             # <<<<<<<<<<<<<<
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.fene.drmax); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_d_r_max, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":498
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 *              "d_r_max": bonded_ia_params[self._bondId].p.fene.drmax,
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.fene.r0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":494
 *         # Everything else has to be supplied by the user, anyway
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.FeneBond._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":500
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         fene_set_params(
 *             self._bondId, self._params["k"], self._params["d_r_max"], self._params["r_0"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8FeneBond_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_8FeneBond_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8FeneBond_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8FeneBond_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8FeneBond_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":502
 *     def _setParamsInEsCore(self):
 *         fene_set_params(
 *             self._bondId, self._params["k"], self._params["d_r_max"], self._params["r_0"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_k); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_d_r_max); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_r_0); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "espressomd/interactions.pyx":501
 * 
 *     def _setParamsInEsCore(self):
 *         fene_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["k"], self._params["d_r_max"], self._params["r_0"])
 * 
 */
  fene_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6);

  /* "espressomd/interactions.pyx":500
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         fene_set_params(
 *             self._bondId, self._params["k"], self._params["d_r_max"], self._params["r_0"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.FeneBond._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":507
 * class HarmonicBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 1
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":508
 * 
 *     def typeNumber(self):
 *         return 1             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_1);
  __pyx_r = __pyx_int_1;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":507
 * class HarmonicBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 1
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":510
 *         return 1
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "HARMONIC"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":511
 * 
 *     def typeName(self):
 *         return "HARMONIC"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_HARMONIC);
  __pyx_r = __pyx_n_s_HARMONIC;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":510
 *         return 1
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "HARMONIC"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":513
 *         return "HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0", "r_cut"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":514
 * 
 *     def validKeys(self):
 *         return "k", "r_0", "r_cut"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__35);
  __pyx_r = __pyx_tuple__35;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":513
 *         return "HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0", "r_cut"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":516
 *         return "k", "r_0", "r_cut"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":517
 * 
 *     def requiredKeys(self):
 *         return "k", "r_0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__36);
  __pyx_r = __pyx_tuple__36;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":516
 *         return "k", "r_0", "r_cut"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":519
 *         return "k", "r_0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":520
 * 
 *     def setDefaultParams(self):
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_kp_s_k_2, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_0, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_cut, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":519
 *         return "k", "r_0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.HarmonicBond.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":522
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":523
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 *              "r_0": bonded_ia_params[self._bondId].p.harmonic.r,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":524
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,             # <<<<<<<<<<<<<<
 *              "r_0": bonded_ia_params[self._bondId].p.harmonic.r,
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic.k); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_k, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":525
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 *              "r_0": bonded_ia_params[self._bondId].p.harmonic.r,             # <<<<<<<<<<<<<<
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic.r); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":526
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 *              "r_0": bonded_ia_params[self._bondId].p.harmonic.r,
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic.r_cut); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_cut, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":522
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.HarmonicBond._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":528
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         harmonic_set_params(
 *             self._bondId, self._params["k"], self._params["r_0"], self._params["r_cut"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12HarmonicBond_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_12HarmonicBond_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12HarmonicBond_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12HarmonicBond_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12HarmonicBond_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":530
 *     def _setParamsInEsCore(self):
 *         harmonic_set_params(
 *             self._bondId, self._params["k"], self._params["r_0"], self._params["r_cut"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_k); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_r_0); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_r_cut); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "espressomd/interactions.pyx":529
 * 
 *     def _setParamsInEsCore(self):
 *         harmonic_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["k"], self._params["r_0"], self._params["r_cut"])
 * 
 */
  harmonic_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6);

  /* "espressomd/interactions.pyx":528
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         harmonic_set_params(
 *             self._bondId, self._params["k"], self._params["r_0"], self._params["r_cut"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.HarmonicBond._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":536
 *     class HarmonicDumbbellBond(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 2
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":537
 * 
 *         def typeNumber(self):
 *             return 2             # <<<<<<<<<<<<<<
 * 
 *         def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_2);
  __pyx_r = __pyx_int_2;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":536
 *     class HarmonicDumbbellBond(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 2
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":539
 *             return 2
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "HARMONIC_DUMBBELL"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":540
 * 
 *         def typeName(self):
 *             return "HARMONIC_DUMBBELL"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_HARMONIC_DUMBBELL);
  __pyx_r = __pyx_n_s_HARMONIC_DUMBBELL;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":539
 *             return 2
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "HARMONIC_DUMBBELL"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":542
 *             return "HARMONIC_DUMBBELL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":543
 * 
 *         def validKeys(self):
 *             return "k1", "k2", "r_0", "r_cut"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__37);
  __pyx_r = __pyx_tuple__37;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":542
 *             return "HARMONIC_DUMBBELL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":545
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":546
 * 
 *         def requiredKeys(self):
 *             return "k1", "k2", "r_0"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__38);
  __pyx_r = __pyx_tuple__38;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":545
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":548
 *             return "k1", "k2", "r_0"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"r_cut": 0.}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":549
 * 
 *         def setDefaultParams(self):
 *             self._params = {"r_cut": 0.}             # <<<<<<<<<<<<<<
 * 
 *         def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_cut, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":548
 *             return "k1", "k2", "r_0"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"r_cut": 0.}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.HarmonicDumbbellBond.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":551
 *             self._params = {"r_cut": 0.}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":552
 * 
 *         def _getParamsFromEsCore(self):
 *             return \             # <<<<<<<<<<<<<<
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 *                  "k2": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k2,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":553
 *         def _getParamsFromEsCore(self):
 *             return \
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,             # <<<<<<<<<<<<<<
 *                  "k2": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k2,
 *                  "r_0": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r,
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic_dumbbell.k1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_k1, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":554
 *             return \
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 *                  "k2": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k2,             # <<<<<<<<<<<<<<
 *                  "r_0": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r,
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic_dumbbell.k2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_k2, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":555
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 *                  "k2": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k2,
 *                  "r_0": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r,             # <<<<<<<<<<<<<<
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic_dumbbell.r); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":556
 *                  "k2": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k2,
 *                  "r_0": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r,
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}             # <<<<<<<<<<<<<<
 * 
 *         def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.harmonic_dumbbell.r_cut); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r_cut, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":551
 *             self._params = {"r_cut": 0.}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.HarmonicDumbbellBond._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":558
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             harmonic_dumbbell_set_params(
 *                 self._bondId, self._params["k1"], self._params["k2"],
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_20HarmonicDumbbellBond_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20HarmonicDumbbellBond_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":560
 *         def _setParamsInEsCore(self):
 *             harmonic_dumbbell_set_params(
 *                 self._bondId, self._params["k1"], self._params["k2"],             # <<<<<<<<<<<<<<
 *                 self._params["r_0"], self._params["r_cut"])
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_k1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_k2); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":561
 *             harmonic_dumbbell_set_params(
 *                 self._bondId, self._params["k1"], self._params["k2"],
 *                 self._params["r_0"], self._params["r_cut"])             # <<<<<<<<<<<<<<
 * 
 * IF ROTATION != 1:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_r_0); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_r_cut); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":559
 * 
 *         def _setParamsInEsCore(self):
 *             harmonic_dumbbell_set_params(             # <<<<<<<<<<<<<<
 *                 self._bondId, self._params["k1"], self._params["k2"],
 *                 self._params["r_0"], self._params["r_cut"])
 */
  harmonic_dumbbell_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7);

  /* "espressomd/interactions.pyx":558
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             harmonic_dumbbell_set_params(
 *                 self._bondId, self._params["k1"], self._params["k2"],
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.HarmonicDumbbellBond._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":629
 * class Dihedral(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 5
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":630
 * 
 *     def typeNumber(self):
 *         return 5             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_5);
  __pyx_r = __pyx_int_5;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":629
 * class Dihedral(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 5
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":632
 *         return 5
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "DIHEDRAL"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":633
 * 
 *     def typeName(self):
 *         return "DIHEDRAL"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_DIHEDRAL);
  __pyx_r = __pyx_n_s_DIHEDRAL;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":632
 *         return 5
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "DIHEDRAL"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":635
 *         return "DIHEDRAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":636
 * 
 *     def validKeys(self):
 *         return "mult", "bend", "phase"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__39);
  __pyx_r = __pyx_tuple__39;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":635
 *         return "DIHEDRAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":638
 *         return "mult", "bend", "phase"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":639
 * 
 *     def requiredKeys(self):
 *         return "mult", "bend", "phase"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__40);
  __pyx_r = __pyx_tuple__40;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":638
 *         return "mult", "bend", "phase"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":641
 *         return "mult", "bend", "phase"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":642
 * 
 *     def setDefaultParams(self):
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_kp_s_mult_2, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phase, __pyx_float_0_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":641
 *         return "mult", "bend", "phase"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Dihedral.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":644
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":645
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 *              "bend": bonded_ia_params[self._bondId].p.dihedral.bend,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":646
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,             # <<<<<<<<<<<<<<
 *              "bend": bonded_ia_params[self._bondId].p.dihedral.bend,
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.dihedral.mult); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_mult, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":647
 *         return \
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 *              "bend": bonded_ia_params[self._bondId].p.dihedral.bend,             # <<<<<<<<<<<<<<
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.dihedral.bend); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":648
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 *              "bend": bonded_ia_params[self._bondId].p.dihedral.bend,
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.dihedral.phase); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phase, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":644
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Dihedral._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":650
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         dihedral_set_params(
 *             self._bondId, self._params["mult"], self._params["bend"], self._params["phase"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_8Dihedral_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_8Dihedral_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_8Dihedral_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8Dihedral_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8Dihedral_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":652
 *     def _setParamsInEsCore(self):
 *         dihedral_set_params(
 *             self._bondId, self._params["mult"], self._params["bend"], self._params["phase"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_mult); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_bend); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_phase); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "espressomd/interactions.pyx":651
 * 
 *     def _setParamsInEsCore(self):
 *         dihedral_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["mult"], self._params["bend"], self._params["phase"])
 * 
 */
  dihedral_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5, __pyx_t_6);

  /* "espressomd/interactions.pyx":650
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         dihedral_set_params(
 *             self._bondId, self._params["mult"], self._params["bend"], self._params["phase"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Dihedral._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":658
 *     class Tabulated(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 6
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":659
 * 
 *         def typeNumber(self):
 *             return 6             # <<<<<<<<<<<<<<
 * 
 *         def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_6);
  __pyx_r = __pyx_int_6;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":658
 *     class Tabulated(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 6
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":661
 *             return 6
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "TABULATED"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":662
 * 
 *         def typeName(self):
 *             return "TABULATED"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_TABULATED);
  __pyx_r = __pyx_n_s_TABULATED;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":661
 *             return 6
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "TABULATED"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":664
 *             return "TABULATED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":665
 * 
 *         def validKeys(self):
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__41);
  __pyx_r = __pyx_tuple__41;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":664
 *             return "TABULATED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":667
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":668
 * 
 *         def requiredKeys(self):
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__42);
  __pyx_r = __pyx_tuple__42;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":667
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":670
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"type": 1, "filename": "", "npoints": 0, "minval": 0, "maxval": 1,
 *                             "invstepsize": 1}
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":671
 * 
 *         def setDefaultParams(self):
 *             self._params = {"type": 1, "filename": "", "npoints": 0, "minval": 0, "maxval": 1,             # <<<<<<<<<<<<<<
 *                             "invstepsize": 1}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_type, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_filename, __pyx_kp_s__43) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_npoints, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_minval, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_maxval, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_invstepsize, __pyx_int_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":670
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"type": 1, "filename": "", "npoints": 0, "minval": 0, "maxval": 1,
 *                             "invstepsize": 1}
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Tabulated.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":674
 *                             "invstepsize": 1}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":675
 * 
 *         def _getParamsFromEsCore(self):
 *             return \             # <<<<<<<<<<<<<<
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 *                  "filename": bonded_ia_params[self.bondId].p.tab.filename,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":676
 *         def _getParamsFromEsCore(self):
 *             return \
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,             # <<<<<<<<<<<<<<
 *                  "filename": bonded_ia_params[self.bondId].p.tab.filename,
 *                  "npoints": bonded_ia_params[self._bondId].p.tab.npoints,
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int((bonded_ia_params[__pyx_t_3]).p.tab.type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":677
 *             return \
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 *                  "filename": bonded_ia_params[self.bondId].p.tab.filename,             # <<<<<<<<<<<<<<
 *                  "npoints": bonded_ia_params[self._bondId].p.tab.npoints,
 *                  "minval": bonded_ia_params[self._bondId].p.tab.minval,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyBytes_FromString((bonded_ia_params[__pyx_t_3]).p.tab.filename); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_filename, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":678
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 *                  "filename": bonded_ia_params[self.bondId].p.tab.filename,
 *                  "npoints": bonded_ia_params[self._bondId].p.tab.npoints,             # <<<<<<<<<<<<<<
 *                  "minval": bonded_ia_params[self._bondId].p.tab.minval,
 *                  "maxval": bonded_ia_params[self._bondId].p.tab.maxval,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int((bonded_ia_params[__pyx_t_3]).p.tab.npoints); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_npoints, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":679
 *                  "filename": bonded_ia_params[self.bondId].p.tab.filename,
 *                  "npoints": bonded_ia_params[self._bondId].p.tab.npoints,
 *                  "minval": bonded_ia_params[self._bondId].p.tab.minval,             # <<<<<<<<<<<<<<
 *                  "maxval": bonded_ia_params[self._bondId].p.tab.maxval,
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.tab.minval); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_minval, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":680
 *                  "npoints": bonded_ia_params[self._bondId].p.tab.npoints,
 *                  "minval": bonded_ia_params[self._bondId].p.tab.minval,
 *                  "maxval": bonded_ia_params[self._bondId].p.tab.maxval,             # <<<<<<<<<<<<<<
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.tab.maxval); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_maxval, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":681
 *                  "minval": bonded_ia_params[self._bondId].p.tab.minval,
 *                  "maxval": bonded_ia_params[self._bondId].p.tab.maxval,
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}             # <<<<<<<<<<<<<<
 * 
 *         def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.tab.invstepsize); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_invstepsize, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":674
 *                             "invstepsize": 1}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Tabulated._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":683
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             tabulated_bonded_set_params(
 *                 self._bondId, self._params["type"], self._params["filename"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9Tabulated_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_9Tabulated_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9Tabulated_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_9Tabulated_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_9Tabulated_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  enum TabulatedBondedInteraction __pyx_t_4;
  char *__pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":685
 *         def _setParamsInEsCore(self):
 *             tabulated_bonded_set_params(
 *                 self._bondId, self._params["type"], self._params["filename"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_type); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = ((enum TabulatedBondedInteraction)PyInt_AsLong(__pyx_t_3)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_filename); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_t_1); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":684
 * 
 *         def _setParamsInEsCore(self):
 *             tabulated_bonded_set_params(             # <<<<<<<<<<<<<<
 *                 self._bondId, self._params["type"], self._params["filename"])
 * 
 */
  tabulated_bonded_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":683
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             tabulated_bonded_set_params(
 *                 self._bondId, self._params["type"], self._params["filename"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Tabulated._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":715
 * class Subt_Lj(BondedInteraction):
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 7
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":716
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):
 *             return 7             # <<<<<<<<<<<<<<
 * 
 *         def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_7);
  __pyx_r = __pyx_int_7;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":715
 * class Subt_Lj(BondedInteraction):
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 7
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":718
 *             return 7
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "SUBT_LJ"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":719
 * 
 *         def typeName(self):
 *             return "SUBT_LJ"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_SUBT_LJ);
  __pyx_r = __pyx_n_s_SUBT_LJ;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":718
 *             return 7
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "SUBT_LJ"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":721
 *             return "SUBT_LJ"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":722
 * 
 *         def validKeys(self):
 *             return "r", "k"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__44);
  __pyx_r = __pyx_tuple__44;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":721
 *             return "SUBT_LJ"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":724
 *             return "r", "k"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":725
 * 
 *         def requiredKeys(self):
 *             return "r", "k"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__45);
  __pyx_r = __pyx_tuple__45;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":724
 *             return "r", "k"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":727
 *             return "r", "k"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"k": 0, "r": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":728
 * 
 *         def setDefaultParams(self):
 *             self._params = {"k": 0, "r": 0}             # <<<<<<<<<<<<<<
 * 
 *         def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_k, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":727
 *             return "r", "k"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"k": 0, "r": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Subt_Lj.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":730
 *             self._params = {"k": 0, "r": 0}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":731
 * 
 *         def _getParamsFromEsCore(self):
 *             return \             # <<<<<<<<<<<<<<
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":732
 *         def _getParamsFromEsCore(self):
 *             return \
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,             # <<<<<<<<<<<<<<
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.subt_lj.k); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_k, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":733
 *             return \
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}             # <<<<<<<<<<<<<<
 * 
 *         def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.subt_lj.r); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":730
 *             self._params = {"k": 0, "r": 0}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Subt_Lj._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":735
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             subt_lj_set_params(
 *                 self._bondId, self._params["k"], self._params["r"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Subt_Lj_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Subt_Lj_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Subt_Lj_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Subt_Lj_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Subt_Lj_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":737
 *         def _setParamsInEsCore(self):
 *             subt_lj_set_params(
 *                 self._bondId, self._params["k"], self._params["r"])             # <<<<<<<<<<<<<<
 * 
 * IF BOND_VIRTUAL == 1:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_k); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_r); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":736
 * 
 *         def _setParamsInEsCore(self):
 *             subt_lj_set_params(             # <<<<<<<<<<<<<<
 *                 self._bondId, self._params["k"], self._params["r"])
 * 
 */
  subt_lj_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":735
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             subt_lj_set_params(
 *                 self._bondId, self._params["k"], self._params["r"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Subt_Lj._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":742
 *     class Virtual(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 9
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":743
 * 
 *         def typeNumber(self):
 *             return 9             # <<<<<<<<<<<<<<
 * 
 *         def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_9);
  __pyx_r = __pyx_int_9;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":742
 *     class Virtual(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 9
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":745
 *             return 9
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "VIRTUAL"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":746
 * 
 *         def typeName(self):
 *             return "VIRTUAL"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_VIRTUAL);
  __pyx_r = __pyx_n_s_VIRTUAL;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":745
 *             return 9
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "VIRTUAL"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":748
 *             return "VIRTUAL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":749
 * 
 *         def validKeys(self):
 *             return             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":748
 *             return "VIRTUAL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":751
 *             return
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":752
 * 
 *         def requiredKeys(self):
 *             return             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":751
 *             return
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":754
 *             return
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":757
 *             pass
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":760
 *             pass
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             virtual_set_params(self._bondId)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7Virtual_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_7Virtual_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7Virtual_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_7Virtual_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_7Virtual_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":761
 * 
 *         def _setParamsInEsCore(self):
 *             virtual_set_params(self._bondId)             # <<<<<<<<<<<<<<
 * 
 * ELSE:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  virtual_set_params(__pyx_t_2);

  /* "espressomd/interactions.pyx":760
 *             pass
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             virtual_set_params(self._bondId)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Virtual._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":803
 *     class Overlapped(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 12
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":804
 * 
 *         def typeNumber(self):
 *             return 12             # <<<<<<<<<<<<<<
 * 
 *         def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_12);
  __pyx_r = __pyx_int_12;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":803
 *     class Overlapped(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 12
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":806
 *             return 12
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "OVERLAPPED"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":807
 * 
 *         def typeName(self):
 *             return "OVERLAPPED"             # <<<<<<<<<<<<<<
 * 
 *         def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_OVERLAPPED);
  __pyx_r = __pyx_n_s_OVERLAPPED;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":806
 *             return 12
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "OVERLAPPED"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":809
 *             return "OVERLAPPED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":810
 * 
 *         def validKeys(self):
 *             return "overlap_type", "filename"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__46);
  __pyx_r = __pyx_tuple__46;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":809
 *             return "OVERLAPPED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":812
 *             return "overlap_type", "filename"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":813
 * 
 *         def requiredKeys(self):
 *             return "overlap_type", "filename"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__47);
  __pyx_r = __pyx_tuple__47;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":812
 *             return "overlap_type", "filename"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":815
 *             return "overlap_type", "filename"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":816
 * 
 *         def setDefaultParams(self):
 *             self._params = {"overlap_type": 0, "filename": ""}             # <<<<<<<<<<<<<<
 * 
 *         def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_overlap_type, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_filename, __pyx_kp_s__43) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":815
 *             return "overlap_type", "filename"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Overlapped.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":818
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":819
 * 
 *         def _getParamsFromEsCore(self):
 *             return \             # <<<<<<<<<<<<<<
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":820
 *         def _getParamsFromEsCore(self):
 *             return \
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,             # <<<<<<<<<<<<<<
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int((bonded_ia_params[__pyx_t_3]).p.overlap.type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":821
 *             return \
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}             # <<<<<<<<<<<<<<
 * 
 *         def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyBytes_FromString((bonded_ia_params[__pyx_t_3]).p.overlap.filename); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":818
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Overlapped._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":823
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             overlapped_bonded_set_params(
 *                 self._bondId, self._params["overlap_type"], self._params["filename"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_10Overlapped_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_10Overlapped_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_10Overlapped_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10Overlapped_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10Overlapped_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  enum OverlappedBondedInteraction __pyx_t_4;
  char *__pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":825
 *         def _setParamsInEsCore(self):
 *             overlapped_bonded_set_params(
 *                 self._bondId, self._params["overlap_type"], self._params["filename"])             # <<<<<<<<<<<<<<
 * 
 * ELSE:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_overlap_type); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = ((enum OverlappedBondedInteraction)PyInt_AsLong(__pyx_t_3)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_filename); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_t_1); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":824
 * 
 *         def _setParamsInEsCore(self):
 *             overlapped_bonded_set_params(             # <<<<<<<<<<<<<<
 *                 self._bondId, self._params["overlap_type"], self._params["filename"])
 * 
 */
  overlapped_bonded_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":823
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             overlapped_bonded_set_params(
 *                 self._bondId, self._params["overlap_type"], self._params["filename"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Overlapped._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":834
 *     class Angle_Harmonic(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 13
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_14Angle_Harmonic_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_14Angle_Harmonic_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_14Angle_Harmonic_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_14Angle_Harmonic_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_14Angle_Harmonic_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_14Angle_Harmonic_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":835
 * 
 *         def typeNumber(self):
 *             return 13             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_13);
  __pyx_r = __pyx_int_13;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":834
 *     class Angle_Harmonic(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 13
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":837
 *             return 13
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_HARMONIC"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_1typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_1typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_1typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_1typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":838
 * 
 *     def typeName(self):
 *         return "ANGLE_HARMONIC"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_ANGLE_HARMONIC);
  __pyx_r = __pyx_n_s_ANGLE_HARMONIC;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":837
 *             return 13
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_HARMONIC"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":840
 *         return "ANGLE_HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_3validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_3validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_3validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_3validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_2validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_2validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":841
 * 
 *     def validKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__48);
  __pyx_r = __pyx_tuple__48;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":840
 *         return "ANGLE_HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":843
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_5requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_5requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_5requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_5requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_4requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_4requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":844
 * 
 *     def requiredKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__49);
  __pyx_r = __pyx_tuple__49;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":843
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":846
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_7setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_7setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_7setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_7setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_6setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_6setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":847
 * 
 *     def setDefaultParams(self):
 *         self._params = {"bend": 0, "phi0": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":846
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":849
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_9_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_9_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_9_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_9_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_8_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_8_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":850
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":851
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,             # <<<<<<<<<<<<<<
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.angle_harmonic.bend); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":852
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.angle_harmonic.phi0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":849
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":854
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_harmonic_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_11_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_11_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_11_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_11_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_10_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_10_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":856
 *     def _setParamsInEsCore(self):
 *         angle_harmonic_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])             # <<<<<<<<<<<<<<
 * ELSE:
 *     class Angle_Harmonic(BondedInteractionNotDefined):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_bend); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_phi0); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":855
 * 
 *     def _setParamsInEsCore(self):
 *         angle_harmonic_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["bend"], self._params["phi0"])
 * ELSE:
 */
  angle_harmonic_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":854
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_harmonic_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":864
 *     class Angle_Cosine(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 14
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Angle_Cosine_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Angle_Cosine_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Angle_Cosine_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Angle_Cosine_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Angle_Cosine_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Angle_Cosine_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":865
 * 
 *         def typeNumber(self):
 *             return 14             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_14);
  __pyx_r = __pyx_int_14;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":864
 *     class Angle_Cosine(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 14
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":867
 *             return 14
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSINE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_13typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":868
 * 
 *     def typeName(self):
 *         return "ANGLE_COSINE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_ANGLE_COSINE);
  __pyx_r = __pyx_n_s_ANGLE_COSINE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":867
 *             return 14
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSINE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":870
 *         return "ANGLE_COSINE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_15validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_15validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_15validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_15validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_14validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_14validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":871
 * 
 *     def validKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__50);
  __pyx_r = __pyx_tuple__50;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":870
 *         return "ANGLE_COSINE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":873
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_17requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":874
 * 
 *     def requiredKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__51);
  __pyx_r = __pyx_tuple__51;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":873
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":876
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_19setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_19setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_19setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_19setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_18setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_18setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":877
 * 
 *     def setDefaultParams(self):
 *         self._params = {"bend": 0, "phi0": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":876
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":879
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_21_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_21_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_21_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_21_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_20_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_20_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":880
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":881
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,             # <<<<<<<<<<<<<<
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.angle_cosine.bend); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":882
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.angle_cosine.phi0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":879
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":884
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cosine_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_23_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_23_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_23_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_23_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_22_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_22_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":886
 *     def _setParamsInEsCore(self):
 *         angle_cosine_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])             # <<<<<<<<<<<<<<
 * ELSE:
 *     class Angle_Cosine(BondedInteractionNotDefined):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_bend); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_phi0); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":885
 * 
 *     def _setParamsInEsCore(self):
 *         angle_cosine_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["bend"], self._params["phi0"])
 * ELSE:
 */
  angle_cosine_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":884
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cosine_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":894
 *     class Angle_Cossquare(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 15
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_15Angle_Cossquare_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_15Angle_Cossquare_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_15Angle_Cossquare_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_15Angle_Cossquare_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_15Angle_Cossquare_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_15Angle_Cossquare_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":895
 * 
 *         def typeNumber(self):
 *             return 15             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_15);
  __pyx_r = __pyx_int_15;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":894
 *     class Angle_Cossquare(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 15
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":897
 *             return 15
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSSQUARE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_25typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_25typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_25typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_25typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_24typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_24typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":898
 * 
 *     def typeName(self):
 *         return "ANGLE_COSSQUARE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_ANGLE_COSSQUARE);
  __pyx_r = __pyx_n_s_ANGLE_COSSQUARE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":897
 *             return 15
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSSQUARE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":900
 *         return "ANGLE_COSSQUARE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_27validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_27validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_27validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_27validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_26validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_26validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":901
 * 
 *     def validKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__52);
  __pyx_r = __pyx_tuple__52;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":900
 *         return "ANGLE_COSSQUARE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":903
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_29requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_29requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_29requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_29requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_28requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_28requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":904
 * 
 *     def requiredKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__53);
  __pyx_r = __pyx_tuple__53;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":903
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":906
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_31setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_31setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_31setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_31setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_30setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_30setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":907
 * 
 *     def setDefaultParams(self):
 *         self._params = {"bend": 0, "phi0": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":906
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":909
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_33_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_33_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_33_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_33_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_32_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_32_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":910
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":911
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,             # <<<<<<<<<<<<<<
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.angle_cossquare.bend); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bend, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":912
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.angle_cossquare.phi0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":909
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":914
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cossquare_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_35_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_35_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_35_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_35_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_34_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_34_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":916
 *     def _setParamsInEsCore(self):
 *         angle_cossquare_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])             # <<<<<<<<<<<<<<
 * ELSE:
 *     class Angle_Cossquare(BondedInteractionNotDefined):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_bend); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_phi0); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":915
 * 
 *     def _setParamsInEsCore(self):
 *         angle_cossquare_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["bend"], self._params["phi0"])
 * ELSE:
 */
  angle_cossquare_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":914
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cossquare_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":924
 * class Stretching_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 16
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":925
 * 
 *     def typeNumber(self):
 *         return 16             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_16);
  __pyx_r = __pyx_int_16;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":924
 * class Stretching_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 16
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":927
 *         return 16
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHING_FORCE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":928
 * 
 *     def typeName(self):
 *         return "STRETCHING_FORCE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_STRETCHING_FORCE);
  __pyx_r = __pyx_n_s_STRETCHING_FORCE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":927
 *         return 16
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHING_FORCE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":930
 *         return "STRETCHING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":931
 * 
 *     def validKeys(self):
 *         return "r0", "ks"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__54);
  __pyx_r = __pyx_tuple__54;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":930
 *         return "STRETCHING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":933
 *         return "r0", "ks"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":934
 * 
 *     def requiredKeys(self):
 *         return "r0", "ks"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__55);
  __pyx_r = __pyx_tuple__55;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":933
 *         return "r0", "ks"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":936
 *         return "r0", "ks"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "ks": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":937
 * 
 *     def setDefaultParams(self):
 *         self._params = {"r0": 1., "ks": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r0, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ks, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":936
 *         return "r0", "ks"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "ks": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Stretching_Force.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":939
 *         self._params = {"r0": 1., "ks": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":940
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":941
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,             # <<<<<<<<<<<<<<
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.stretching_force.r0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":942
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.stretching_force.ks); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ks, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":939
 *         self._params = {"r0": 1., "ks": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Stretching_Force._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":944
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretching_force_set_params(
 *             self._bondId, self._params["r0"], self._params["ks"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretching_Force_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretching_Force_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretching_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretching_Force_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretching_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":946
 *     def _setParamsInEsCore(self):
 *         stretching_force_set_params(
 *             self._bondId, self._params["r0"], self._params["ks"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_r0); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_ks); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":945
 * 
 *     def _setParamsInEsCore(self):
 *         stretching_force_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["r0"], self._params["ks"])
 * 
 */
  stretching_force_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":944
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretching_force_set_params(
 *             self._bondId, self._params["r0"], self._params["ks"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Stretching_Force._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":951
 * class Area_Force_Local(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 17
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":952
 * 
 *     def typeNumber(self):
 *         return 17             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_17);
  __pyx_r = __pyx_int_17;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":951
 * class Area_Force_Local(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 17
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":954
 *         return 17
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_LOCAL"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":955
 * 
 *     def typeName(self):
 *         return "AREA_FORCE_LOCAL"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_AREA_FORCE_LOCAL);
  __pyx_r = __pyx_n_s_AREA_FORCE_LOCAL;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":954
 *         return 17
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_LOCAL"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":957
 *         return "AREA_FORCE_LOCAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":958
 * 
 *     def validKeys(self):
 *         return "A0_l", "ka_l"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__56);
  __pyx_r = __pyx_tuple__56;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":957
 *         return "AREA_FORCE_LOCAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":960
 *         return "A0_l", "ka_l"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":961
 * 
 *     def requiredKeys(self):
 *         return "A0_l", "ka_l"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__57);
  __pyx_r = __pyx_tuple__57;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":960
 *         return "A0_l", "ka_l"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":963
 *         return "A0_l", "ka_l"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":964
 * 
 *     def setDefaultParams(self):
 *         self._params = {"A0_l": 1., "ka_l": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_A0_l, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ka_l, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":963
 *         return "A0_l", "ka_l"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Area_Force_Local.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":966
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":967
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":968
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,             # <<<<<<<<<<<<<<
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.area_force_local.A0_l); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_A0_l, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":969
 *         return \
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.area_force_local.ka_l); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ka_l, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":966
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Area_Force_Local._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":971
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_local_set_params(
 *             self._bondId, self._params["A0_l"], self._params["ka_l"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Area_Force_Local_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Area_Force_Local_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Area_Force_Local_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Area_Force_Local_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Area_Force_Local_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":973
 *     def _setParamsInEsCore(self):
 *         area_force_local_set_params(
 *             self._bondId, self._params["A0_l"], self._params["ka_l"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_A0_l); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_ka_l); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":972
 * 
 *     def _setParamsInEsCore(self):
 *         area_force_local_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["A0_l"], self._params["ka_l"])
 * 
 */
  area_force_local_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":971
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_local_set_params(
 *             self._bondId, self._params["A0_l"], self._params["ka_l"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Area_Force_Local._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":978
 * class Bending_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 18
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":979
 * 
 *     def typeNumber(self):
 *         return 18             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_18);
  __pyx_r = __pyx_int_18;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":978
 * class Bending_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 18
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":981
 *         return 18
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "BENDING_FORCE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":982
 * 
 *     def typeName(self):
 *         return "BENDING_FORCE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_BENDING_FORCE);
  __pyx_r = __pyx_n_s_BENDING_FORCE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":981
 *         return 18
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "BENDING_FORCE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":984
 *         return "BENDING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":985
 * 
 *     def validKeys(self):
 *         return "phi0", "kb"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__58);
  __pyx_r = __pyx_tuple__58;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":984
 *         return "BENDING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":987
 *         return "phi0", "kb"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":988
 * 
 *     def requiredKeys(self):
 *         return "phi0", "kb"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__59);
  __pyx_r = __pyx_tuple__59;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":987
 *         return "phi0", "kb"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":990
 *         return "phi0", "kb"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":991
 * 
 *     def setDefaultParams(self):
 *         self._params = {"phi0": 1., "kb": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_kb, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":990
 *         return "phi0", "kb"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Bending_Force.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":993
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":994
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":995
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,             # <<<<<<<<<<<<<<
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.bending_force.phi0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_phi0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":996
 *         return \
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.bending_force.kb); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_kb, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":993
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Bending_Force._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":998
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         bending_force_set_params(
 *             self._bondId, self._params["phi0"], self._params["kb"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_13Bending_Force_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_13Bending_Force_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_13Bending_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_13Bending_Force_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_13Bending_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":1000
 *     def _setParamsInEsCore(self):
 *         bending_force_set_params(
 *             self._bondId, self._params["phi0"], self._params["kb"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_phi0); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_kb); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":999
 * 
 *     def _setParamsInEsCore(self):
 *         bending_force_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["phi0"], self._params["kb"])
 * 
 */
  bending_force_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":998
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         bending_force_set_params(
 *             self._bondId, self._params["phi0"], self._params["kb"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Bending_Force._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1005
 * class Volume_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 19
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":1006
 * 
 *     def typeNumber(self):
 *         return 19             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_19);
  __pyx_r = __pyx_int_19;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1005
 * class Volume_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 19
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1008
 *         return 19
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "VOLUME_FORCE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":1009
 * 
 *     def typeName(self):
 *         return "VOLUME_FORCE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_VOLUME_FORCE);
  __pyx_r = __pyx_n_s_VOLUME_FORCE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1008
 *         return 19
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "VOLUME_FORCE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1011
 *         return "VOLUME_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":1012
 * 
 *     def validKeys(self):
 *         return "V0", "kv"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__60);
  __pyx_r = __pyx_tuple__60;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1011
 *         return "VOLUME_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1014
 *         return "V0", "kv"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":1015
 * 
 *     def requiredKeys(self):
 *         return "V0", "kv"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__61);
  __pyx_r = __pyx_tuple__61;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1014
 *         return "V0", "kv"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1017
 *         return "V0", "kv"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"V0": 1., "kv": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":1018
 * 
 *     def setDefaultParams(self):
 *         self._params = {"V0": 1., "kv": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_V0, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_kv, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1017
 *         return "V0", "kv"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"V0": 1., "kv": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Volume_Force.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1020
 *         self._params = {"V0": 1., "kv": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":1021
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":1022
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,             # <<<<<<<<<<<<<<
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.volume_force.V0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_V0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1023
 *         return \
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.volume_force.kv); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_kv, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1020
 *         self._params = {"V0": 1., "kv": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Volume_Force._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1025
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         volume_force_set_params(
 *             self._bondId, self._params["V0"], self._params["kv"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_12Volume_Force_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_12Volume_Force_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_12Volume_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_12Volume_Force_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_12Volume_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":1027
 *     def _setParamsInEsCore(self):
 *         volume_force_set_params(
 *             self._bondId, self._params["V0"], self._params["kv"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_V0); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_kv); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1026
 * 
 *     def _setParamsInEsCore(self):
 *         volume_force_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["V0"], self._params["kv"])
 * 
 */
  volume_force_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":1025
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         volume_force_set_params(
 *             self._bondId, self._params["V0"], self._params["kv"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Volume_Force._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1032
 * class Area_Force_Global(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 20
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":1033
 * 
 *     def typeNumber(self):
 *         return 20             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_20);
  __pyx_r = __pyx_int_20;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1032
 * class Area_Force_Global(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 20
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1035
 *         return 20
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_GLOBAL"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":1036
 * 
 *     def typeName(self):
 *         return "AREA_FORCE_GLOBAL"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_AREA_FORCE_GLOBAL);
  __pyx_r = __pyx_n_s_AREA_FORCE_GLOBAL;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1035
 *         return 20
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_GLOBAL"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1038
 *         return "AREA_FORCE_GLOBAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":1039
 * 
 *     def validKeys(self):
 *         return "A0_g", "ka_g"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__62);
  __pyx_r = __pyx_tuple__62;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1038
 *         return "AREA_FORCE_GLOBAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1041
 *         return "A0_g", "ka_g"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":1042
 * 
 *     def requiredKeys(self):
 *         return "A0_g", "ka_g"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__63);
  __pyx_r = __pyx_tuple__63;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1041
 *         return "A0_g", "ka_g"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1044
 *         return "A0_g", "ka_g"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":1045
 * 
 *     def setDefaultParams(self):
 *         self._params = {"A0_g": 1., "ka_g": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_A0_g, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ka_g, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1044
 *         return "A0_g", "ka_g"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Area_Force_Global.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1047
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":1048
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":1049
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,             # <<<<<<<<<<<<<<
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.area_force_global.A0_g); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_A0_g, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1050
 *         return \
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.area_force_global.ka_g); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ka_g, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1047
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Area_Force_Global._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1052
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_global_set_params(
 *             self._bondId, self._params["A0_g"], self._params["ka_g"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_17Area_Force_Global_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_17Area_Force_Global_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_17Area_Force_Global_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_17Area_Force_Global_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_17Area_Force_Global_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":1054
 *     def _setParamsInEsCore(self):
 *         area_force_global_set_params(
 *             self._bondId, self._params["A0_g"], self._params["ka_g"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_A0_g); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_ka_g); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1053
 * 
 *     def _setParamsInEsCore(self):
 *         area_force_global_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["A0_g"], self._params["ka_g"])
 * 
 */
  area_force_global_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":1052
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_global_set_params(
 *             self._bondId, self._params["A0_g"], self._params["ka_g"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Area_Force_Global._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1059
 * class Stretchlin_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 21
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_1typeNumber = {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_1typeNumber, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_1typeNumber(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_typeNumber(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_typeNumber(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeNumber", 0);

  /* "espressomd/interactions.pyx":1060
 * 
 *     def typeNumber(self):
 *         return 21             # <<<<<<<<<<<<<<
 * 
 *     def typeName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_21);
  __pyx_r = __pyx_int_21;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1059
 * class Stretchlin_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 21
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1062
 *         return 21
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHLIN_FORCE"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_3typeName = {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_3typeName, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_3typeName(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_2typeName(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_2typeName(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("typeName", 0);

  /* "espressomd/interactions.pyx":1063
 * 
 *     def typeName(self):
 *         return "STRETCHLIN_FORCE"             # <<<<<<<<<<<<<<
 * 
 *     def validKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_STRETCHLIN_FORCE);
  __pyx_r = __pyx_n_s_STRETCHLIN_FORCE;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1062
 *         return 21
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHLIN_FORCE"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1065
 *         return "STRETCHLIN_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_5validKeys = {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_5validKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_5validKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_4validKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_4validKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validKeys", 0);

  /* "espressomd/interactions.pyx":1066
 * 
 *     def validKeys(self):
 *         return "r0", "kslin"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__64);
  __pyx_r = __pyx_tuple__64;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1065
 *         return "STRETCHLIN_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1068
 *         return "r0", "kslin"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_7requiredKeys = {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_7requiredKeys, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_7requiredKeys(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_6requiredKeys(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_6requiredKeys(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("requiredKeys", 0);

  /* "espressomd/interactions.pyx":1069
 * 
 *     def requiredKeys(self):
 *         return "r0", "kslin"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_tuple__65);
  __pyx_r = __pyx_tuple__65;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1068
 *         return "r0", "kslin"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1071
 *         return "r0", "kslin"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_9setDefaultParams = {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_9setDefaultParams, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_9setDefaultParams(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDefaultParams (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_8setDefaultParams(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_8setDefaultParams(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setDefaultParams", 0);

  /* "espressomd/interactions.pyx":1072
 * 
 *     def setDefaultParams(self):
 *         self._params = {"r0": 1., "kslin": 0}             # <<<<<<<<<<<<<<
 * 
 *     def _getParamsFromEsCore(self):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r0, __pyx_float_1_) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_kslin, __pyx_int_0) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_params, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1071
 *         return "r0", "kslin"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("espressomd.interactions.Stretchlin_Force.setDefaultParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1074
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_11_getParamsFromEsCore = {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_11_getParamsFromEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_11_getParamsFromEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParamsFromEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_10_getParamsFromEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_10_getParamsFromEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParamsFromEsCore", 0);

  /* "espressomd/interactions.pyx":1075
 * 
 *     def _getParamsFromEsCore(self):
 *         return \             # <<<<<<<<<<<<<<
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}
 */
  __Pyx_XDECREF(__pyx_r);

  /* "espressomd/interactions.pyx":1076
 *     def _getParamsFromEsCore(self):
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,             # <<<<<<<<<<<<<<
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.stretchlin_force.r0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_r0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1077
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}             # <<<<<<<<<<<<<<
 * 
 *     def _setParamsInEsCore(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyIndex_AsSsize_t(__pyx_t_2); if (unlikely((__pyx_t_3 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((bonded_ia_params[__pyx_t_3]).p.stretchlin_force.kslin); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_kslin, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1074
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("espressomd.interactions.Stretchlin_Force._getParamsFromEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1079
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretchlin_force_set_params(
 *             self._bondId, self._params["r0"], self._params["kslin"])
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_13_setParamsInEsCore = {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_13_setParamsInEsCore, METH_O, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_16Stretchlin_Force_13_setParamsInEsCore(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_setParamsInEsCore (wrapper)", 0);
  __pyx_r = __pyx_pf_10espressomd_12interactions_16Stretchlin_Force_12_setParamsInEsCore(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_16Stretchlin_Force_12_setParamsInEsCore(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_setParamsInEsCore", 0);

  /* "espressomd/interactions.pyx":1081
 *     def _setParamsInEsCore(self):
 *         stretchlin_force_set_params(
 *             self._bondId, self._params["r0"], self._params["kslin"])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bondId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_r0); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_params); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_kslin); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1080
 * 
 *     def _setParamsInEsCore(self):
 *         stretchlin_force_set_params(             # <<<<<<<<<<<<<<
 *             self._bondId, self._params["r0"], self._params["kslin"])
 * 
 */
  stretchlin_force_set_params(__pyx_t_2, __pyx_t_4, __pyx_t_5);

  /* "espressomd/interactions.pyx":1079
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretchlin_force_set_params(
 *             self._bondId, self._params["r0"], self._params["kslin"])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("espressomd.interactions.Stretchlin_Force._setParamsInEsCore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1101
 *     BondedInteractionHandle"""
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if not isinstance(key, int):
 *             raise ValueError(
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_18BondedInteractions_1__getitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_18BondedInteractions_1__getitem__ = {"__getitem__", (PyCFunction)__pyx_pw_10espressomd_12interactions_18BondedInteractions_1__getitem__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_18BondedInteractions_1__getitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_key = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_key,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__getitem__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__getitem__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_key = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__getitem__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractions.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_10espressomd_12interactions_18BondedInteractions___getitem__(__pyx_self, __pyx_v_self, __pyx_v_key);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_18BondedInteractions___getitem__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_bondType = NULL;
  PyObject *__pyx_v_bondClass = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "espressomd/interactions.pyx":1102
 * 
 *     def __getitem__(self, key):
 *         if not isinstance(key, int):             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "Index to BondedInteractions[] hast to ba an integer referring to a bond id")
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_key); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":1103
 *     def __getitem__(self, key):
 *         if not isinstance(key, int):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Index to BondedInteractions[] hast to ba an integer referring to a bond id")
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__66, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":1107
 * 
 *         # Find out the type of the interaction from Espresso
 *         bondType = bonded_ia_params[key].type             # <<<<<<<<<<<<<<
 * 
 *         # Check if the bonded interaction exists in Espresso core
 */
  __pyx_t_4 = __Pyx_PyIndex_AsSsize_t(__pyx_v_key); if (unlikely((__pyx_t_4 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_From_int((bonded_ia_params[__pyx_t_4]).type); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_bondType = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "espressomd/interactions.pyx":1110
 * 
 *         # Check if the bonded interaction exists in Espresso core
 *         if bondType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "The bonded interaction with the id " + str(key) + " is not yet defined.")
 */
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_bondType, __pyx_int_neg_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":1112
 *         if bondType == -1:
 *             raise ValueError(
 *                 "The bonded interaction with the id " + str(key) + " is not yet defined.")             # <<<<<<<<<<<<<<
 * 
 *         # Find the appropriate class representing such a bond
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_key);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_key);
    __Pyx_GIVEREF(__pyx_v_key);
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_kp_s_The_bonded_interaction_with_the, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_is_not_yet_defined); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "espressomd/interactions.pyx":1111
 *         # Check if the bonded interaction exists in Espresso core
 *         if bondType == -1:
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "The bonded interaction with the id " + str(key) + " is not yet defined.")
 * 
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":1115
 * 
 *         # Find the appropriate class representing such a bond
 *         bondClass = bondedInteractionClasses[bondType]             # <<<<<<<<<<<<<<
 *         print bondType
 *         print "  "
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_bondedInteractionClasses); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_5, __pyx_v_bondType); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_bondClass = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "espressomd/interactions.pyx":1116
 *         # Find the appropriate class representing such a bond
 *         bondClass = bondedInteractionClasses[bondType]
 *         print bondType             # <<<<<<<<<<<<<<
 *         print "  "
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_v_bondType) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1117
 *         bondClass = bondedInteractionClasses[bondType]
 *         print bondType
 *         print "  "             # <<<<<<<<<<<<<<
 * 
 *         # And return an instance of it, which refers to the bonded interaction
 */
  if (__Pyx_PrintOne(0, __pyx_kp_s__67) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1121
 *         # And return an instance of it, which refers to the bonded interaction
 *         # id in Espresso
 *         return bondClass(key)             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_bondClass);
  __pyx_t_5 = __pyx_v_bondClass; __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_key); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_INCREF(__pyx_v_key);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_key);
    __Pyx_GIVEREF(__pyx_v_key);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "espressomd/interactions.pyx":1101
 *     BondedInteractionHandle"""
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if not isinstance(key, int):
 *             raise ValueError(
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractions.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bondType);
  __Pyx_XDECREF(__pyx_v_bondClass);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "espressomd/interactions.pyx":1123
 *         return bondClass(key)
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         # Validate arguments
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_10espressomd_12interactions_18BondedInteractions_3__setitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_10espressomd_12interactions_18BondedInteractions_3__setitem__ = {"__setitem__", (PyCFunction)__pyx_pw_10espressomd_12interactions_18BondedInteractions_3__setitem__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_10espressomd_12interactions_18BondedInteractions_3__setitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_value = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_key,&__pyx_n_s_value,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__setitem__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_key = values[1];
    __pyx_v_value = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractions.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_10espressomd_12interactions_18BondedInteractions_2__setitem__(__pyx_self, __pyx_v_self, __pyx_v_key, __pyx_v_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_10espressomd_12interactions_18BondedInteractions_2__setitem__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "espressomd/interactions.pyx":1127
 * 
 *         # type of key must be int
 *         if not isinstance(key, int):             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "Index to BondedInteractions[] has to ba an integer referring to a bond id")
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_key); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "espressomd/interactions.pyx":1128
 *         # type of key must be int
 *         if not isinstance(key, int):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Index to BondedInteractions[] has to ba an integer referring to a bond id")
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__68, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":1132
 * 
 *         # Value must be subclass off BondedInteraction
 *         if not isinstance(value, BondedInteraction):             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "Only subclasses of BondedInteraction can be assigned.")
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, ((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)); 
  __pyx_t_1 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_1) {

    /* "espressomd/interactions.pyx":1133
 *         # Value must be subclass off BondedInteraction
 *         if not isinstance(value, BondedInteraction):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Only subclasses of BondedInteraction can be assigned.")
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "espressomd/interactions.pyx":1137
 * 
 *         # Save the bond id in the BondedInteraction instance
 *         value._bondId = key             # <<<<<<<<<<<<<<
 * 
 *         # Set the parameters of the BondedInteraction instance in the Es core
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_value, __pyx_n_s_bondId, __pyx_v_key) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1140
 * 
 *         # Set the parameters of the BondedInteraction instance in the Es core
 *         value._setParamsInEsCore()             # <<<<<<<<<<<<<<
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_setParamsInEsCore); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "espressomd/interactions.pyx":1123
 *         return bondClass(key)
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         # Validate arguments
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("espressomd.interactions.BondedInteractions.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }
    goto __pyx_L11;
  }
  /*else*/ {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":247
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":249
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":251
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L14;
  }
  /*else*/ {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":254
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":256
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":257
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;
    if (__pyx_t_1) {

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":260
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__72, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":277
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    switch (__pyx_v_t) {

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_b;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":262
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_B;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_h;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_H;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_i;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_I;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_l;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_L;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_q;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_Q;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_f;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_d;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_g;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_Zf;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_Zd;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_Zg;
      break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":277
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_O;
      break;
      default:

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":281
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":286
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_7;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":289
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":291
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":292
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":295
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":291
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":772
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":774
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":775
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":774
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":777
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":777
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":780
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":780
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":783
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":784
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":783
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":786
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":793
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":797
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":798
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":799
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":804
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":805
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;
    if (__pyx_t_6) {

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":806
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__74, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":816
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":817
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":818
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":819
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":821
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":824
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":825
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":826
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__75, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":829
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":843
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":845
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }
      /*else*/ {

        /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":847
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L15:;

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":848
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L13;
    }
    /*else*/ {

      /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":852
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":797
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":853
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":786
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":969
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":971
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":972
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":974
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":975
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":977
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":969
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":980
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":981
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":983
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_10espressomd_12interactions_NonBondedInteraction(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)o);
  p->_partTypes = Py_None; Py_INCREF(Py_None);
  p->_params = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_10espressomd_12interactions_NonBondedInteraction(PyObject *o) {
  struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *p = (struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_partTypes);
  Py_CLEAR(p->_params);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_10espressomd_12interactions_NonBondedInteraction(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *p = (struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)o;
  if (p->_partTypes) {
    e = (*v)(p->_partTypes, a); if (e) return e;
  }
  if (p->_params) {
    e = (*v)(p->_params, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_10espressomd_12interactions_NonBondedInteraction(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *p = (struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction *)o;
  tmp = ((PyObject*)p->_partTypes);
  p->_partTypes = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_params);
  p->_params = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_10espressomd_12interactions_20NonBondedInteraction__partTypes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_1__get__(o);
}

static int __pyx_setprop_10espressomd_12interactions_20NonBondedInteraction__partTypes(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_3__set__(o, v);
  }
  else {
    return __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_10_partTypes_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_10espressomd_12interactions_NonBondedInteraction[] = {
  {"isValid", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_3isValid, METH_NOARGS, __pyx_doc_10espressomd_12interactions_20NonBondedInteraction_2isValid},
  {"getParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_5getParams, METH_NOARGS, __pyx_doc_10espressomd_12interactions_20NonBondedInteraction_4getParams},
  {"setParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_7setParams, METH_VARARGS|METH_KEYWORDS, __pyx_doc_10espressomd_12interactions_20NonBondedInteraction_6setParams},
  {"validateParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_9validateParams, METH_NOARGS, 0},
  {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_11_getParamsFromEsCore, METH_NOARGS, 0},
  {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_13_setParamsInEsCore, METH_NOARGS, 0},
  {"defaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_15defaultParams, METH_NOARGS, 0},
  {"isActive", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_17isActive, METH_NOARGS, 0},
  {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_19typeName, METH_NOARGS, 0},
  {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_21validKeys, METH_NOARGS, 0},
  {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_20NonBondedInteraction_23requiredKeys, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_10espressomd_12interactions_NonBondedInteraction[] = {
  {(char *)"_partTypes", __pyx_getprop_10espressomd_12interactions_20NonBondedInteraction__partTypes, __pyx_setprop_10espressomd_12interactions_20NonBondedInteraction__partTypes, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_10espressomd_12interactions_NonBondedInteraction = {
  PyVarObject_HEAD_INIT(0, 0)
  "espressomd.interactions.NonBondedInteraction", /*tp_name*/
  sizeof(struct __pyx_obj_10espressomd_12interactions_NonBondedInteraction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_10espressomd_12interactions_NonBondedInteraction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_10espressomd_12interactions_NonBondedInteraction, /*tp_traverse*/
  __pyx_tp_clear_10espressomd_12interactions_NonBondedInteraction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_10espressomd_12interactions_NonBondedInteraction, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_10espressomd_12interactions_NonBondedInteraction, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_10espressomd_12interactions_NonBondedInteraction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_10espressomd_12interactions_LennardJonesInteraction(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_10espressomd_12interactions_NonBondedInteraction(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_10espressomd_12interactions_LennardJonesInteraction[] = {
  {"validateParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_1validateParams, METH_NOARGS, 0},
  {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_3_getParamsFromEsCore, METH_NOARGS, 0},
  {"isActive", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_5isActive, METH_NOARGS, 0},
  {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_7_setParamsInEsCore, METH_NOARGS, 0},
  {"defaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_9defaultParams, METH_NOARGS, 0},
  {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_11typeName, METH_NOARGS, 0},
  {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_13validKeys, METH_NOARGS, 0},
  {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_23LennardJonesInteraction_15requiredKeys, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_10espressomd_12interactions_LennardJonesInteraction = {
  PyVarObject_HEAD_INIT(0, 0)
  "espressomd.interactions.LennardJonesInteraction", /*tp_name*/
  sizeof(struct __pyx_obj_10espressomd_12interactions_LennardJonesInteraction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_10espressomd_12interactions_NonBondedInteraction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_10espressomd_12interactions_NonBondedInteraction, /*tp_traverse*/
  __pyx_tp_clear_10espressomd_12interactions_NonBondedInteraction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_10espressomd_12interactions_LennardJonesInteraction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_10espressomd_12interactions_LennardJonesInteraction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_10espressomd_12interactions_GenericLennardJonesInteraction(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_10espressomd_12interactions_NonBondedInteraction(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_10espressomd_12interactions_GenericLennardJonesInteraction[] = {
  {"validateParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_1validateParams, METH_NOARGS, 0},
  {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_3_getParamsFromEsCore, METH_NOARGS, 0},
  {"isActive", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_5isActive, METH_NOARGS, 0},
  {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_7_setParamsInEsCore, METH_NOARGS, 0},
  {"defaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_9defaultParams, METH_NOARGS, 0},
  {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_11typeName, METH_NOARGS, 0},
  {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_13validKeys, METH_NOARGS, 0},
  {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_30GenericLennardJonesInteraction_15requiredKeys, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_10espressomd_12interactions_GenericLennardJonesInteraction = {
  PyVarObject_HEAD_INIT(0, 0)
  "espressomd.interactions.GenericLennardJonesInteraction", /*tp_name*/
  sizeof(struct __pyx_obj_10espressomd_12interactions_GenericLennardJonesInteraction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_10espressomd_12interactions_NonBondedInteraction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_10espressomd_12interactions_NonBondedInteraction, /*tp_traverse*/
  __pyx_tp_clear_10espressomd_12interactions_NonBondedInteraction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_10espressomd_12interactions_GenericLennardJonesInteraction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_10espressomd_12interactions_20NonBondedInteraction_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_10espressomd_12interactions_GenericLennardJonesInteraction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_10espressomd_12interactions_NonBondedInteractions(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_10espressomd_12interactions_NonBondedInteractions(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_10espressomd_12interactions_NonBondedInteractions(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_10espressomd_12interactions_NonBondedInteractions[] = {
  {"setForceCap", (PyCFunction)__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_3setForceCap, METH_O, 0},
  {"getForceCap", (PyCFunction)__pyx_pw_10espressomd_12interactions_21NonBondedInteractions_5getForceCap, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_NonBondedInteractions = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_10espressomd_12interactions_NonBondedInteractions, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_NonBondedInteractions = {
  0, /*mp_length*/
  __pyx_pw_10espressomd_12interactions_21NonBondedInteractions_1__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_10espressomd_12interactions_NonBondedInteractions = {
  PyVarObject_HEAD_INIT(0, 0)
  "espressomd.interactions.NonBondedInteractions", /*tp_name*/
  sizeof(struct __pyx_obj_10espressomd_12interactions_NonBondedInteractions), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_10espressomd_12interactions_NonBondedInteractions, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_NonBondedInteractions, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_NonBondedInteractions, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Access to non-bonded interaction parameters via [i,j], where i,j are particle \n    types. Returns NonBondedInteractionHandle.\n    Also: access to force capping\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_10espressomd_12interactions_NonBondedInteractions, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_10espressomd_12interactions_NonBondedInteractions, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_10espressomd_12interactions_BondedInteraction(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_10espressomd_12interactions_BondedInteraction(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_10espressomd_12interactions_17BondedInteraction_params(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_10espressomd_12interactions_17BondedInteraction_6params_1__get__(o);
}

static int __pyx_setprop_10espressomd_12interactions_17BondedInteraction_params(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_10espressomd_12interactions_17BondedInteraction_6params_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_10espressomd_12interactions_BondedInteraction[] = {
  {"isValid", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_3isValid, METH_NOARGS, __pyx_doc_10espressomd_12interactions_17BondedInteraction_2isValid},
  {"validateParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_5validateParams, METH_NOARGS, 0},
  {"_getParamsFromEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_7_getParamsFromEsCore, METH_NOARGS, 0},
  {"_setParamsInEsCore", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_9_setParamsInEsCore, METH_NOARGS, 0},
  {"setDefaultParams", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_11setDefaultParams, METH_NOARGS, 0},
  {"typeNumber", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_13typeNumber, METH_NOARGS, 0},
  {"typeName", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_15typeName, METH_NOARGS, 0},
  {"validKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_17validKeys, METH_NOARGS, 0},
  {"requiredKeys", (PyCFunction)__pyx_pw_10espressomd_12interactions_17BondedInteraction_19requiredKeys, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_10espressomd_12interactions_BondedInteraction[] = {
  {(char *)"params", __pyx_getprop_10espressomd_12interactions_17BondedInteraction_params, __pyx_setprop_10espressomd_12interactions_17BondedInteraction_params, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_10espressomd_12interactions_BondedInteraction = {
  PyVarObject_HEAD_INIT(0, 0)
  "espressomd.interactions.BondedInteraction", /*tp_name*/
  sizeof(struct __pyx_obj_10espressomd_12interactions_BondedInteraction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_10espressomd_12interactions_BondedInteraction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_10espressomd_12interactions_BondedInteraction, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_10espressomd_12interactions_BondedInteraction, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_10espressomd_12interactions_17BondedInteraction_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_10espressomd_12interactions_BondedInteraction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "interactions",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_A0_g, __pyx_k_A0_g, sizeof(__pyx_k_A0_g), 0, 0, 1, 1},
  {&__pyx_n_s_A0_l, __pyx_k_A0_l, sizeof(__pyx_k_A0_l), 0, 0, 1, 1},
  {&__pyx_n_s_ANGLE_COSINE, __pyx_k_ANGLE_COSINE, sizeof(__pyx_k_ANGLE_COSINE), 0, 0, 1, 1},
  {&__pyx_n_s_ANGLE_COSSQUARE, __pyx_k_ANGLE_COSSQUARE, sizeof(__pyx_k_ANGLE_COSSQUARE), 0, 0, 1, 1},
  {&__pyx_n_s_ANGLE_HARMONIC, __pyx_k_ANGLE_HARMONIC, sizeof(__pyx_k_ANGLE_HARMONIC), 0, 0, 1, 1},
  {&__pyx_n_s_AREA_FORCE_GLOBAL, __pyx_k_AREA_FORCE_GLOBAL, sizeof(__pyx_k_AREA_FORCE_GLOBAL), 0, 0, 1, 1},
  {&__pyx_n_s_AREA_FORCE_LOCAL, __pyx_k_AREA_FORCE_LOCAL, sizeof(__pyx_k_AREA_FORCE_LOCAL), 0, 0, 1, 1},
  {&__pyx_n_s_Angle_Cosine, __pyx_k_Angle_Cosine, sizeof(__pyx_k_Angle_Cosine), 0, 0, 1, 1},
  {&__pyx_n_s_Angle_Cosine_typeNumber, __pyx_k_Angle_Cosine_typeNumber, sizeof(__pyx_k_Angle_Cosine_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Angle_Cossquare, __pyx_k_Angle_Cossquare, sizeof(__pyx_k_Angle_Cossquare), 0, 0, 1, 1},
  {&__pyx_n_s_Angle_Cossquare_typeNumber, __pyx_k_Angle_Cossquare_typeNumber, sizeof(__pyx_k_Angle_Cossquare_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Angle_Harmonic, __pyx_k_Angle_Harmonic, sizeof(__pyx_k_Angle_Harmonic), 0, 0, 1, 1},
  {&__pyx_n_s_Angle_Harmonic_typeNumber, __pyx_k_Angle_Harmonic_typeNumber, sizeof(__pyx_k_Angle_Harmonic_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global, __pyx_k_Area_Force_Global, sizeof(__pyx_k_Area_Force_Global), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global__getParamsFrom, __pyx_k_Area_Force_Global__getParamsFrom, sizeof(__pyx_k_Area_Force_Global__getParamsFrom), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global__setParamsInEs, __pyx_k_Area_Force_Global__setParamsInEs, sizeof(__pyx_k_Area_Force_Global__setParamsInEs), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global_requiredKeys, __pyx_k_Area_Force_Global_requiredKeys, sizeof(__pyx_k_Area_Force_Global_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global_setDefaultPara, __pyx_k_Area_Force_Global_setDefaultPara, sizeof(__pyx_k_Area_Force_Global_setDefaultPara), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global_typeName, __pyx_k_Area_Force_Global_typeName, sizeof(__pyx_k_Area_Force_Global_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global_typeNumber, __pyx_k_Area_Force_Global_typeNumber, sizeof(__pyx_k_Area_Force_Global_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Global_validKeys, __pyx_k_Area_Force_Global_validKeys, sizeof(__pyx_k_Area_Force_Global_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local, __pyx_k_Area_Force_Local, sizeof(__pyx_k_Area_Force_Local), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local__getParamsFromE, __pyx_k_Area_Force_Local__getParamsFromE, sizeof(__pyx_k_Area_Force_Local__getParamsFromE), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local__setParamsInEsC, __pyx_k_Area_Force_Local__setParamsInEsC, sizeof(__pyx_k_Area_Force_Local__setParamsInEsC), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local_requiredKeys, __pyx_k_Area_Force_Local_requiredKeys, sizeof(__pyx_k_Area_Force_Local_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local_setDefaultParam, __pyx_k_Area_Force_Local_setDefaultParam, sizeof(__pyx_k_Area_Force_Local_setDefaultParam), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local_typeName, __pyx_k_Area_Force_Local_typeName, sizeof(__pyx_k_Area_Force_Local_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local_typeNumber, __pyx_k_Area_Force_Local_typeNumber, sizeof(__pyx_k_Area_Force_Local_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Area_Force_Local_validKeys, __pyx_k_Area_Force_Local_validKeys, sizeof(__pyx_k_Area_Force_Local_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_s_At_least_the_following_keys_have, __pyx_k_At_least_the_following_keys_have, sizeof(__pyx_k_At_least_the_following_keys_have), 0, 0, 1, 0},
  {&__pyx_n_s_BENDING_FORCE, __pyx_k_BENDING_FORCE, sizeof(__pyx_k_BENDING_FORCE), 0, 0, 1, 1},
  {&__pyx_n_s_BOND_ENDANGLEDIST, __pyx_k_BOND_ENDANGLEDIST, sizeof(__pyx_k_BOND_ENDANGLEDIST), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force, __pyx_k_Bending_Force, sizeof(__pyx_k_Bending_Force), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force__getParamsFromEsCo, __pyx_k_Bending_Force__getParamsFromEsCo, sizeof(__pyx_k_Bending_Force__getParamsFromEsCo), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force__setParamsInEsCore, __pyx_k_Bending_Force__setParamsInEsCore, sizeof(__pyx_k_Bending_Force__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force_requiredKeys, __pyx_k_Bending_Force_requiredKeys, sizeof(__pyx_k_Bending_Force_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force_setDefaultParams, __pyx_k_Bending_Force_setDefaultParams, sizeof(__pyx_k_Bending_Force_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force_typeName, __pyx_k_Bending_Force_typeName, sizeof(__pyx_k_Bending_Force_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force_typeNumber, __pyx_k_Bending_Force_typeNumber, sizeof(__pyx_k_Bending_Force_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Bending_Force_validKeys, __pyx_k_Bending_Force_validKeys, sizeof(__pyx_k_Bending_Force_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined, __pyx_k_BondedInteractionNotDefined, sizeof(__pyx_k_BondedInteractionNotDefined), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined___in, __pyx_k_BondedInteractionNotDefined___in, sizeof(__pyx_k_BondedInteractionNotDefined___in), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined__get, __pyx_k_BondedInteractionNotDefined__get, sizeof(__pyx_k_BondedInteractionNotDefined__get), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined__set, __pyx_k_BondedInteractionNotDefined__set, sizeof(__pyx_k_BondedInteractionNotDefined__set), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined_requ, __pyx_k_BondedInteractionNotDefined_requ, sizeof(__pyx_k_BondedInteractionNotDefined_requ), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined_setD, __pyx_k_BondedInteractionNotDefined_setD, sizeof(__pyx_k_BondedInteractionNotDefined_setD), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined_type, __pyx_k_BondedInteractionNotDefined_type, sizeof(__pyx_k_BondedInteractionNotDefined_type), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined_type_2, __pyx_k_BondedInteractionNotDefined_type_2, sizeof(__pyx_k_BondedInteractionNotDefined_type_2), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractionNotDefined_vali, __pyx_k_BondedInteractionNotDefined_vali, sizeof(__pyx_k_BondedInteractionNotDefined_vali), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractions, __pyx_k_BondedInteractions, sizeof(__pyx_k_BondedInteractions), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractions___getitem, __pyx_k_BondedInteractions___getitem, sizeof(__pyx_k_BondedInteractions___getitem), 0, 0, 1, 1},
  {&__pyx_n_s_BondedInteractions___setitem, __pyx_k_BondedInteractions___setitem, sizeof(__pyx_k_BondedInteractions___setitem), 0, 0, 1, 1},
  {&__pyx_kp_s_Could_not_set_Generic_Lennard_Jo, __pyx_k_Could_not_set_Generic_Lennard_Jo, sizeof(__pyx_k_Could_not_set_Generic_Lennard_Jo), 0, 0, 1, 0},
  {&__pyx_kp_s_Could_not_set_Lennard_Jones_para, __pyx_k_Could_not_set_Lennard_Jones_para, sizeof(__pyx_k_Could_not_set_Lennard_Jones_para), 0, 0, 1, 0},
  {&__pyx_kp_s_Could_not_set_forcecap, __pyx_k_Could_not_set_forcecap, sizeof(__pyx_k_Could_not_set_forcecap), 0, 0, 1, 0},
  {&__pyx_n_s_DIHEDRAL, __pyx_k_DIHEDRAL, sizeof(__pyx_k_DIHEDRAL), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral, __pyx_k_Dihedral, sizeof(__pyx_k_Dihedral), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral__getParamsFromEsCore, __pyx_k_Dihedral__getParamsFromEsCore, sizeof(__pyx_k_Dihedral__getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral__setParamsInEsCore, __pyx_k_Dihedral__setParamsInEsCore, sizeof(__pyx_k_Dihedral__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral_requiredKeys, __pyx_k_Dihedral_requiredKeys, sizeof(__pyx_k_Dihedral_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral_setDefaultParams, __pyx_k_Dihedral_setDefaultParams, sizeof(__pyx_k_Dihedral_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral_typeName, __pyx_k_Dihedral_typeName, sizeof(__pyx_k_Dihedral_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral_typeNumber, __pyx_k_Dihedral_typeNumber, sizeof(__pyx_k_Dihedral_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Dihedral_validKeys, __pyx_k_Dihedral_validKeys, sizeof(__pyx_k_Dihedral_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Endangledist, __pyx_k_Endangledist, sizeof(__pyx_k_Endangledist), 0, 0, 1, 1},
  {&__pyx_n_s_Exception, __pyx_k_Exception, sizeof(__pyx_k_Exception), 0, 0, 1, 1},
  {&__pyx_n_s_FENE, __pyx_k_FENE, sizeof(__pyx_k_FENE), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond, __pyx_k_FeneBond, sizeof(__pyx_k_FeneBond), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond__getParamsFromEsCore, __pyx_k_FeneBond__getParamsFromEsCore, sizeof(__pyx_k_FeneBond__getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond__setParamsInEsCore, __pyx_k_FeneBond__setParamsInEsCore, sizeof(__pyx_k_FeneBond__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond_requiredKeys, __pyx_k_FeneBond_requiredKeys, sizeof(__pyx_k_FeneBond_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond_setDefaultParams, __pyx_k_FeneBond_setDefaultParams, sizeof(__pyx_k_FeneBond_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond_typeName, __pyx_k_FeneBond_typeName, sizeof(__pyx_k_FeneBond_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond_typeNumber, __pyx_k_FeneBond_typeNumber, sizeof(__pyx_k_FeneBond_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_FeneBond_validKeys, __pyx_k_FeneBond_validKeys, sizeof(__pyx_k_FeneBond_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_GenericLennardJones, __pyx_k_GenericLennardJones, sizeof(__pyx_k_GenericLennardJones), 0, 0, 1, 1},
  {&__pyx_kp_s_Generic_Lennard_Jones_cutoff_has, __pyx_k_Generic_Lennard_Jones_cutoff_has, sizeof(__pyx_k_Generic_Lennard_Jones_cutoff_has), 0, 0, 1, 0},
  {&__pyx_kp_s_Generic_Lennard_Jones_eps_has_to, __pyx_k_Generic_Lennard_Jones_eps_has_to, sizeof(__pyx_k_Generic_Lennard_Jones_eps_has_to), 0, 0, 1, 0},
  {&__pyx_kp_s_Generic_Lennard_Jones_sigma_has, __pyx_k_Generic_Lennard_Jones_sigma_has, sizeof(__pyx_k_Generic_Lennard_Jones_sigma_has), 0, 0, 1, 0},
  {&__pyx_n_s_HARMONIC, __pyx_k_HARMONIC, sizeof(__pyx_k_HARMONIC), 0, 0, 1, 1},
  {&__pyx_n_s_HARMONIC_DUMBBELL, __pyx_k_HARMONIC_DUMBBELL, sizeof(__pyx_k_HARMONIC_DUMBBELL), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond, __pyx_k_HarmonicBond, sizeof(__pyx_k_HarmonicBond), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond__getParamsFromEsCor, __pyx_k_HarmonicBond__getParamsFromEsCor, sizeof(__pyx_k_HarmonicBond__getParamsFromEsCor), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond__setParamsInEsCore, __pyx_k_HarmonicBond__setParamsInEsCore, sizeof(__pyx_k_HarmonicBond__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond_requiredKeys, __pyx_k_HarmonicBond_requiredKeys, sizeof(__pyx_k_HarmonicBond_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond_setDefaultParams, __pyx_k_HarmonicBond_setDefaultParams, sizeof(__pyx_k_HarmonicBond_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond_typeName, __pyx_k_HarmonicBond_typeName, sizeof(__pyx_k_HarmonicBond_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond_typeNumber, __pyx_k_HarmonicBond_typeNumber, sizeof(__pyx_k_HarmonicBond_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicBond_validKeys, __pyx_k_HarmonicBond_validKeys, sizeof(__pyx_k_HarmonicBond_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond, __pyx_k_HarmonicDumbbellBond, sizeof(__pyx_k_HarmonicDumbbellBond), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond__getParamsF, __pyx_k_HarmonicDumbbellBond__getParamsF, sizeof(__pyx_k_HarmonicDumbbellBond__getParamsF), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond__setParamsI, __pyx_k_HarmonicDumbbellBond__setParamsI, sizeof(__pyx_k_HarmonicDumbbellBond__setParamsI), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond_requiredKey, __pyx_k_HarmonicDumbbellBond_requiredKey, sizeof(__pyx_k_HarmonicDumbbellBond_requiredKey), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond_setDefaultP, __pyx_k_HarmonicDumbbellBond_setDefaultP, sizeof(__pyx_k_HarmonicDumbbellBond_setDefaultP), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond_typeName, __pyx_k_HarmonicDumbbellBond_typeName, sizeof(__pyx_k_HarmonicDumbbellBond_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond_typeNumber, __pyx_k_HarmonicDumbbellBond_typeNumber, sizeof(__pyx_k_HarmonicDumbbellBond_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_HarmonicDumbbellBond_validKeys, __pyx_k_HarmonicDumbbellBond_validKeys, sizeof(__pyx_k_HarmonicDumbbellBond_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_s_Index_to_BondedInteractions_has, __pyx_k_Index_to_BondedInteractions_has, sizeof(__pyx_k_Index_to_BondedInteractions_has), 0, 0, 1, 0},
  {&__pyx_kp_s_Index_to_BondedInteractions_hast, __pyx_k_Index_to_BondedInteractions_hast, sizeof(__pyx_k_Index_to_BondedInteractions_hast), 0, 0, 1, 0},
  {&__pyx_n_s_LennardJones, __pyx_k_LennardJones, sizeof(__pyx_k_LennardJones), 0, 0, 1, 1},
  {&__pyx_kp_s_Lennard_Jones_cutoff_has_to_be_0, __pyx_k_Lennard_Jones_cutoff_has_to_be_0, sizeof(__pyx_k_Lennard_Jones_cutoff_has_to_be_0), 0, 0, 1, 0},
  {&__pyx_kp_s_Lennard_Jones_eps_has_to_be_0, __pyx_k_Lennard_Jones_eps_has_to_be_0, sizeof(__pyx_k_Lennard_Jones_eps_has_to_be_0), 0, 0, 1, 0},
  {&__pyx_kp_s_Lennard_Jones_sigma_has_to_be_0, __pyx_k_Lennard_Jones_sigma_has_to_be_0, sizeof(__pyx_k_Lennard_Jones_sigma_has_to_be_0), 0, 0, 1, 0},
  {&__pyx_n_s_NonBondedInteractionHandle, __pyx_k_NonBondedInteractionHandle, sizeof(__pyx_k_NonBondedInteractionHandle), 0, 0, 1, 1},
  {&__pyx_n_s_NonBondedInteractionHandle___ini, __pyx_k_NonBondedInteractionHandle___ini, sizeof(__pyx_k_NonBondedInteractionHandle___ini), 0, 0, 1, 1},
  {&__pyx_kp_s_NonBondedInteractions_expects_tw, __pyx_k_NonBondedInteractions_expects_tw, sizeof(__pyx_k_NonBondedInteractions_expects_tw), 0, 0, 1, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_OVERLAPPED, __pyx_k_OVERLAPPED, sizeof(__pyx_k_OVERLAPPED), 0, 0, 1, 1},
  {&__pyx_kp_s_Only_subclasses_of_BondedInterac, __pyx_k_Only_subclasses_of_BondedInterac, sizeof(__pyx_k_Only_subclasses_of_BondedInterac), 0, 0, 1, 0},
  {&__pyx_kp_s_Only_the_following_keys_are_supp, __pyx_k_Only_the_following_keys_are_supp, sizeof(__pyx_k_Only_the_following_keys_are_supp), 0, 0, 1, 0},
  {&__pyx_n_s_Overlapped, __pyx_k_Overlapped, sizeof(__pyx_k_Overlapped), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped__getParamsFromEsCore, __pyx_k_Overlapped__getParamsFromEsCore, sizeof(__pyx_k_Overlapped__getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped__setParamsInEsCore, __pyx_k_Overlapped__setParamsInEsCore, sizeof(__pyx_k_Overlapped__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped_requiredKeys, __pyx_k_Overlapped_requiredKeys, sizeof(__pyx_k_Overlapped_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped_setDefaultParams, __pyx_k_Overlapped_setDefaultParams, sizeof(__pyx_k_Overlapped_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped_typeName, __pyx_k_Overlapped_typeName, sizeof(__pyx_k_Overlapped_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped_typeNumber, __pyx_k_Overlapped_typeNumber, sizeof(__pyx_k_Overlapped_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Overlapped_validKeys, __pyx_k_Overlapped_validKeys, sizeof(__pyx_k_Overlapped_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_s_Provides_access_to_all_Non_bonde, __pyx_k_Provides_access_to_all_Non_bonde, sizeof(__pyx_k_Provides_access_to_all_Non_bonde), 0, 0, 1, 0},
  {&__pyx_n_s_RIGID, __pyx_k_RIGID, sizeof(__pyx_k_RIGID), 0, 0, 1, 1},
  {&__pyx_kp_s_Represents_the_bonded_interactio, __pyx_k_Represents_the_bonded_interactio, sizeof(__pyx_k_Represents_the_bonded_interactio), 0, 0, 1, 0},
  {&__pyx_n_s_RigidBond, __pyx_k_RigidBond, sizeof(__pyx_k_RigidBond), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_STRETCHING_FORCE, __pyx_k_STRETCHING_FORCE, sizeof(__pyx_k_STRETCHING_FORCE), 0, 0, 1, 1},
  {&__pyx_n_s_STRETCHLIN_FORCE, __pyx_k_STRETCHLIN_FORCE, sizeof(__pyx_k_STRETCHLIN_FORCE), 0, 0, 1, 1},
  {&__pyx_n_s_SUBT_LJ, __pyx_k_SUBT_LJ, sizeof(__pyx_k_SUBT_LJ), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force, __pyx_k_Stretching_Force, sizeof(__pyx_k_Stretching_Force), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force__getParamsFromE, __pyx_k_Stretching_Force__getParamsFromE, sizeof(__pyx_k_Stretching_Force__getParamsFromE), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force__setParamsInEsC, __pyx_k_Stretching_Force__setParamsInEsC, sizeof(__pyx_k_Stretching_Force__setParamsInEsC), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force_requiredKeys, __pyx_k_Stretching_Force_requiredKeys, sizeof(__pyx_k_Stretching_Force_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force_setDefaultParam, __pyx_k_Stretching_Force_setDefaultParam, sizeof(__pyx_k_Stretching_Force_setDefaultParam), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force_typeName, __pyx_k_Stretching_Force_typeName, sizeof(__pyx_k_Stretching_Force_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force_typeNumber, __pyx_k_Stretching_Force_typeNumber, sizeof(__pyx_k_Stretching_Force_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Stretching_Force_validKeys, __pyx_k_Stretching_Force_validKeys, sizeof(__pyx_k_Stretching_Force_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force, __pyx_k_Stretchlin_Force, sizeof(__pyx_k_Stretchlin_Force), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force__getParamsFromE, __pyx_k_Stretchlin_Force__getParamsFromE, sizeof(__pyx_k_Stretchlin_Force__getParamsFromE), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force__setParamsInEsC, __pyx_k_Stretchlin_Force__setParamsInEsC, sizeof(__pyx_k_Stretchlin_Force__setParamsInEsC), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force_requiredKeys, __pyx_k_Stretchlin_Force_requiredKeys, sizeof(__pyx_k_Stretchlin_Force_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force_setDefaultParam, __pyx_k_Stretchlin_Force_setDefaultParam, sizeof(__pyx_k_Stretchlin_Force_setDefaultParam), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force_typeName, __pyx_k_Stretchlin_Force_typeName, sizeof(__pyx_k_Stretchlin_Force_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force_typeNumber, __pyx_k_Stretchlin_Force_typeNumber, sizeof(__pyx_k_Stretchlin_Force_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Stretchlin_Force_validKeys, __pyx_k_Stretchlin_Force_validKeys, sizeof(__pyx_k_Stretchlin_Force_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction, __pyx_k_Subclasses_of_BondedInteraction, sizeof(__pyx_k_Subclasses_of_BondedInteraction), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction_2, __pyx_k_Subclasses_of_BondedInteraction_2, sizeof(__pyx_k_Subclasses_of_BondedInteraction_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction_3, __pyx_k_Subclasses_of_BondedInteraction_3, sizeof(__pyx_k_Subclasses_of_BondedInteraction_3), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction_4, __pyx_k_Subclasses_of_BondedInteraction_4, sizeof(__pyx_k_Subclasses_of_BondedInteraction_4), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction_5, __pyx_k_Subclasses_of_BondedInteraction_5, sizeof(__pyx_k_Subclasses_of_BondedInteraction_5), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction_6, __pyx_k_Subclasses_of_BondedInteraction_6, sizeof(__pyx_k_Subclasses_of_BondedInteraction_6), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_BondedInteraction_7, __pyx_k_Subclasses_of_BondedInteraction_7, sizeof(__pyx_k_Subclasses_of_BondedInteraction_7), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti, __pyx_k_Subclasses_of_NonBondedInteracti, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti_2, __pyx_k_Subclasses_of_NonBondedInteracti_2, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti_3, __pyx_k_Subclasses_of_NonBondedInteracti_3, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti_3), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti_4, __pyx_k_Subclasses_of_NonBondedInteracti_4, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti_4), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti_5, __pyx_k_Subclasses_of_NonBondedInteracti_5, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti_5), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti_6, __pyx_k_Subclasses_of_NonBondedInteracti_6, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti_6), 0, 0, 1, 0},
  {&__pyx_kp_s_Subclasses_of_NonBondedInteracti_7, __pyx_k_Subclasses_of_NonBondedInteracti_7, sizeof(__pyx_k_Subclasses_of_NonBondedInteracti_7), 0, 0, 1, 0},
  {&__pyx_n_s_Subt_Lj, __pyx_k_Subt_Lj, sizeof(__pyx_k_Subt_Lj), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj__getParamsFromEsCore, __pyx_k_Subt_Lj__getParamsFromEsCore, sizeof(__pyx_k_Subt_Lj__getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj__setParamsInEsCore, __pyx_k_Subt_Lj__setParamsInEsCore, sizeof(__pyx_k_Subt_Lj__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj_requiredKeys, __pyx_k_Subt_Lj_requiredKeys, sizeof(__pyx_k_Subt_Lj_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj_setDefaultParams, __pyx_k_Subt_Lj_setDefaultParams, sizeof(__pyx_k_Subt_Lj_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj_typeName, __pyx_k_Subt_Lj_typeName, sizeof(__pyx_k_Subt_Lj_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj_typeNumber, __pyx_k_Subt_Lj_typeNumber, sizeof(__pyx_k_Subt_Lj_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Subt_Lj_validKeys, __pyx_k_Subt_Lj_validKeys, sizeof(__pyx_k_Subt_Lj_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_TABULATED, __pyx_k_TABULATED, sizeof(__pyx_k_TABULATED), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated, __pyx_k_Tabulated, sizeof(__pyx_k_Tabulated), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated__getParamsFromEsCore, __pyx_k_Tabulated__getParamsFromEsCore, sizeof(__pyx_k_Tabulated__getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated__setParamsInEsCore, __pyx_k_Tabulated__setParamsInEsCore, sizeof(__pyx_k_Tabulated__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated_requiredKeys, __pyx_k_Tabulated_requiredKeys, sizeof(__pyx_k_Tabulated_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated_setDefaultParams, __pyx_k_Tabulated_setDefaultParams, sizeof(__pyx_k_Tabulated_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated_typeName, __pyx_k_Tabulated_typeName, sizeof(__pyx_k_Tabulated_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated_typeNumber, __pyx_k_Tabulated_typeNumber, sizeof(__pyx_k_Tabulated_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Tabulated_validKeys, __pyx_k_Tabulated_validKeys, sizeof(__pyx_k_Tabulated_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_s_The_bond_with_this_id_is_not_def, __pyx_k_The_bond_with_this_id_is_not_def, sizeof(__pyx_k_The_bond_with_this_id_is_not_def), 0, 0, 1, 0},
  {&__pyx_kp_s_The_bonded_interaction_with_the, __pyx_k_The_bonded_interaction_with_the, sizeof(__pyx_k_The_bonded_interaction_with_the), 0, 0, 1, 0},
  {&__pyx_kp_s_The_constructor_has_to_be_called, __pyx_k_The_constructor_has_to_be_called, sizeof(__pyx_k_The_constructor_has_to_be_called), 0, 0, 1, 0},
  {&__pyx_kp_s_The_constructor_has_to_be_called_2, __pyx_k_The_constructor_has_to_be_called_2, sizeof(__pyx_k_The_constructor_has_to_be_called_2), 0, 0, 1, 0},
  {&__pyx_kp_s_The_particle_types_have_to_be_of, __pyx_k_The_particle_types_have_to_be_of, sizeof(__pyx_k_The_particle_types_have_to_be_of), 0, 0, 1, 0},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_V0, __pyx_k_V0, sizeof(__pyx_k_V0), 0, 0, 1, 1},
  {&__pyx_n_s_VIRTUAL, __pyx_k_VIRTUAL, sizeof(__pyx_k_VIRTUAL), 0, 0, 1, 1},
  {&__pyx_n_s_VOLUME_FORCE, __pyx_k_VOLUME_FORCE, sizeof(__pyx_k_VOLUME_FORCE), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual, __pyx_k_Virtual, sizeof(__pyx_k_Virtual), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual__getParamsFromEsCore, __pyx_k_Virtual__getParamsFromEsCore, sizeof(__pyx_k_Virtual__getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual__setParamsInEsCore, __pyx_k_Virtual__setParamsInEsCore, sizeof(__pyx_k_Virtual__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual_requiredKeys, __pyx_k_Virtual_requiredKeys, sizeof(__pyx_k_Virtual_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual_setDefaultParams, __pyx_k_Virtual_setDefaultParams, sizeof(__pyx_k_Virtual_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual_typeName, __pyx_k_Virtual_typeName, sizeof(__pyx_k_Virtual_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual_typeNumber, __pyx_k_Virtual_typeNumber, sizeof(__pyx_k_Virtual_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual_validKeys, __pyx_k_Virtual_validKeys, sizeof(__pyx_k_Virtual_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force, __pyx_k_Volume_Force, sizeof(__pyx_k_Volume_Force), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force__getParamsFromEsCor, __pyx_k_Volume_Force__getParamsFromEsCor, sizeof(__pyx_k_Volume_Force__getParamsFromEsCor), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force__setParamsInEsCore, __pyx_k_Volume_Force__setParamsInEsCore, sizeof(__pyx_k_Volume_Force__setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force_requiredKeys, __pyx_k_Volume_Force_requiredKeys, sizeof(__pyx_k_Volume_Force_requiredKeys), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force_setDefaultParams, __pyx_k_Volume_Force_setDefaultParams, sizeof(__pyx_k_Volume_Force_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force_typeName, __pyx_k_Volume_Force_typeName, sizeof(__pyx_k_Volume_Force_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force_typeNumber, __pyx_k_Volume_Force_typeNumber, sizeof(__pyx_k_Volume_Force_typeNumber), 0, 0, 1, 1},
  {&__pyx_n_s_Volume_Force_validKeys, __pyx_k_Volume_Force_validKeys, sizeof(__pyx_k_Volume_Force_validKeys), 0, 0, 1, 1},
  {&__pyx_kp_s__43, __pyx_k__43, sizeof(__pyx_k__43), 0, 0, 1, 0},
  {&__pyx_kp_s__67, __pyx_k__67, sizeof(__pyx_k__67), 0, 0, 1, 0},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_auto, __pyx_k_auto, sizeof(__pyx_k_auto), 0, 0, 1, 1},
  {&__pyx_n_s_b1, __pyx_k_b1, sizeof(__pyx_k_b1), 0, 0, 1, 1},
  {&__pyx_n_s_b2, __pyx_k_b2, sizeof(__pyx_k_b2), 0, 0, 1, 1},
  {&__pyx_n_s_bend, __pyx_k_bend, sizeof(__pyx_k_bend), 0, 0, 1, 1},
  {&__pyx_n_s_bondClass, __pyx_k_bondClass, sizeof(__pyx_k_bondClass), 0, 0, 1, 1},
  {&__pyx_n_s_bondId, __pyx_k_bondId, sizeof(__pyx_k_bondId), 0, 0, 1, 1},
  {&__pyx_n_s_bondId_2, __pyx_k_bondId_2, sizeof(__pyx_k_bondId_2), 0, 0, 1, 1},
  {&__pyx_n_s_bondType, __pyx_k_bondType, sizeof(__pyx_k_bondType), 0, 0, 1, 1},
  {&__pyx_kp_s_bond_in_the_Espresso_core, __pyx_k_bond_in_the_Espresso_core, sizeof(__pyx_k_bond_in_the_Espresso_core), 0, 0, 1, 0},
  {&__pyx_n_s_bondedInteractionClasses, __pyx_k_bondedInteractionClasses, sizeof(__pyx_k_bondedInteractionClasses), 0, 0, 1, 1},
  {&__pyx_n_s_class_s, __pyx_k_class_s, sizeof(__pyx_k_class_s), 0, 0, 1, 1},
  {&__pyx_n_s_cutoff, __pyx_k_cutoff, sizeof(__pyx_k_cutoff), 0, 0, 1, 1},
  {&__pyx_n_s_d_r_max, __pyx_k_d_r_max, sizeof(__pyx_k_d_r_max), 0, 0, 1, 1},
  {&__pyx_n_s_defaultParams, __pyx_k_defaultParams, sizeof(__pyx_k_defaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_delta, __pyx_k_delta, sizeof(__pyx_k_delta), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_e1, __pyx_k_e1, sizeof(__pyx_k_e1), 0, 0, 1, 1},
  {&__pyx_n_s_e2, __pyx_k_e2, sizeof(__pyx_k_e2), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_epsilon, __pyx_k_epsilon, sizeof(__pyx_k_epsilon), 0, 0, 1, 1},
  {&__pyx_n_s_espressomd_interactions, __pyx_k_espressomd_interactions, sizeof(__pyx_k_espressomd_interactions), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {&__pyx_n_s_genericLennardJones, __pyx_k_genericLennardJones, sizeof(__pyx_k_genericLennardJones), 0, 0, 1, 1},
  {&__pyx_n_s_getParamsFromEsCore, __pyx_k_getParamsFromEsCore, sizeof(__pyx_k_getParamsFromEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_getitem, __pyx_k_getitem, sizeof(__pyx_k_getitem), 0, 0, 1, 1},
  {&__pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_k_home_haozeke_Github_LabBom_espr, sizeof(__pyx_k_home_haozeke_Github_LabBom_espr), 0, 0, 1, 0},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_invstepsize, __pyx_k_invstepsize, sizeof(__pyx_k_invstepsize), 0, 0, 1, 1},
  {&__pyx_n_s_isActive, __pyx_k_isActive, sizeof(__pyx_k_isActive), 0, 0, 1, 1},
  {&__pyx_kp_s_is_not_yet_defined, __pyx_k_is_not_yet_defined, sizeof(__pyx_k_is_not_yet_defined), 0, 0, 1, 0},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_k1, __pyx_k_k1, sizeof(__pyx_k_k1), 0, 0, 1, 1},
  {&__pyx_n_s_k2, __pyx_k_k2, sizeof(__pyx_k_k2), 0, 0, 1, 1},
  {&__pyx_kp_s_k_2, __pyx_k_k_2, sizeof(__pyx_k_k_2), 0, 0, 1, 0},
  {&__pyx_n_s_ka_g, __pyx_k_ka_g, sizeof(__pyx_k_ka_g), 0, 0, 1, 1},
  {&__pyx_n_s_ka_l, __pyx_k_ka_l, sizeof(__pyx_k_ka_l), 0, 0, 1, 1},
  {&__pyx_n_s_kb, __pyx_k_kb, sizeof(__pyx_k_kb), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_ks, __pyx_k_ks, sizeof(__pyx_k_ks), 0, 0, 1, 1},
  {&__pyx_n_s_kslin, __pyx_k_kslin, sizeof(__pyx_k_kslin), 0, 0, 1, 1},
  {&__pyx_n_s_kv, __pyx_k_kv, sizeof(__pyx_k_kv), 0, 0, 1, 1},
  {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
  {&__pyx_n_s_lambda, __pyx_k_lambda, sizeof(__pyx_k_lambda), 0, 0, 1, 1},
  {&__pyx_n_s_lennardJones, __pyx_k_lennardJones, sizeof(__pyx_k_lennardJones), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_maxval, __pyx_k_maxval, sizeof(__pyx_k_maxval), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_min, __pyx_k_min, sizeof(__pyx_k_min), 0, 0, 1, 1},
  {&__pyx_n_s_minval, __pyx_k_minval, sizeof(__pyx_k_minval), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_mult, __pyx_k_mult, sizeof(__pyx_k_mult), 0, 0, 1, 1},
  {&__pyx_kp_s_mult_2, __pyx_k_mult_2, sizeof(__pyx_k_mult_2), 0, 0, 1, 0},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_kp_s_not_compiled_into_Espresso_core, __pyx_k_not_compiled_into_Espresso_core, sizeof(__pyx_k_not_compiled_into_Espresso_core), 0, 0, 1, 0},
  {&__pyx_n_s_npoints, __pyx_k_npoints, sizeof(__pyx_k_npoints), 0, 0, 1, 1},
  {&__pyx_n_s_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
  {&__pyx_n_s_offset, __pyx_k_offset, sizeof(__pyx_k_offset), 0, 0, 1, 1},
  {&__pyx_n_s_overlap_type, __pyx_k_overlap_type, sizeof(__pyx_k_overlap_type), 0, 0, 1, 1},
  {&__pyx_n_s_params, __pyx_k_params, sizeof(__pyx_k_params), 0, 0, 1, 1},
  {&__pyx_n_s_params_2, __pyx_k_params_2, sizeof(__pyx_k_params_2), 0, 0, 1, 1},
  {&__pyx_n_s_phase, __pyx_k_phase, sizeof(__pyx_k_phase), 0, 0, 1, 1},
  {&__pyx_n_s_phi0, __pyx_k_phi0, sizeof(__pyx_k_phi0), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_r0, __pyx_k_r0, sizeof(__pyx_k_r0), 0, 0, 1, 1},
  {&__pyx_n_s_r_0, __pyx_k_r_0, sizeof(__pyx_k_r_0), 0, 0, 1, 1},
  {&__pyx_n_s_r_cut, __pyx_k_r_cut, sizeof(__pyx_k_r_cut), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_requiredKeys, __pyx_k_requiredKeys, sizeof(__pyx_k_requiredKeys), 0, 0, 1, 1},
  {&__pyx_kp_s_s_has_to_be_defined_in_myconfig, __pyx_k_s_has_to_be_defined_in_myconfig, sizeof(__pyx_k_s_has_to_be_defined_in_myconfig), 0, 0, 1, 0},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_s_setDefaultParams, __pyx_k_setDefaultParams, sizeof(__pyx_k_setDefaultParams), 0, 0, 1, 1},
  {&__pyx_n_s_setParamsInEsCore, __pyx_k_setParamsInEsCore, sizeof(__pyx_k_setParamsInEsCore), 0, 0, 1, 1},
  {&__pyx_n_s_setitem, __pyx_k_setitem, sizeof(__pyx_k_setitem), 0, 0, 1, 1},
  {&__pyx_n_s_shift, __pyx_k_shift, sizeof(__pyx_k_shift), 0, 0, 1, 1},
  {&__pyx_n_s_sigma, __pyx_k_sigma, sizeof(__pyx_k_sigma), 0, 0, 1, 1},
  {&__pyx_n_s_str, __pyx_k_str, sizeof(__pyx_k_str), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 0, 1, 1},
  {&__pyx_n_s_type1, __pyx_k_type1, sizeof(__pyx_k_type1), 0, 0, 1, 1},
  {&__pyx_n_s_type1_2, __pyx_k_type1_2, sizeof(__pyx_k_type1_2), 0, 0, 1, 1},
  {&__pyx_n_s_type2, __pyx_k_type2, sizeof(__pyx_k_type2), 0, 0, 1, 1},
  {&__pyx_n_s_type2_2, __pyx_k_type2_2, sizeof(__pyx_k_type2_2), 0, 0, 1, 1},
  {&__pyx_n_s_typeName, __pyx_k_typeName, sizeof(__pyx_k_typeName), 0, 0, 1, 1},
  {&__pyx_n_s_typeNumber, __pyx_k_typeNumber, sizeof(__pyx_k_typeNumber), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_validKeys, __pyx_k_validKeys, sizeof(__pyx_k_validKeys), 0, 0, 1, 1},
  {&__pyx_n_s_validateParams, __pyx_k_validateParams, sizeof(__pyx_k_validateParams), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_object = __Pyx_GetBuiltinName(__pyx_n_s_object); if (!__pyx_builtin_object) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_Exception = __Pyx_GetBuiltinName(__pyx_n_s_Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "espressomd/interactions.pyx":58
 * 
 *         else:
 *             raise Exception(             # <<<<<<<<<<<<<<
 *                 "The constructor has to be called either with two particle type ids (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_The_constructor_has_to_be_called); if (unlikely(!__pyx_tuple_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "espressomd/interactions.pyx":114
 * 
 *     def _getParamsFromEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "espressomd/interactions.pyx":118
 * 
 *     def _setParamsInEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the setParamsFromEsCore() method.")
 * 
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti_2); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "espressomd/interactions.pyx":122
 * 
 *     def defaultParams(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the defaultParams() method.")
 * 
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti_3); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "espressomd/interactions.pyx":130
 *         if self._partTypes[0] >= 0 and self._partTypes[1] >= 0:
 *             self._params = self._getParamsFromEsCore()
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the isActive() method.")
 * 
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti_4); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "espressomd/interactions.pyx":134
 * 
 *     def typeName(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the typeName() method.")
 * 
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti_5); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "espressomd/interactions.pyx":138
 * 
 *     def validKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the validKeys() method.")
 * 
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti_6); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "espressomd/interactions.pyx":142
 * 
 *     def requiredKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of NonBondedInteraction must define the requiredKeys() method.")
 * 
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_NonBondedInteracti_7); if (unlikely(!__pyx_tuple__8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "espressomd/interactions.pyx":151
 *         def validateParams(self):
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Lennard-Jones eps has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_Lennard_Jones_eps_has_to_be_0); if (unlikely(!__pyx_tuple__9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "espressomd/interactions.pyx":153
 *                 raise ValueError("Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Lennard-Jones cutoff has to be >=0")
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_Lennard_Jones_sigma_has_to_be_0); if (unlikely(!__pyx_tuple__10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "espressomd/interactions.pyx":155
 *                 raise ValueError("Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Lennard-Jones cutoff has to be >=0")             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_Lennard_Jones_cutoff_has_to_be_0); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "espressomd/interactions.pyx":187
 *                                         0.0,
 *                                         self._params["min"]):
 *                 raise Exception("Could not set Lennard Jones parameters")             # <<<<<<<<<<<<<<
 * 
 *         def defaultParams(self):
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_Could_not_set_Lennard_Jones_para); if (unlikely(!__pyx_tuple__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "espressomd/interactions.pyx":202
 * 
 *         def validKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "min"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __pyx_tuple__13 = PyTuple_Pack(6, __pyx_n_s_epsilon, __pyx_n_s_sigma, __pyx_n_s_cutoff, __pyx_n_s_shift, __pyx_n_s_offset, __pyx_n_s_min); if (unlikely(!__pyx_tuple__13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "espressomd/interactions.pyx":205
 * 
 *         def requiredKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift"             # <<<<<<<<<<<<<<
 * 
 * # Generic Lennard Jones
 */
  __pyx_tuple__14 = PyTuple_Pack(4, __pyx_n_s_epsilon, __pyx_n_s_sigma, __pyx_n_s_cutoff, __pyx_n_s_shift); if (unlikely(!__pyx_tuple__14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "espressomd/interactions.pyx":213
 *         def validateParams(self):
 *             if self._params["epsilon"] < 0:
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_Generic_Lennard_Jones_eps_has_to); if (unlikely(!__pyx_tuple__15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "espressomd/interactions.pyx":215
 *                 raise ValueError("Generic Lennard-Jones eps has to be >=0")
 *             if self._params["sigma"] < 0:
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")             # <<<<<<<<<<<<<<
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Generic Lennard-Jones cutoff has to be >=0")
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_Generic_Lennard_Jones_sigma_has); if (unlikely(!__pyx_tuple__16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "espressomd/interactions.pyx":217
 *                 raise ValueError("Generic Lennard-Jones sigma has to be >=0")
 *             if self._params["cutoff"] < 0:
 *                 raise ValueError("Generic Lennard-Jones cutoff has to be >=0")             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_Generic_Lennard_Jones_cutoff_has); if (unlikely(!__pyx_tuple__17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "espressomd/interactions.pyx":274
 *                                     self._params["b2"],
 *                                     0.0):
 *                     raise Exception(             # <<<<<<<<<<<<<<
 *                         "Could not set Generic Lennard Jones parameters")
 * 
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_Could_not_set_Generic_Lennard_Jo); if (unlikely(!__pyx_tuple__18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "espressomd/interactions.pyx":295
 * 
 *         def validKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2", "delta", "lambda"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __pyx_tuple__19 = PyTuple_Pack(11, __pyx_n_s_epsilon, __pyx_n_s_sigma, __pyx_n_s_cutoff, __pyx_n_s_shift, __pyx_n_s_offset, __pyx_n_s_e1, __pyx_n_s_e2, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_delta, __pyx_n_s_lambda); if (unlikely(!__pyx_tuple__19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "espressomd/interactions.pyx":298
 * 
 *         def requiredKeys(self):
 *             return "epsilon", "sigma", "cutoff", "shift", "offset", "e1", "e2", "b1", "b2"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__20 = PyTuple_Pack(9, __pyx_n_s_epsilon, __pyx_n_s_sigma, __pyx_n_s_cutoff, __pyx_n_s_shift, __pyx_n_s_offset, __pyx_n_s_e1, __pyx_n_s_e2, __pyx_n_s_b1, __pyx_n_s_b2); if (unlikely(!__pyx_tuple__20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "espressomd/interactions.pyx":315
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 *             raise TypeError("The particle types have to be of type integer.")             # <<<<<<<<<<<<<<
 *         self.type1 = _type1
 *         self.type2 = _type2
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_The_particle_types_have_to_be_of); if (unlikely(!__pyx_tuple__21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "espressomd/interactions.pyx":332
 *     def __getitem__(self, key):
 *         if not isinstance(key, tuple):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         if len(key) != 2 or (not isinstance(key[0], int)) or (not isinstance(key[1], int)):
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_NonBondedInteractions_expects_tw); if (unlikely(!__pyx_tuple__22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "espressomd/interactions.pyx":335
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         if len(key) != 2 or (not isinstance(key[0], int)) or (not isinstance(key[1], int)):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "NonBondedInteractions[] expects two particle types as indices.")
 *         return NonBondedInteractionHandle(key[0], key[1])
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_NonBondedInteractions_expects_tw); if (unlikely(!__pyx_tuple__23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "espressomd/interactions.pyx":341
 *     def setForceCap(self, cap):
 *         if forcecap_set_params(cap):
 *             raise Exception("Could not set forcecap")             # <<<<<<<<<<<<<<
 * 
 *     def getForceCap(self):
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_Could_not_set_forcecap); if (unlikely(!__pyx_tuple__24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "espressomd/interactions.pyx":381
 * 
 *         else:
 *             raise Exception(             # <<<<<<<<<<<<<<
 *                 "The constructor has to be called either with a bond id (as interger), or with a set of keyword arguments describing a new interaction")
 * 
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_The_constructor_has_to_be_called_2); if (unlikely(!__pyx_tuple__25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "espressomd/interactions.pyx":420
 * 
 *     def _getParamsFromEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the _getParamsFromEsCore() method.")
 * 
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction); if (unlikely(!__pyx_tuple__26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "espressomd/interactions.pyx":424
 * 
 *     def _setParamsInEsCore(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the setParamsFromEsCore() method.")
 * 
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction_2); if (unlikely(!__pyx_tuple__27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "espressomd/interactions.pyx":428
 * 
 *     def setDefaultParams(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the setDefaultParams() method.")
 * 
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction_3); if (unlikely(!__pyx_tuple__28)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "espressomd/interactions.pyx":432
 * 
 *     def typeNumber(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the typeNumber() method.")
 * 
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction_4); if (unlikely(!__pyx_tuple__29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "espressomd/interactions.pyx":436
 * 
 *     def typeName(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the typeName() method.")
 * 
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction_5); if (unlikely(!__pyx_tuple__30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "espressomd/interactions.pyx":440
 * 
 *     def validKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the validKeys() method.")
 * 
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction_6); if (unlikely(!__pyx_tuple__31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "espressomd/interactions.pyx":444
 * 
 *     def requiredKeys(self):
 *         raise Exception(             # <<<<<<<<<<<<<<
 *             "Subclasses of BondedInteraction must define the requiredKeys() method.")
 * 
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_s_Subclasses_of_BondedInteraction_7); if (unlikely(!__pyx_tuple__32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "espressomd/interactions.pyx":485
 * 
 *     def validKeys(self):
 *         return "k", "d_r_max", "r_0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__33 = PyTuple_Pack(3, __pyx_n_s_k, __pyx_n_s_d_r_max, __pyx_n_s_r_0); if (unlikely(!__pyx_tuple__33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "espressomd/interactions.pyx":488
 * 
 *     def requiredKeys(self):
 *         return "k", "d_r_max"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_n_s_k, __pyx_n_s_d_r_max); if (unlikely(!__pyx_tuple__34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "espressomd/interactions.pyx":514
 * 
 *     def validKeys(self):
 *         return "k", "r_0", "r_cut"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__35 = PyTuple_Pack(3, __pyx_n_s_k, __pyx_n_s_r_0, __pyx_n_s_r_cut); if (unlikely(!__pyx_tuple__35)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "espressomd/interactions.pyx":517
 * 
 *     def requiredKeys(self):
 *         return "k", "r_0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__36 = PyTuple_Pack(2, __pyx_n_s_k, __pyx_n_s_r_0); if (unlikely(!__pyx_tuple__36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "espressomd/interactions.pyx":543
 * 
 *         def validKeys(self):
 *             return "k1", "k2", "r_0", "r_cut"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __pyx_tuple__37 = PyTuple_Pack(4, __pyx_n_s_k1, __pyx_n_s_k2, __pyx_n_s_r_0, __pyx_n_s_r_cut); if (unlikely(!__pyx_tuple__37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "espressomd/interactions.pyx":546
 * 
 *         def requiredKeys(self):
 *             return "k1", "k2", "r_0"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __pyx_tuple__38 = PyTuple_Pack(3, __pyx_n_s_k1, __pyx_n_s_k2, __pyx_n_s_r_0); if (unlikely(!__pyx_tuple__38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "espressomd/interactions.pyx":636
 * 
 *     def validKeys(self):
 *         return "mult", "bend", "phase"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__39 = PyTuple_Pack(3, __pyx_n_s_mult, __pyx_n_s_bend, __pyx_n_s_phase); if (unlikely(!__pyx_tuple__39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "espressomd/interactions.pyx":639
 * 
 *     def requiredKeys(self):
 *         return "mult", "bend", "phase"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__40 = PyTuple_Pack(3, __pyx_n_s_mult, __pyx_n_s_bend, __pyx_n_s_phase); if (unlikely(!__pyx_tuple__40)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "espressomd/interactions.pyx":665
 * 
 *         def validKeys(self):
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __pyx_tuple__41 = PyTuple_Pack(6, __pyx_n_s_type, __pyx_n_s_filename, __pyx_n_s_npoints, __pyx_n_s_minval, __pyx_n_s_maxval, __pyx_n_s_invstepsize); if (unlikely(!__pyx_tuple__41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "espressomd/interactions.pyx":668
 * 
 *         def requiredKeys(self):
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __pyx_tuple__42 = PyTuple_Pack(6, __pyx_n_s_type, __pyx_n_s_filename, __pyx_n_s_npoints, __pyx_n_s_minval, __pyx_n_s_maxval, __pyx_n_s_invstepsize); if (unlikely(!__pyx_tuple__42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "espressomd/interactions.pyx":722
 * 
 *         def validKeys(self):
 *             return "r", "k"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __pyx_tuple__44 = PyTuple_Pack(2, __pyx_n_s_r, __pyx_n_s_k); if (unlikely(!__pyx_tuple__44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "espressomd/interactions.pyx":725
 * 
 *         def requiredKeys(self):
 *             return "r", "k"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __pyx_tuple__45 = PyTuple_Pack(2, __pyx_n_s_r, __pyx_n_s_k); if (unlikely(!__pyx_tuple__45)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "espressomd/interactions.pyx":810
 * 
 *         def validKeys(self):
 *             return "overlap_type", "filename"             # <<<<<<<<<<<<<<
 * 
 *         def requiredKeys(self):
 */
  __pyx_tuple__46 = PyTuple_Pack(2, __pyx_n_s_overlap_type, __pyx_n_s_filename); if (unlikely(!__pyx_tuple__46)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "espressomd/interactions.pyx":813
 * 
 *         def requiredKeys(self):
 *             return "overlap_type", "filename"             # <<<<<<<<<<<<<<
 * 
 *         def setDefaultParams(self):
 */
  __pyx_tuple__47 = PyTuple_Pack(2, __pyx_n_s_overlap_type, __pyx_n_s_filename); if (unlikely(!__pyx_tuple__47)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "espressomd/interactions.pyx":841
 * 
 *     def validKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__48 = PyTuple_Pack(2, __pyx_n_s_bend, __pyx_n_s_phi0); if (unlikely(!__pyx_tuple__48)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "espressomd/interactions.pyx":844
 * 
 *     def requiredKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__49 = PyTuple_Pack(2, __pyx_n_s_bend, __pyx_n_s_phi0); if (unlikely(!__pyx_tuple__49)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "espressomd/interactions.pyx":871
 * 
 *     def validKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__50 = PyTuple_Pack(2, __pyx_n_s_bend, __pyx_n_s_phi0); if (unlikely(!__pyx_tuple__50)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "espressomd/interactions.pyx":874
 * 
 *     def requiredKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__51 = PyTuple_Pack(2, __pyx_n_s_bend, __pyx_n_s_phi0); if (unlikely(!__pyx_tuple__51)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "espressomd/interactions.pyx":901
 * 
 *     def validKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__52 = PyTuple_Pack(2, __pyx_n_s_bend, __pyx_n_s_phi0); if (unlikely(!__pyx_tuple__52)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "espressomd/interactions.pyx":904
 * 
 *     def requiredKeys(self):
 *         return "bend", "phi0"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__53 = PyTuple_Pack(2, __pyx_n_s_bend, __pyx_n_s_phi0); if (unlikely(!__pyx_tuple__53)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "espressomd/interactions.pyx":931
 * 
 *     def validKeys(self):
 *         return "r0", "ks"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__54 = PyTuple_Pack(2, __pyx_n_s_r0, __pyx_n_s_ks); if (unlikely(!__pyx_tuple__54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 931; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "espressomd/interactions.pyx":934
 * 
 *     def requiredKeys(self):
 *         return "r0", "ks"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__55 = PyTuple_Pack(2, __pyx_n_s_r0, __pyx_n_s_ks); if (unlikely(!__pyx_tuple__55)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "espressomd/interactions.pyx":958
 * 
 *     def validKeys(self):
 *         return "A0_l", "ka_l"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__56 = PyTuple_Pack(2, __pyx_n_s_A0_l, __pyx_n_s_ka_l); if (unlikely(!__pyx_tuple__56)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "espressomd/interactions.pyx":961
 * 
 *     def requiredKeys(self):
 *         return "A0_l", "ka_l"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__57 = PyTuple_Pack(2, __pyx_n_s_A0_l, __pyx_n_s_ka_l); if (unlikely(!__pyx_tuple__57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "espressomd/interactions.pyx":985
 * 
 *     def validKeys(self):
 *         return "phi0", "kb"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__58 = PyTuple_Pack(2, __pyx_n_s_phi0, __pyx_n_s_kb); if (unlikely(!__pyx_tuple__58)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "espressomd/interactions.pyx":988
 * 
 *     def requiredKeys(self):
 *         return "phi0", "kb"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__59 = PyTuple_Pack(2, __pyx_n_s_phi0, __pyx_n_s_kb); if (unlikely(!__pyx_tuple__59)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "espressomd/interactions.pyx":1012
 * 
 *     def validKeys(self):
 *         return "V0", "kv"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__60 = PyTuple_Pack(2, __pyx_n_s_V0, __pyx_n_s_kv); if (unlikely(!__pyx_tuple__60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "espressomd/interactions.pyx":1015
 * 
 *     def requiredKeys(self):
 *         return "V0", "kv"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__61 = PyTuple_Pack(2, __pyx_n_s_V0, __pyx_n_s_kv); if (unlikely(!__pyx_tuple__61)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "espressomd/interactions.pyx":1039
 * 
 *     def validKeys(self):
 *         return "A0_g", "ka_g"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__62 = PyTuple_Pack(2, __pyx_n_s_A0_g, __pyx_n_s_ka_g); if (unlikely(!__pyx_tuple__62)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1039; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "espressomd/interactions.pyx":1042
 * 
 *     def requiredKeys(self):
 *         return "A0_g", "ka_g"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__63 = PyTuple_Pack(2, __pyx_n_s_A0_g, __pyx_n_s_ka_g); if (unlikely(!__pyx_tuple__63)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);

  /* "espressomd/interactions.pyx":1066
 * 
 *     def validKeys(self):
 *         return "r0", "kslin"             # <<<<<<<<<<<<<<
 * 
 *     def requiredKeys(self):
 */
  __pyx_tuple__64 = PyTuple_Pack(2, __pyx_n_s_r0, __pyx_n_s_kslin); if (unlikely(!__pyx_tuple__64)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "espressomd/interactions.pyx":1069
 * 
 *     def requiredKeys(self):
 *         return "r0", "kslin"             # <<<<<<<<<<<<<<
 * 
 *     def setDefaultParams(self):
 */
  __pyx_tuple__65 = PyTuple_Pack(2, __pyx_n_s_r0, __pyx_n_s_kslin); if (unlikely(!__pyx_tuple__65)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "espressomd/interactions.pyx":1103
 *     def __getitem__(self, key):
 *         if not isinstance(key, int):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Index to BondedInteractions[] hast to ba an integer referring to a bond id")
 * 
 */
  __pyx_tuple__66 = PyTuple_Pack(1, __pyx_kp_s_Index_to_BondedInteractions_hast); if (unlikely(!__pyx_tuple__66)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);

  /* "espressomd/interactions.pyx":1128
 *         # type of key must be int
 *         if not isinstance(key, int):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Index to BondedInteractions[] has to ba an integer referring to a bond id")
 * 
 */
  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_kp_s_Index_to_BondedInteractions_has); if (unlikely(!__pyx_tuple__68)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "espressomd/interactions.pyx":1133
 *         # Value must be subclass off BondedInteraction
 *         if not isinstance(value, BondedInteraction):
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Only subclasses of BondedInteraction can be assigned.")
 * 
 */
  __pyx_tuple__69 = PyTuple_Pack(1, __pyx_kp_s_Only_subclasses_of_BondedInterac); if (unlikely(!__pyx_tuple__69)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__70 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__70)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__71 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__71)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":260
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__72 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__72)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__73 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__73)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":806
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__74 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__74)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":826
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__75 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__75)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "espressomd/interactions.pyx":312
 *     lennardJones = None
 * 
 *     def __init__(self, _type1, _type2):             # <<<<<<<<<<<<<<
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 */
  __pyx_tuple__76 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_type1, __pyx_n_s_type2); if (unlikely(!__pyx_tuple__76)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_init, 312, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":450
 * class BondedInteractionNotDefined(object):
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 */
  __pyx_tuple__78 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_args, __pyx_n_s_kwargs); if (unlikely(!__pyx_tuple__78)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_init, 450, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":454
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__80 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__80)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__80, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 454, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":457
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__82 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__82)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__82, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 457, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":460
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__84 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__84)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__84, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 460, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":463
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__86 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__86)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 463, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":466
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__88 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__88)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__88, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 466, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":469
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__90 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__90)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 469, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":472
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_tuple__92 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__92)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);
  __pyx_codeobj__93 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__92, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 472, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__93)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":478
 * class FeneBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
  __pyx_tuple__94 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__94)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__94, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 478, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":481
 *         return 0
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "FENE"
 * 
 */
  __pyx_tuple__96 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__96)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 481, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":484
 *         return "FENE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max", "r_0"
 * 
 */
  __pyx_tuple__98 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__98)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 484, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":487
 *         return "k", "d_r_max", "r_0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max"
 * 
 */
  __pyx_tuple__100 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__100)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 487, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":490
 *         return "k", "d_r_max"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r_0": 0.}
 *         # Everything else has to be supplied by the user, anyway
 */
  __pyx_tuple__102 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__102)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 490, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":494
 *         # Everything else has to be supplied by the user, anyway
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 */
  __pyx_tuple__104 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__104)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 494, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":500
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         fene_set_params(
 *             self._bondId, self._params["k"], self._params["d_r_max"], self._params["r_0"])
 */
  __pyx_tuple__106 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__106)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 500, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":507
 * class HarmonicBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 1
 * 
 */
  __pyx_tuple__108 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__108)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 507, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":510
 *         return 1
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "HARMONIC"
 * 
 */
  __pyx_tuple__110 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__110)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__110);
  __Pyx_GIVEREF(__pyx_tuple__110);
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__110, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 510, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":513
 *         return "HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0", "r_cut"
 * 
 */
  __pyx_tuple__112 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__112)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__112, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 513, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":516
 *         return "k", "r_0", "r_cut"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0"
 * 
 */
  __pyx_tuple__114 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__114)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__114, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 516, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":519
 *         return "k", "r_0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 */
  __pyx_tuple__116 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__116)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__116);
  __Pyx_GIVEREF(__pyx_tuple__116);
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__116, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 519, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":522
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 */
  __pyx_tuple__118 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__118)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 522, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":528
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         harmonic_set_params(
 *             self._bondId, self._params["k"], self._params["r_0"], self._params["r_cut"])
 */
  __pyx_tuple__120 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__120)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);
  __pyx_codeobj__121 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__120, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 528, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__121)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":536
 *     class HarmonicDumbbellBond(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 2
 * 
 */
  __pyx_tuple__122 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__122)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__122);
  __Pyx_GIVEREF(__pyx_tuple__122);
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__122, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 536, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":539
 *             return 2
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "HARMONIC_DUMBBELL"
 * 
 */
  __pyx_tuple__124 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__124)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 539, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":542
 *             return "HARMONIC_DUMBBELL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 */
  __pyx_tuple__126 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__126)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);
  __pyx_codeobj__127 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__126, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 542, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__127)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":545
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0"
 * 
 */
  __pyx_tuple__128 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__128)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__128);
  __Pyx_GIVEREF(__pyx_tuple__128);
  __pyx_codeobj__129 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__128, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 545, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__129)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":548
 *             return "k1", "k2", "r_0"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"r_cut": 0.}
 * 
 */
  __pyx_tuple__130 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__130)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__130, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 548, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":551
 *             self._params = {"r_cut": 0.}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 */
  __pyx_tuple__132 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__132)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__132);
  __Pyx_GIVEREF(__pyx_tuple__132);
  __pyx_codeobj__133 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__132, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 551, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__133)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":558
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             harmonic_dumbbell_set_params(
 *                 self._bondId, self._params["k1"], self._params["k2"],
 */
  __pyx_tuple__134 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__134)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__134);
  __Pyx_GIVEREF(__pyx_tuple__134);
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__134, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 558, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":629
 * class Dihedral(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 5
 * 
 */
  __pyx_tuple__136 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__136)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 629, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":632
 *         return 5
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "DIHEDRAL"
 * 
 */
  __pyx_tuple__138 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__138)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__138);
  __Pyx_GIVEREF(__pyx_tuple__138);
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__138, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 632, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":635
 *         return "DIHEDRAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */
  __pyx_tuple__140 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__140)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 635, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":638
 *         return "mult", "bend", "phase"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */
  __pyx_tuple__142 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__142)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 638, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":641
 *         return "mult", "bend", "phase"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 */
  __pyx_tuple__144 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__144)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__144, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 641, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":644
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 */
  __pyx_tuple__146 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__146)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__146);
  __Pyx_GIVEREF(__pyx_tuple__146);
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__146, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 644, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":650
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         dihedral_set_params(
 *             self._bondId, self._params["mult"], self._params["bend"], self._params["phase"])
 */
  __pyx_tuple__148 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__148)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__148, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 650, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":658
 *     class Tabulated(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 6
 * 
 */
  __pyx_tuple__150 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__150)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__150);
  __Pyx_GIVEREF(__pyx_tuple__150);
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__150, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 658, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":661
 *             return 6
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "TABULATED"
 * 
 */
  __pyx_tuple__152 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__152)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__152);
  __Pyx_GIVEREF(__pyx_tuple__152);
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__152, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 661, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":664
 *             return "TABULATED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */
  __pyx_tuple__154 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__154)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__154, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 664, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":667
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */
  __pyx_tuple__156 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__156)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__156);
  __Pyx_GIVEREF(__pyx_tuple__156);
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__156, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 667, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":670
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"type": 1, "filename": "", "npoints": 0, "minval": 0, "maxval": 1,
 *                             "invstepsize": 1}
 */
  __pyx_tuple__158 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__158)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__158);
  __Pyx_GIVEREF(__pyx_tuple__158);
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__158, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 670, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":674
 *                             "invstepsize": 1}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 */
  __pyx_tuple__160 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__160)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__160);
  __Pyx_GIVEREF(__pyx_tuple__160);
  __pyx_codeobj__161 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__160, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 674, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__161)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":683
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             tabulated_bonded_set_params(
 *                 self._bondId, self._params["type"], self._params["filename"])
 */
  __pyx_tuple__162 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__162)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__162);
  __Pyx_GIVEREF(__pyx_tuple__162);
  __pyx_codeobj__163 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__162, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 683, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__163)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":715
 * class Subt_Lj(BondedInteraction):
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 7
 * 
 */
  __pyx_tuple__164 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__164)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__164);
  __Pyx_GIVEREF(__pyx_tuple__164);
  __pyx_codeobj__165 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__164, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 715, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__165)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":718
 *             return 7
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "SUBT_LJ"
 * 
 */
  __pyx_tuple__166 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__166)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__166);
  __Pyx_GIVEREF(__pyx_tuple__166);
  __pyx_codeobj__167 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__166, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 718, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__167)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":721
 *             return "SUBT_LJ"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */
  __pyx_tuple__168 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__168)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__168);
  __Pyx_GIVEREF(__pyx_tuple__168);
  __pyx_codeobj__169 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__168, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 721, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__169)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":724
 *             return "r", "k"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */
  __pyx_tuple__170 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__170)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__170);
  __Pyx_GIVEREF(__pyx_tuple__170);
  __pyx_codeobj__171 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__170, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 724, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__171)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":727
 *             return "r", "k"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"k": 0, "r": 0}
 * 
 */
  __pyx_tuple__172 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__172)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__172);
  __Pyx_GIVEREF(__pyx_tuple__172);
  __pyx_codeobj__173 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__172, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 727, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__173)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":730
 *             self._params = {"k": 0, "r": 0}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,
 */
  __pyx_tuple__174 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__174)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__174);
  __Pyx_GIVEREF(__pyx_tuple__174);
  __pyx_codeobj__175 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__174, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 730, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__175)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":735
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             subt_lj_set_params(
 *                 self._bondId, self._params["k"], self._params["r"])
 */
  __pyx_tuple__176 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__176)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__176);
  __Pyx_GIVEREF(__pyx_tuple__176);
  __pyx_codeobj__177 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__176, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 735, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__177)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":742
 *     class Virtual(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 9
 * 
 */
  __pyx_tuple__178 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__178)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__178);
  __Pyx_GIVEREF(__pyx_tuple__178);
  __pyx_codeobj__179 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__178, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 742, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__179)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":745
 *             return 9
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "VIRTUAL"
 * 
 */
  __pyx_tuple__180 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__180)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__180);
  __Pyx_GIVEREF(__pyx_tuple__180);
  __pyx_codeobj__181 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__180, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 745, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__181)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":748
 *             return "VIRTUAL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_tuple__182 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__182)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__182);
  __Pyx_GIVEREF(__pyx_tuple__182);
  __pyx_codeobj__183 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__182, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 748, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__183)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":751
 *             return
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_tuple__184 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__184)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__184);
  __Pyx_GIVEREF(__pyx_tuple__184);
  __pyx_codeobj__185 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__184, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 751, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__185)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":754
 *             return
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */
  __pyx_tuple__186 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__186)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__186);
  __Pyx_GIVEREF(__pyx_tuple__186);
  __pyx_codeobj__187 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__186, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 754, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__187)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":757
 *             pass
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */
  __pyx_tuple__188 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__188)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__188);
  __Pyx_GIVEREF(__pyx_tuple__188);
  __pyx_codeobj__189 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__188, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 757, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__189)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":760
 *             pass
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             virtual_set_params(self._bondId)
 * 
 */
  __pyx_tuple__190 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__190)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__190);
  __Pyx_GIVEREF(__pyx_tuple__190);
  __pyx_codeobj__191 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__190, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 760, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__191)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":803
 *     class Overlapped(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 12
 * 
 */
  __pyx_tuple__192 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__192)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__192);
  __Pyx_GIVEREF(__pyx_tuple__192);
  __pyx_codeobj__193 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 803, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__193)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":806
 *             return 12
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "OVERLAPPED"
 * 
 */
  __pyx_tuple__194 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__194)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__194);
  __Pyx_GIVEREF(__pyx_tuple__194);
  __pyx_codeobj__195 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__194, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 806, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__195)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":809
 *             return "OVERLAPPED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */
  __pyx_tuple__196 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__196)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__196);
  __Pyx_GIVEREF(__pyx_tuple__196);
  __pyx_codeobj__197 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__196, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 809, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__197)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":812
 *             return "overlap_type", "filename"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */
  __pyx_tuple__198 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__198)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__198);
  __Pyx_GIVEREF(__pyx_tuple__198);
  __pyx_codeobj__199 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__198, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 812, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__199)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":815
 *             return "overlap_type", "filename"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 */
  __pyx_tuple__200 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__200)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__200);
  __Pyx_GIVEREF(__pyx_tuple__200);
  __pyx_codeobj__201 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__200, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 815, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__201)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":818
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,
 */
  __pyx_tuple__202 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__202)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__202);
  __Pyx_GIVEREF(__pyx_tuple__202);
  __pyx_codeobj__203 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__202, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 818, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__203)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":823
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             overlapped_bonded_set_params(
 *                 self._bondId, self._params["overlap_type"], self._params["filename"])
 */
  __pyx_tuple__204 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__204)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__204);
  __Pyx_GIVEREF(__pyx_tuple__204);
  __pyx_codeobj__205 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__204, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 823, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__205)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":834
 *     class Angle_Harmonic(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 13
 * 
 */
  __pyx_tuple__206 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__206)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__206);
  __Pyx_GIVEREF(__pyx_tuple__206);
  __pyx_codeobj__207 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__206, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 834, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__207)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":837
 *             return 13
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_HARMONIC"
 * 
 */
  __pyx_tuple__208 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__208)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__208);
  __Pyx_GIVEREF(__pyx_tuple__208);
  __pyx_codeobj__209 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__208, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 837, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__209)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":840
 *         return "ANGLE_HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_tuple__210 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__210)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__210);
  __Pyx_GIVEREF(__pyx_tuple__210);
  __pyx_codeobj__211 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__210, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 840, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__211)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":843
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_tuple__212 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__212)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__212);
  __Pyx_GIVEREF(__pyx_tuple__212);
  __pyx_codeobj__213 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__212, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 843, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__213)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":846
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */
  __pyx_tuple__214 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__214)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__214);
  __Pyx_GIVEREF(__pyx_tuple__214);
  __pyx_codeobj__215 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__214, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 846, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__215)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":849
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,
 */
  __pyx_tuple__216 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__216)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__216);
  __Pyx_GIVEREF(__pyx_tuple__216);
  __pyx_codeobj__217 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__216, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 849, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__217)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":854
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_harmonic_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */
  __pyx_tuple__218 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__218)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__218);
  __Pyx_GIVEREF(__pyx_tuple__218);
  __pyx_codeobj__219 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__218, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 854, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__219)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":864
 *     class Angle_Cosine(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 14
 * 
 */
  __pyx_tuple__220 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__220)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__220);
  __Pyx_GIVEREF(__pyx_tuple__220);
  __pyx_codeobj__221 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__220, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 864, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__221)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":867
 *             return 14
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSINE"
 * 
 */
  __pyx_tuple__222 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__222)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__222);
  __Pyx_GIVEREF(__pyx_tuple__222);
  __pyx_codeobj__223 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__222, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 867, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__223)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":870
 *         return "ANGLE_COSINE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_tuple__224 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__224)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__224);
  __Pyx_GIVEREF(__pyx_tuple__224);
  __pyx_codeobj__225 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__224, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 870, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__225)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":873
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_tuple__226 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__226)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__226);
  __Pyx_GIVEREF(__pyx_tuple__226);
  __pyx_codeobj__227 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__226, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 873, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__227)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":876
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */
  __pyx_tuple__228 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__228)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__228);
  __Pyx_GIVEREF(__pyx_tuple__228);
  __pyx_codeobj__229 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__228, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 876, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__229)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":879
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,
 */
  __pyx_tuple__230 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__230)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__230);
  __Pyx_GIVEREF(__pyx_tuple__230);
  __pyx_codeobj__231 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__230, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 879, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__231)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":884
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cosine_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */
  __pyx_tuple__232 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__232)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__232);
  __Pyx_GIVEREF(__pyx_tuple__232);
  __pyx_codeobj__233 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__232, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 884, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__233)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":894
 *     class Angle_Cossquare(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 15
 * 
 */
  __pyx_tuple__234 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__234)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 894; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__234);
  __Pyx_GIVEREF(__pyx_tuple__234);
  __pyx_codeobj__235 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__234, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 894, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__235)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 894; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":897
 *             return 15
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSSQUARE"
 * 
 */
  __pyx_tuple__236 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__236)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__236);
  __Pyx_GIVEREF(__pyx_tuple__236);
  __pyx_codeobj__237 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__236, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 897, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__237)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":900
 *         return "ANGLE_COSSQUARE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_tuple__238 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__238)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__238);
  __Pyx_GIVEREF(__pyx_tuple__238);
  __pyx_codeobj__239 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__238, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 900, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__239)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":903
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_tuple__240 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__240)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__240);
  __Pyx_GIVEREF(__pyx_tuple__240);
  __pyx_codeobj__241 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__240, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 903, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__241)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":906
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */
  __pyx_tuple__242 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__242)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__242);
  __Pyx_GIVEREF(__pyx_tuple__242);
  __pyx_codeobj__243 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__242, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 906, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__243)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":909
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,
 */
  __pyx_tuple__244 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__244)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__244);
  __Pyx_GIVEREF(__pyx_tuple__244);
  __pyx_codeobj__245 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__244, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 909, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__245)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":914
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cossquare_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */
  __pyx_tuple__246 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__246)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__246);
  __Pyx_GIVEREF(__pyx_tuple__246);
  __pyx_codeobj__247 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__246, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 914, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__247)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":924
 * class Stretching_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 16
 * 
 */
  __pyx_tuple__248 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__248)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__248);
  __Pyx_GIVEREF(__pyx_tuple__248);
  __pyx_codeobj__249 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__248, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 924, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__249)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":927
 *         return 16
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHING_FORCE"
 * 
 */
  __pyx_tuple__250 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__250)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__250);
  __Pyx_GIVEREF(__pyx_tuple__250);
  __pyx_codeobj__251 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__250, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 927, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__251)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":930
 *         return "STRETCHING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */
  __pyx_tuple__252 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__252)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__252);
  __Pyx_GIVEREF(__pyx_tuple__252);
  __pyx_codeobj__253 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__252, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 930, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__253)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":933
 *         return "r0", "ks"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */
  __pyx_tuple__254 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__254)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__254);
  __Pyx_GIVEREF(__pyx_tuple__254);
  __pyx_codeobj__255 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__254, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 933, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__255)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":936
 *         return "r0", "ks"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "ks": 0}
 * 
 */
  __pyx_tuple__256 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__256)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__256);
  __Pyx_GIVEREF(__pyx_tuple__256);
  __pyx_codeobj__257 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__256, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 936, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__257)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":939
 *         self._params = {"r0": 1., "ks": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,
 */
  __pyx_tuple__258 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__258)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__258);
  __Pyx_GIVEREF(__pyx_tuple__258);
  __pyx_codeobj__259 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__258, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 939, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__259)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":944
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretching_force_set_params(
 *             self._bondId, self._params["r0"], self._params["ks"])
 */
  __pyx_tuple__260 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__260)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__260);
  __Pyx_GIVEREF(__pyx_tuple__260);
  __pyx_codeobj__261 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__260, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 944, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__261)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":951
 * class Area_Force_Local(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 17
 * 
 */
  __pyx_tuple__262 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__262)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__262);
  __Pyx_GIVEREF(__pyx_tuple__262);
  __pyx_codeobj__263 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__262, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 951, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__263)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":954
 *         return 17
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_LOCAL"
 * 
 */
  __pyx_tuple__264 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__264)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__264);
  __Pyx_GIVEREF(__pyx_tuple__264);
  __pyx_codeobj__265 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__264, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 954, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__265)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":957
 *         return "AREA_FORCE_LOCAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */
  __pyx_tuple__266 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__266)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__266);
  __Pyx_GIVEREF(__pyx_tuple__266);
  __pyx_codeobj__267 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__266, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 957, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__267)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":960
 *         return "A0_l", "ka_l"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */
  __pyx_tuple__268 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__268)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__268);
  __Pyx_GIVEREF(__pyx_tuple__268);
  __pyx_codeobj__269 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__268, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 960, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__269)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":963
 *         return "A0_l", "ka_l"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 */
  __pyx_tuple__270 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__270)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__270);
  __Pyx_GIVEREF(__pyx_tuple__270);
  __pyx_codeobj__271 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__270, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 963, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__271)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":966
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,
 */
  __pyx_tuple__272 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__272)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__272);
  __Pyx_GIVEREF(__pyx_tuple__272);
  __pyx_codeobj__273 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__272, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 966, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__273)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":971
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_local_set_params(
 *             self._bondId, self._params["A0_l"], self._params["ka_l"])
 */
  __pyx_tuple__274 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__274)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__274);
  __Pyx_GIVEREF(__pyx_tuple__274);
  __pyx_codeobj__275 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__274, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 971, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__275)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":978
 * class Bending_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 18
 * 
 */
  __pyx_tuple__276 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__276)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__276);
  __Pyx_GIVEREF(__pyx_tuple__276);
  __pyx_codeobj__277 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__276, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 978, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__277)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":981
 *         return 18
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "BENDING_FORCE"
 * 
 */
  __pyx_tuple__278 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__278)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__278);
  __Pyx_GIVEREF(__pyx_tuple__278);
  __pyx_codeobj__279 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__278, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 981, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__279)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":984
 *         return "BENDING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */
  __pyx_tuple__280 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__280)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__280);
  __Pyx_GIVEREF(__pyx_tuple__280);
  __pyx_codeobj__281 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__280, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 984, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__281)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":987
 *         return "phi0", "kb"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */
  __pyx_tuple__282 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__282)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__282);
  __Pyx_GIVEREF(__pyx_tuple__282);
  __pyx_codeobj__283 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__282, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 987, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__283)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":990
 *         return "phi0", "kb"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 */
  __pyx_tuple__284 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__284)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__284);
  __Pyx_GIVEREF(__pyx_tuple__284);
  __pyx_codeobj__285 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__284, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 990, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__285)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":993
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,
 */
  __pyx_tuple__286 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__286)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__286);
  __Pyx_GIVEREF(__pyx_tuple__286);
  __pyx_codeobj__287 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__286, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 993, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__287)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":998
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         bending_force_set_params(
 *             self._bondId, self._params["phi0"], self._params["kb"])
 */
  __pyx_tuple__288 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__288)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__288);
  __Pyx_GIVEREF(__pyx_tuple__288);
  __pyx_codeobj__289 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__288, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 998, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__289)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1005
 * class Volume_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 19
 * 
 */
  __pyx_tuple__290 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__290)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__290);
  __Pyx_GIVEREF(__pyx_tuple__290);
  __pyx_codeobj__291 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__290, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 1005, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__291)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1008
 *         return 19
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "VOLUME_FORCE"
 * 
 */
  __pyx_tuple__292 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__292)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__292);
  __Pyx_GIVEREF(__pyx_tuple__292);
  __pyx_codeobj__293 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__292, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 1008, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__293)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1011
 *         return "VOLUME_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */
  __pyx_tuple__294 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__294)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__294);
  __Pyx_GIVEREF(__pyx_tuple__294);
  __pyx_codeobj__295 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__294, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 1011, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__295)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1014
 *         return "V0", "kv"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */
  __pyx_tuple__296 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__296)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__296);
  __Pyx_GIVEREF(__pyx_tuple__296);
  __pyx_codeobj__297 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__296, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 1014, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__297)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1017
 *         return "V0", "kv"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"V0": 1., "kv": 0}
 * 
 */
  __pyx_tuple__298 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__298)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__298);
  __Pyx_GIVEREF(__pyx_tuple__298);
  __pyx_codeobj__299 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__298, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 1017, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__299)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1020
 *         self._params = {"V0": 1., "kv": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,
 */
  __pyx_tuple__300 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__300)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__300);
  __Pyx_GIVEREF(__pyx_tuple__300);
  __pyx_codeobj__301 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__300, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 1020, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__301)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1025
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         volume_force_set_params(
 *             self._bondId, self._params["V0"], self._params["kv"])
 */
  __pyx_tuple__302 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__302)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__302);
  __Pyx_GIVEREF(__pyx_tuple__302);
  __pyx_codeobj__303 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__302, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 1025, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__303)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1032
 * class Area_Force_Global(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 20
 * 
 */
  __pyx_tuple__304 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__304)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__304);
  __Pyx_GIVEREF(__pyx_tuple__304);
  __pyx_codeobj__305 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__304, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 1032, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__305)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1035
 *         return 20
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_GLOBAL"
 * 
 */
  __pyx_tuple__306 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__306)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__306);
  __Pyx_GIVEREF(__pyx_tuple__306);
  __pyx_codeobj__307 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__306, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 1035, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__307)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1038
 *         return "AREA_FORCE_GLOBAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */
  __pyx_tuple__308 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__308)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__308);
  __Pyx_GIVEREF(__pyx_tuple__308);
  __pyx_codeobj__309 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__308, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 1038, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__309)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1041
 *         return "A0_g", "ka_g"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */
  __pyx_tuple__310 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__310)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__310);
  __Pyx_GIVEREF(__pyx_tuple__310);
  __pyx_codeobj__311 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__310, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 1041, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__311)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1044
 *         return "A0_g", "ka_g"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 */
  __pyx_tuple__312 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__312)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__312);
  __Pyx_GIVEREF(__pyx_tuple__312);
  __pyx_codeobj__313 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__312, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 1044, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__313)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1047
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,
 */
  __pyx_tuple__314 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__314)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__314);
  __Pyx_GIVEREF(__pyx_tuple__314);
  __pyx_codeobj__315 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__314, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 1047, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__315)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1052
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_global_set_params(
 *             self._bondId, self._params["A0_g"], self._params["ka_g"])
 */
  __pyx_tuple__316 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__316)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__316);
  __Pyx_GIVEREF(__pyx_tuple__316);
  __pyx_codeobj__317 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__316, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 1052, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__317)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1059
 * class Stretchlin_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 21
 * 
 */
  __pyx_tuple__318 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__318)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__318);
  __Pyx_GIVEREF(__pyx_tuple__318);
  __pyx_codeobj__319 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__318, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeNumber, 1059, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__319)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1062
 *         return 21
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHLIN_FORCE"
 * 
 */
  __pyx_tuple__320 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__320)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__320);
  __Pyx_GIVEREF(__pyx_tuple__320);
  __pyx_codeobj__321 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__320, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_typeName, 1062, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__321)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1065
 *         return "STRETCHLIN_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */
  __pyx_tuple__322 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__322)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__322);
  __Pyx_GIVEREF(__pyx_tuple__322);
  __pyx_codeobj__323 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__322, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_validKeys, 1065, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__323)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1068
 *         return "r0", "kslin"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */
  __pyx_tuple__324 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__324)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__324);
  __Pyx_GIVEREF(__pyx_tuple__324);
  __pyx_codeobj__325 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__324, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_requiredKeys, 1068, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__325)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1071
 *         return "r0", "kslin"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 */
  __pyx_tuple__326 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__326)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__326);
  __Pyx_GIVEREF(__pyx_tuple__326);
  __pyx_codeobj__327 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__326, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setDefaultParams, 1071, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__327)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1074
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,
 */
  __pyx_tuple__328 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__328)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__328);
  __Pyx_GIVEREF(__pyx_tuple__328);
  __pyx_codeobj__329 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__328, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getParamsFromEsCore, 1074, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__329)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1079
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretchlin_force_set_params(
 *             self._bondId, self._params["r0"], self._params["kslin"])
 */
  __pyx_tuple__330 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__330)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__330);
  __Pyx_GIVEREF(__pyx_tuple__330);
  __pyx_codeobj__331 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__330, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setParamsInEsCore, 1079, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__331)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1101
 *     BondedInteractionHandle"""
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if not isinstance(key, int):
 *             raise ValueError(
 */
  __pyx_tuple__332 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_key, __pyx_n_s_bondType, __pyx_n_s_bondClass); if (unlikely(!__pyx_tuple__332)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__332);
  __Pyx_GIVEREF(__pyx_tuple__332);
  __pyx_codeobj__333 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__332, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_getitem, 1101, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__333)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":1123
 *         return bondClass(key)
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         # Validate arguments
 * 
 */
  __pyx_tuple__334 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_key, __pyx_n_s_value); if (unlikely(!__pyx_tuple__334)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__334);
  __Pyx_GIVEREF(__pyx_tuple__334);
  __pyx_codeobj__335 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__334, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_haozeke_Github_LabBom_espr, __pyx_n_s_setitem, 1123, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__335)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_float_0_ = PyFloat_FromDouble(0.); if (unlikely(!__pyx_float_0_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_1_ = PyFloat_FromDouble(1.); if (unlikely(!__pyx_float_1_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_12 = PyInt_FromLong(12); if (unlikely(!__pyx_int_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_13 = PyInt_FromLong(13); if (unlikely(!__pyx_int_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_14 = PyInt_FromLong(14); if (unlikely(!__pyx_int_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_17 = PyInt_FromLong(17); if (unlikely(!__pyx_int_17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_18 = PyInt_FromLong(18); if (unlikely(!__pyx_int_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_19 = PyInt_FromLong(19); if (unlikely(!__pyx_int_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_21 = PyInt_FromLong(21); if (unlikely(!__pyx_int_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initinteractions(void); /*proto*/
PyMODINIT_FUNC initinteractions(void)
#else
PyMODINIT_FUNC PyInit_interactions(void); /*proto*/
PyMODINIT_FUNC PyInit_interactions(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_interactions(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("interactions", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_espressomd__interactions) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "espressomd.interactions")) {
      if (unlikely(PyDict_SetItemString(modules, "espressomd.interactions", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_10espressomd_12interactions_NonBondedInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_10espressomd_12interactions_NonBondedInteraction.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_10espressomd_12interactions_NonBondedInteraction, "__init__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_10espressomd_12interactions_20NonBondedInteraction___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_10espressomd_12interactions_20NonBondedInteraction___init__.doc = __pyx_doc_10espressomd_12interactions_20NonBondedInteraction___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_10espressomd_12interactions_20NonBondedInteraction___init__;
    }
  }
  #endif
  if (PyObject_SetAttrString(__pyx_m, "NonBondedInteraction", (PyObject *)&__pyx_type_10espressomd_12interactions_NonBondedInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_10espressomd_12interactions_NonBondedInteraction = &__pyx_type_10espressomd_12interactions_NonBondedInteraction;
  __pyx_type_10espressomd_12interactions_LennardJonesInteraction.tp_base = __pyx_ptype_10espressomd_12interactions_NonBondedInteraction;
  if (PyType_Ready(&__pyx_type_10espressomd_12interactions_LennardJonesInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_10espressomd_12interactions_LennardJonesInteraction.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "LennardJonesInteraction", (PyObject *)&__pyx_type_10espressomd_12interactions_LennardJonesInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_10espressomd_12interactions_LennardJonesInteraction = &__pyx_type_10espressomd_12interactions_LennardJonesInteraction;
  __pyx_type_10espressomd_12interactions_GenericLennardJonesInteraction.tp_base = __pyx_ptype_10espressomd_12interactions_NonBondedInteraction;
  if (PyType_Ready(&__pyx_type_10espressomd_12interactions_GenericLennardJonesInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_10espressomd_12interactions_GenericLennardJonesInteraction.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "GenericLennardJonesInteraction", (PyObject *)&__pyx_type_10espressomd_12interactions_GenericLennardJonesInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_10espressomd_12interactions_GenericLennardJonesInteraction = &__pyx_type_10espressomd_12interactions_GenericLennardJonesInteraction;
  if (PyType_Ready(&__pyx_type_10espressomd_12interactions_NonBondedInteractions) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_10espressomd_12interactions_NonBondedInteractions.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "NonBondedInteractions", (PyObject *)&__pyx_type_10espressomd_12interactions_NonBondedInteractions) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_10espressomd_12interactions_NonBondedInteractions = &__pyx_type_10espressomd_12interactions_NonBondedInteractions;
  if (PyType_Ready(&__pyx_type_10espressomd_12interactions_BondedInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_10espressomd_12interactions_BondedInteraction.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_10espressomd_12interactions_BondedInteraction, "__init__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_10espressomd_12interactions_17BondedInteraction___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_10espressomd_12interactions_17BondedInteraction___init__.doc = __pyx_doc_10espressomd_12interactions_17BondedInteraction___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_10espressomd_12interactions_17BondedInteraction___init__;
    }
  }
  #endif
  if (PyObject_SetAttrString(__pyx_m, "BondedInteraction", (PyObject *)&__pyx_type_10espressomd_12interactions_BondedInteraction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_10espressomd_12interactions_BondedInteraction = &__pyx_type_10espressomd_12interactions_BondedInteraction;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "espressomd/interactions.pyx":301
 * 
 * 
 * class NonBondedInteractionHandle(object):             # <<<<<<<<<<<<<<
 * 
 *     """Provides access to all Non-bonded interactions between
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_builtin_object);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_builtin_object);
  __Pyx_GIVEREF(__pyx_builtin_object);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_NonBondedInteractionHandle, __pyx_n_s_NonBondedInteractionHandle, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, __pyx_kp_s_Provides_access_to_all_Non_bonde); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":306
 *     two particle types."""
 * 
 *     type1 = -1             # <<<<<<<<<<<<<<
 *     type2 = -1
 * 
 */
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_type1_2, __pyx_int_neg_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":307
 * 
 *     type1 = -1
 *     type2 = -1             # <<<<<<<<<<<<<<
 * 
 *     # Here, one line per non-bonded ia
 */
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_type2_2, __pyx_int_neg_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":310
 * 
 *     # Here, one line per non-bonded ia
 *     lennardJones = None             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, _type1, _type2):
 */
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_lennardJones, Py_None) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":312
 *     lennardJones = None
 * 
 *     def __init__(self, _type1, _type2):             # <<<<<<<<<<<<<<
 *         """Takes two particle types as argument"""
 *         if not (isinstance(_type1, int) and isinstance(_type2, int)):
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_26NonBondedInteractionHandle_1__init__, 0, __pyx_n_s_NonBondedInteractionHandle___ini, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__77)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_init, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":301
 * 
 * 
 * class NonBondedInteractionHandle(object):             # <<<<<<<<<<<<<<
 * 
 *     """Provides access to all Non-bonded interactions between
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_NonBondedInteractionHandle, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NonBondedInteractionHandle, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":448
 * 
 * 
 * class BondedInteractionNotDefined(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_builtin_object);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_builtin_object);
  __Pyx_GIVEREF(__pyx_builtin_object);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_BondedInteractionNotDefined, __pyx_n_s_BondedInteractionNotDefined, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":450
 * class BondedInteractionNotDefined(object):
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         raise Exception(
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_1__init__, 0, __pyx_n_s_BondedInteractionNotDefined___in, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__79)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_init, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":454
 *             self.__class_s__.__name__ + " not compiled into Espresso core")
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_3typeNumber, 0, __pyx_n_s_BondedInteractionNotDefined_type, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__81)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":457
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_5typeName, 0, __pyx_n_s_BondedInteractionNotDefined_type_2, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__83)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":460
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_7validKeys, 0, __pyx_n_s_BondedInteractionNotDefined_vali, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__85)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":463
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_9requiredKeys, 0, __pyx_n_s_BondedInteractionNotDefined_requ, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__87)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":466
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_11setDefaultParams, 0, __pyx_n_s_BondedInteractionNotDefined_setD, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__89)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":469
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_13_getParamsFromEsCore, 0, __pyx_n_s_BondedInteractionNotDefined__get, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__91)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":472
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         raise Exception(("%s has to be defined in myconfig.hpp.") % self.name)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27BondedInteractionNotDefined_15_setParamsInEsCore, 0, __pyx_n_s_BondedInteractionNotDefined__set, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__93)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":448
 * 
 * 
 * class BondedInteractionNotDefined(object):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_BondedInteractionNotDefined, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BondedInteractionNotDefined, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":476
 * 
 * 
 * class FeneBond(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_FeneBond, __pyx_n_s_FeneBond, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":478
 * class FeneBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_1typeNumber, 0, __pyx_n_s_FeneBond_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":481
 *         return 0
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "FENE"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_3typeName, 0, __pyx_n_s_FeneBond_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__97)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":484
 *         return "FENE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max", "r_0"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_5validKeys, 0, __pyx_n_s_FeneBond_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":487
 *         return "k", "d_r_max", "r_0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "d_r_max"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_7requiredKeys, 0, __pyx_n_s_FeneBond_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__101)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":490
 *         return "k", "d_r_max"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r_0": 0.}
 *         # Everything else has to be supplied by the user, anyway
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_9setDefaultParams, 0, __pyx_n_s_FeneBond_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":494
 *         # Everything else has to be supplied by the user, anyway
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.fene.k,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_11_getParamsFromEsCore, 0, __pyx_n_s_FeneBond__getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__105)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":500
 *              "r_0": bonded_ia_params[self._bondId].p.fene.r0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         fene_set_params(
 *             self._bondId, self._params["k"], self._params["d_r_max"], self._params["r_0"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8FeneBond_13_setParamsInEsCore, 0, __pyx_n_s_FeneBond__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__107)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":476
 * 
 * 
 * class FeneBond(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_FeneBond, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FeneBond, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":505
 * 
 * 
 * class HarmonicBond(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_HarmonicBond, __pyx_n_s_HarmonicBond, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":507
 * class HarmonicBond(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 1
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_1typeNumber, 0, __pyx_n_s_HarmonicBond_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":510
 *         return 1
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "HARMONIC"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_3typeName, 0, __pyx_n_s_HarmonicBond_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__111)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":513
 *         return "HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0", "r_cut"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_5validKeys, 0, __pyx_n_s_HarmonicBond_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__113)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":516
 *         return "k", "r_0", "r_cut"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "k", "r_0"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_7requiredKeys, 0, __pyx_n_s_HarmonicBond_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__115)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":519
 *         return "k", "r_0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_9setDefaultParams, 0, __pyx_n_s_HarmonicBond_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__117)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":522
 *         self._params = {"k'": 0., "r_0": 0., "r_cut": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"k": bonded_ia_params[self._bondId].p.harmonic.k,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_11_getParamsFromEsCore, 0, __pyx_n_s_HarmonicBond__getParamsFromEsCor, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__119)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":528
 *              "r_cut": bonded_ia_params[self._bondId].p.harmonic.r_cut}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         harmonic_set_params(
 *             self._bondId, self._params["k"], self._params["r_0"], self._params["r_cut"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12HarmonicBond_13_setParamsInEsCore, 0, __pyx_n_s_HarmonicBond__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__121)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":505
 * 
 * 
 * class HarmonicBond(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_HarmonicBond, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HarmonicBond, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":534
 * 
 * IF ROTATION:
 *     class HarmonicDumbbellBond(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_HarmonicDumbbellBond, __pyx_n_s_HarmonicDumbbellBond, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":536
 *     class HarmonicDumbbellBond(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 2
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_1typeNumber, 0, __pyx_n_s_HarmonicDumbbellBond_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__123)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":539
 *             return 2
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "HARMONIC_DUMBBELL"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_3typeName, 0, __pyx_n_s_HarmonicDumbbellBond_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__125)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":542
 *             return "HARMONIC_DUMBBELL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_5validKeys, 0, __pyx_n_s_HarmonicDumbbellBond_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__127)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":545
 *             return "k1", "k2", "r_0", "r_cut"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "k1", "k2", "r_0"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_7requiredKeys, 0, __pyx_n_s_HarmonicDumbbellBond_requiredKey, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__129)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":548
 *             return "k1", "k2", "r_0"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"r_cut": 0.}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_9setDefaultParams, 0, __pyx_n_s_HarmonicDumbbellBond_setDefaultP, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__131)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":551
 *             self._params = {"r_cut": 0.}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k1": bonded_ia_params[self._bondId].p.harmonic_dumbbell.k1,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_11_getParamsFromEsCore, 0, __pyx_n_s_HarmonicDumbbellBond__getParamsF, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__133)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":558
 *                  "r_cut": bonded_ia_params[self._bondId].p.harmonic_dumbbell.r_cut}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             harmonic_dumbbell_set_params(
 *                 self._bondId, self._params["k1"], self._params["k2"],
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_20HarmonicDumbbellBond_13_setParamsInEsCore, 0, __pyx_n_s_HarmonicDumbbellBond__setParamsI, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__135)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":534
 * 
 * IF ROTATION:
 *     class HarmonicDumbbellBond(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_HarmonicDumbbellBond, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HarmonicDumbbellBond, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":623
 *                 self._bondId, self._params["r"], self._params["ptol"], self._params["vtol"])
 * ELSE:
 *     class RigidBond(BondedInteractionNotDefined):             # <<<<<<<<<<<<<<
 *         name = "RIGID"
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_BondedInteractionNotDefined); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_RigidBond, __pyx_n_s_RigidBond, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":624
 * ELSE:
 *     class RigidBond(BondedInteractionNotDefined):
 *         name = "RIGID"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_name_2, __pyx_n_s_RIGID) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":623
 *                 self._bondId, self._params["r"], self._params["ptol"], self._params["vtol"])
 * ELSE:
 *     class RigidBond(BondedInteractionNotDefined):             # <<<<<<<<<<<<<<
 *         name = "RIGID"
 * 
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_RigidBond, __pyx_t_2, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RigidBond, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":627
 * 
 * 
 * class Dihedral(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_Dihedral, __pyx_n_s_Dihedral, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":629
 * class Dihedral(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 5
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_1typeNumber, 0, __pyx_n_s_Dihedral_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__137)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":632
 *         return 5
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "DIHEDRAL"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_3typeName, 0, __pyx_n_s_Dihedral_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__139)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":635
 *         return "DIHEDRAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_5validKeys, 0, __pyx_n_s_Dihedral_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__141)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":638
 *         return "mult", "bend", "phase"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "mult", "bend", "phase"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_7requiredKeys, 0, __pyx_n_s_Dihedral_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__143)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":641
 *         return "mult", "bend", "phase"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_9setDefaultParams, 0, __pyx_n_s_Dihedral_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__145)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":644
 *         self._params = {"mult'": 1., "bend": 0., "phase": 0.}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"mult": bonded_ia_params[self._bondId].p.dihedral.mult,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_11_getParamsFromEsCore, 0, __pyx_n_s_Dihedral__getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__147)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":650
 *              "phase": bonded_ia_params[self._bondId].p.dihedral.phase}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         dihedral_set_params(
 *             self._bondId, self._params["mult"], self._params["bend"], self._params["phase"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_8Dihedral_13_setParamsInEsCore, 0, __pyx_n_s_Dihedral__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__149)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":627
 * 
 * 
 * class Dihedral(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Dihedral, __pyx_t_2, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Dihedral, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":656
 * 
 * IF TABULATED == 1:
 *     class Tabulated(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_Tabulated, __pyx_n_s_Tabulated, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":658
 *     class Tabulated(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 6
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_1typeNumber, 0, __pyx_n_s_Tabulated_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__151)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":661
 *             return 6
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "TABULATED"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_3typeName, 0, __pyx_n_s_Tabulated_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__153)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":664
 *             return "TABULATED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_5validKeys, 0, __pyx_n_s_Tabulated_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__155)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":667
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_7requiredKeys, 0, __pyx_n_s_Tabulated_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__157)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":670
 *             return "type", "filename", "npoints", "minval", "maxval", "invstepsize"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"type": 1, "filename": "", "npoints": 0, "minval": 0, "maxval": 1,
 *                             "invstepsize": 1}
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_9setDefaultParams, 0, __pyx_n_s_Tabulated_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__159)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":674
 *                             "invstepsize": 1}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"type": bonded_ia_params[self._bondId].p.tab.type,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_11_getParamsFromEsCore, 0, __pyx_n_s_Tabulated__getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__161)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":683
 *                  "invstepsize": bonded_ia_params[self._bondId].p.tab.invstepsize}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             tabulated_bonded_set_params(
 *                 self._bondId, self._params["type"], self._params["filename"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9Tabulated_13_setParamsInEsCore, 0, __pyx_n_s_Tabulated__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__163)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":656
 * 
 * IF TABULATED == 1:
 *     class Tabulated(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Tabulated, __pyx_t_2, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Tabulated, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":713
 * 
 * 
 * class Subt_Lj(BondedInteraction):             # <<<<<<<<<<<<<<
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_Subt_Lj, __pyx_n_s_Subt_Lj, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":715
 * class Subt_Lj(BondedInteraction):
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 7
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_1typeNumber, 0, __pyx_n_s_Subt_Lj_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__165)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":718
 *             return 7
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "SUBT_LJ"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_3typeName, 0, __pyx_n_s_Subt_Lj_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__167)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":721
 *             return "SUBT_LJ"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_5validKeys, 0, __pyx_n_s_Subt_Lj_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__169)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":724
 *             return "r", "k"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "r", "k"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_7requiredKeys, 0, __pyx_n_s_Subt_Lj_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__171)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":727
 *             return "r", "k"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"k": 0, "r": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_9setDefaultParams, 0, __pyx_n_s_Subt_Lj_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__173)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":730
 *             self._params = {"k": 0, "r": 0}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"k": bonded_ia_params[self._bondId].p.subt_lj.k,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_11_getParamsFromEsCore, 0, __pyx_n_s_Subt_Lj__getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__175)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":735
 *                  "r": bonded_ia_params[self._bondId].p.subt_lj.r}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             subt_lj_set_params(
 *                 self._bondId, self._params["k"], self._params["r"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Subt_Lj_13_setParamsInEsCore, 0, __pyx_n_s_Subt_Lj__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__177)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":713
 * 
 * 
 * class Subt_Lj(BondedInteraction):             # <<<<<<<<<<<<<<
 *     IF LENNARD_JONES == 1:
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Subt_Lj, __pyx_t_2, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Subt_Lj, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":740
 * 
 * IF BOND_VIRTUAL == 1:
 *     class Virtual(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_Virtual, __pyx_n_s_Virtual, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":742
 *     class Virtual(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 9
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_1typeNumber, 0, __pyx_n_s_Virtual_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__179)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":745
 *             return 9
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "VIRTUAL"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_3typeName, 0, __pyx_n_s_Virtual_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__181)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":748
 *             return "VIRTUAL"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_5validKeys, 0, __pyx_n_s_Virtual_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__183)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":751
 *             return
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_7requiredKeys, 0, __pyx_n_s_Virtual_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__185)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":754
 *             return
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_9setDefaultParams, 0, __pyx_n_s_Virtual_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__187)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":757
 *             pass
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_11_getParamsFromEsCore, 0, __pyx_n_s_Virtual__getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__189)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":760
 *             pass
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             virtual_set_params(self._bondId)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7Virtual_13_setParamsInEsCore, 0, __pyx_n_s_Virtual__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__191)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":740
 * 
 * IF BOND_VIRTUAL == 1:
 *     class Virtual(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Virtual, __pyx_t_2, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Virtual, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":797
 * 
 * ELSE:
 *     class Endangledist(BondedInteractionNotDefined):             # <<<<<<<<<<<<<<
 *         name = "BOND_ENDANGLEDIST"
 * 
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_BondedInteractionNotDefined); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Endangledist, __pyx_n_s_Endangledist, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":798
 * ELSE:
 *     class Endangledist(BondedInteractionNotDefined):
 *         name = "BOND_ENDANGLEDIST"             # <<<<<<<<<<<<<<
 * 
 * IF OVERLAPPED == 1:
 */
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_name_2, __pyx_n_s_BOND_ENDANGLEDIST) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "espressomd/interactions.pyx":797
 * 
 * ELSE:
 *     class Endangledist(BondedInteractionNotDefined):             # <<<<<<<<<<<<<<
 *         name = "BOND_ENDANGLEDIST"
 * 
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Endangledist, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Endangledist, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":801
 * 
 * IF OVERLAPPED == 1:
 *     class Overlapped(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Overlapped, __pyx_n_s_Overlapped, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":803
 *     class Overlapped(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 12
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_1typeNumber, 0, __pyx_n_s_Overlapped_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__193)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":806
 *             return 12
 * 
 *         def typeName(self):             # <<<<<<<<<<<<<<
 *             return "OVERLAPPED"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_3typeName, 0, __pyx_n_s_Overlapped_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__195)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":809
 *             return "OVERLAPPED"
 * 
 *         def validKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_5validKeys, 0, __pyx_n_s_Overlapped_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__197)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":812
 *             return "overlap_type", "filename"
 * 
 *         def requiredKeys(self):             # <<<<<<<<<<<<<<
 *             return "overlap_type", "filename"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_7requiredKeys, 0, __pyx_n_s_Overlapped_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__199)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":815
 *             return "overlap_type", "filename"
 * 
 *         def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_9setDefaultParams, 0, __pyx_n_s_Overlapped_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__201)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":818
 *             self._params = {"overlap_type": 0, "filename": ""}
 * 
 *         def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *             return \
 *                 {"bend": bonded_ia_params[self._bondId].p.overlap.type,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_11_getParamsFromEsCore, 0, __pyx_n_s_Overlapped__getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__203)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":823
 *                  "phi0": bonded_ia_params[self._bondId].p.overlap.filename}
 * 
 *         def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *             overlapped_bonded_set_params(
 *                 self._bondId, self._params["overlap_type"], self._params["filename"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_10Overlapped_13_setParamsInEsCore, 0, __pyx_n_s_Overlapped__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__205)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":801
 * 
 * IF OVERLAPPED == 1:
 *     class Overlapped(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Overlapped, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Overlapped, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":832
 * 
 * IF BOND_ANGLE == 1:
 *     class Angle_Harmonic(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Angle_Harmonic, __pyx_n_s_Angle_Harmonic, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":834
 *     class Angle_Harmonic(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 13
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_14Angle_Harmonic_1typeNumber, 0, __pyx_n_s_Angle_Harmonic_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__207)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":832
 * 
 * IF BOND_ANGLE == 1:
 *     class Angle_Harmonic(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Angle_Harmonic, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Angle_Harmonic, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":837
 *             return 13
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_HARMONIC"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_1typeName, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_typeName, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":840
 *         return "ANGLE_HARMONIC"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_3validKeys, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_validKeys, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":843
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_5requiredKeys, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requiredKeys, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":846
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_7setDefaultParams, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setDefaultParams, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":849
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_harmonic.bend,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_9_getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getParamsFromEsCore, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":854
 *              "phi0": bonded_ia_params[self._bondId].p.angle_harmonic.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_harmonic_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_11_setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setParamsInEsCore, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":862
 * 
 * IF BOND_ANGLE == 1:
 *     class Angle_Cosine(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Angle_Cosine, __pyx_n_s_Angle_Cosine, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":864
 *     class Angle_Cosine(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 14
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Angle_Cosine_1typeNumber, 0, __pyx_n_s_Angle_Cosine_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__221)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":862
 * 
 * IF BOND_ANGLE == 1:
 *     class Angle_Cosine(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Angle_Cosine, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Angle_Cosine, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":867
 *             return 14
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSINE"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13typeName, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_typeName, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":870
 *         return "ANGLE_COSINE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_15validKeys, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_validKeys, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":873
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17requiredKeys, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requiredKeys, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":876
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_19setDefaultParams, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setDefaultParams, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":879
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cosine.bend,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_21_getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getParamsFromEsCore, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":884
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cosine.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cosine_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_23_setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setParamsInEsCore, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":892
 * 
 * IF BOND_ANGLE == 1:
 *     class Angle_Cossquare(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Angle_Cossquare, __pyx_n_s_Angle_Cossquare, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":894
 *     class Angle_Cossquare(BondedInteraction):
 * 
 *         def typeNumber(self):             # <<<<<<<<<<<<<<
 *             return 15
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_15Angle_Cossquare_1typeNumber, 0, __pyx_n_s_Angle_Cossquare_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__235)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 894; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 894; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":892
 * 
 * IF BOND_ANGLE == 1:
 *     class Angle_Cossquare(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *         def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Angle_Cossquare, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Angle_Cossquare, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":897
 *             return 15
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "ANGLE_COSSQUARE"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_25typeName, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_typeName, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":900
 *         return "ANGLE_COSSQUARE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_27validKeys, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_validKeys, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":903
 *         return "bend", "phi0"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "bend", "phi0"
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_29requiredKeys, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requiredKeys, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":906
 *         return "bend", "phi0"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_31setDefaultParams, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setDefaultParams, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":909
 *         self._params = {"bend": 0, "phi0": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"bend": bonded_ia_params[self._bondId].p.angle_cossquare.bend,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_33_getParamsFromEsCore, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getParamsFromEsCore, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":914
 *              "phi0": bonded_ia_params[self._bondId].p.angle_cossquare.phi0}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         angle_cossquare_set_params(
 *             self._bondId, self._params["bend"], self._params["phi0"])
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_35_setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setParamsInEsCore, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":922
 * 
 * 
 * class Stretching_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Stretching_Force, __pyx_n_s_Stretching_Force, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":924
 * class Stretching_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 16
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_1typeNumber, 0, __pyx_n_s_Stretching_Force_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__249)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":927
 *         return 16
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHING_FORCE"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_3typeName, 0, __pyx_n_s_Stretching_Force_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__251)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":930
 *         return "STRETCHING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_5validKeys, 0, __pyx_n_s_Stretching_Force_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__253)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":933
 *         return "r0", "ks"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "ks"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_7requiredKeys, 0, __pyx_n_s_Stretching_Force_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__255)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":936
 *         return "r0", "ks"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "ks": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_9setDefaultParams, 0, __pyx_n_s_Stretching_Force_setDefaultParam, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__257)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":939
 *         self._params = {"r0": 1., "ks": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretching_force.r0,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_11_getParamsFromEsCore, 0, __pyx_n_s_Stretching_Force__getParamsFromE, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__259)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":944
 *              "ks": bonded_ia_params[self._bondId].p.stretching_force.ks}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretching_force_set_params(
 *             self._bondId, self._params["r0"], self._params["ks"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretching_Force_13_setParamsInEsCore, 0, __pyx_n_s_Stretching_Force__setParamsInEsC, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__261)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":922
 * 
 * 
 * class Stretching_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Stretching_Force, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Stretching_Force, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":949
 * 
 * 
 * class Area_Force_Local(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Area_Force_Local, __pyx_n_s_Area_Force_Local, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":951
 * class Area_Force_Local(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 17
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_1typeNumber, 0, __pyx_n_s_Area_Force_Local_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__263)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":954
 *         return 17
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_LOCAL"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_3typeName, 0, __pyx_n_s_Area_Force_Local_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__265)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":957
 *         return "AREA_FORCE_LOCAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_5validKeys, 0, __pyx_n_s_Area_Force_Local_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__267)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":960
 *         return "A0_l", "ka_l"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_l", "ka_l"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_7requiredKeys, 0, __pyx_n_s_Area_Force_Local_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__269)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":963
 *         return "A0_l", "ka_l"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_9setDefaultParams, 0, __pyx_n_s_Area_Force_Local_setDefaultParam, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__271)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":966
 *         self._params = {"A0_l": 1., "ka_l": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_l": bonded_ia_params[self._bondId].p.area_force_local.A0_l,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_11_getParamsFromEsCore, 0, __pyx_n_s_Area_Force_Local__getParamsFromE, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__273)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":971
 *              "ka_l": bonded_ia_params[self._bondId].p.area_force_local.ka_l}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_local_set_params(
 *             self._bondId, self._params["A0_l"], self._params["ka_l"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Area_Force_Local_13_setParamsInEsCore, 0, __pyx_n_s_Area_Force_Local__setParamsInEsC, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__275)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":949
 * 
 * 
 * class Area_Force_Local(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Area_Force_Local, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Area_Force_Local, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":976
 * 
 * 
 * class Bending_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Bending_Force, __pyx_n_s_Bending_Force, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":978
 * class Bending_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 18
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_1typeNumber, 0, __pyx_n_s_Bending_Force_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__277)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":981
 *         return 18
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "BENDING_FORCE"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_3typeName, 0, __pyx_n_s_Bending_Force_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__279)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":984
 *         return "BENDING_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_5validKeys, 0, __pyx_n_s_Bending_Force_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__281)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":987
 *         return "phi0", "kb"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "phi0", "kb"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_7requiredKeys, 0, __pyx_n_s_Bending_Force_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__283)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":990
 *         return "phi0", "kb"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_9setDefaultParams, 0, __pyx_n_s_Bending_Force_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__285)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":993
 *         self._params = {"phi0": 1., "kb": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"phi0": bonded_ia_params[self._bondId].p.bending_force.phi0,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_11_getParamsFromEsCore, 0, __pyx_n_s_Bending_Force__getParamsFromEsCo, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__287)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":998
 *              "kb": bonded_ia_params[self._bondId].p.bending_force.kb}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         bending_force_set_params(
 *             self._bondId, self._params["phi0"], self._params["kb"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_13Bending_Force_13_setParamsInEsCore, 0, __pyx_n_s_Bending_Force__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__289)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":976
 * 
 * 
 * class Bending_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Bending_Force, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Bending_Force, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1003
 * 
 * 
 * class Volume_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Volume_Force, __pyx_n_s_Volume_Force, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":1005
 * class Volume_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 19
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_1typeNumber, 0, __pyx_n_s_Volume_Force_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__291)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1008
 *         return 19
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "VOLUME_FORCE"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_3typeName, 0, __pyx_n_s_Volume_Force_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__293)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1011
 *         return "VOLUME_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_5validKeys, 0, __pyx_n_s_Volume_Force_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__295)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1014
 *         return "V0", "kv"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "V0", "kv"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_7requiredKeys, 0, __pyx_n_s_Volume_Force_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__297)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1017
 *         return "V0", "kv"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"V0": 1., "kv": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_9setDefaultParams, 0, __pyx_n_s_Volume_Force_setDefaultParams, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__299)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1020
 *         self._params = {"V0": 1., "kv": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"V0": bonded_ia_params[self._bondId].p.volume_force.V0,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_11_getParamsFromEsCore, 0, __pyx_n_s_Volume_Force__getParamsFromEsCor, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__301)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1025
 *              "kv": bonded_ia_params[self._bondId].p.volume_force.kv}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         volume_force_set_params(
 *             self._bondId, self._params["V0"], self._params["kv"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_12Volume_Force_13_setParamsInEsCore, 0, __pyx_n_s_Volume_Force__setParamsInEsCore, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__303)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1003
 * 
 * 
 * class Volume_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Volume_Force, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Volume_Force, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1030
 * 
 * 
 * class Area_Force_Global(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1030; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1030; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Area_Force_Global, __pyx_n_s_Area_Force_Global, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1030; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":1032
 * class Area_Force_Global(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 20
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_1typeNumber, 0, __pyx_n_s_Area_Force_Global_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__305)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1035
 *         return 20
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "AREA_FORCE_GLOBAL"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_3typeName, 0, __pyx_n_s_Area_Force_Global_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__307)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1038
 *         return "AREA_FORCE_GLOBAL"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_5validKeys, 0, __pyx_n_s_Area_Force_Global_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__309)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1041
 *         return "A0_g", "ka_g"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "A0_g", "ka_g"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_7requiredKeys, 0, __pyx_n_s_Area_Force_Global_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__311)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1044
 *         return "A0_g", "ka_g"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_9setDefaultParams, 0, __pyx_n_s_Area_Force_Global_setDefaultPara, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__313)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1047
 *         self._params = {"A0_g": 1., "ka_g": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"A0_g": bonded_ia_params[self._bondId].p.area_force_global.A0_g,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_11_getParamsFromEsCore, 0, __pyx_n_s_Area_Force_Global__getParamsFrom, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__315)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1052
 *              "ka_g": bonded_ia_params[self._bondId].p.area_force_global.ka_g}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         area_force_global_set_params(
 *             self._bondId, self._params["A0_g"], self._params["ka_g"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_17Area_Force_Global_13_setParamsInEsCore, 0, __pyx_n_s_Area_Force_Global__setParamsInEs, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__317)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1030
 * 
 * 
 * class Area_Force_Global(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Area_Force_Global, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1030; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Area_Force_Global, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1030; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1057
 * 
 * 
 * class Stretchlin_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)__pyx_ptype_10espressomd_12interactions_BondedInteraction)));
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_Stretchlin_Force, __pyx_n_s_Stretchlin_Force, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "espressomd/interactions.pyx":1059
 * class Stretchlin_Force(BondedInteraction):
 * 
 *     def typeNumber(self):             # <<<<<<<<<<<<<<
 *         return 21
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_1typeNumber, 0, __pyx_n_s_Stretchlin_Force_typeNumber, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__319)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeNumber, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1062
 *         return 21
 * 
 *     def typeName(self):             # <<<<<<<<<<<<<<
 *         return "STRETCHLIN_FORCE"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_3typeName, 0, __pyx_n_s_Stretchlin_Force_typeName, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__321)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_typeName, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1065
 *         return "STRETCHLIN_FORCE"
 * 
 *     def validKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_5validKeys, 0, __pyx_n_s_Stretchlin_Force_validKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__323)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_validKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1068
 *         return "r0", "kslin"
 * 
 *     def requiredKeys(self):             # <<<<<<<<<<<<<<
 *         return "r0", "kslin"
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_7requiredKeys, 0, __pyx_n_s_Stretchlin_Force_requiredKeys, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__325)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_requiredKeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1071
 *         return "r0", "kslin"
 * 
 *     def setDefaultParams(self):             # <<<<<<<<<<<<<<
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_9setDefaultParams, 0, __pyx_n_s_Stretchlin_Force_setDefaultParam, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__327)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setDefaultParams, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1074
 *         self._params = {"r0": 1., "kslin": 0}
 * 
 *     def _getParamsFromEsCore(self):             # <<<<<<<<<<<<<<
 *         return \
 *             {"r0": bonded_ia_params[self._bondId].p.stretchlin_force.r0,
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_11_getParamsFromEsCore, 0, __pyx_n_s_Stretchlin_Force__getParamsFromE, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__329)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_getParamsFromEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1079
 *              "kslin": bonded_ia_params[self._bondId].p.stretchlin_force.kslin}
 * 
 *     def _setParamsInEsCore(self):             # <<<<<<<<<<<<<<
 *         stretchlin_force_set_params(
 *             self._bondId, self._params["r0"], self._params["kslin"])
 */
  __pyx_t_4 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_16Stretchlin_Force_13_setParamsInEsCore, 0, __pyx_n_s_Stretchlin_Force__setParamsInEsC, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__331)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_setParamsInEsCore, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "espressomd/interactions.pyx":1057
 * 
 * 
 * class Stretchlin_Force(BondedInteraction):             # <<<<<<<<<<<<<<
 * 
 *     def typeNumber(self):
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Stretchlin_Force, __pyx_t_1, __pyx_t_3, NULL, 0, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Stretchlin_Force, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1084
 * 
 * 
 * bondedInteractionClasses = {0: FeneBond, 1: HarmonicBond, 2:             # <<<<<<<<<<<<<<
 *                             HarmonicDumbbellBond, 3: RigidBond, 5:
 *                             Dihedral, 6: Tabulated, 7: Subt_Lj, 9:
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_FeneBond); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_HarmonicBond); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_1, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1085
 * 
 * bondedInteractionClasses = {0: FeneBond, 1: HarmonicBond, 2:
 *                             HarmonicDumbbellBond, 3: RigidBond, 5:             # <<<<<<<<<<<<<<
 *                             Dihedral, 6: Tabulated, 7: Subt_Lj, 9:
 *                             Virtual, 11: Endangledist, 12: Overlapped,
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_HarmonicDumbbellBond); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_2, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_RigidBond); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_3, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1086
 * bondedInteractionClasses = {0: FeneBond, 1: HarmonicBond, 2:
 *                             HarmonicDumbbellBond, 3: RigidBond, 5:
 *                             Dihedral, 6: Tabulated, 7: Subt_Lj, 9:             # <<<<<<<<<<<<<<
 *                             Virtual, 11: Endangledist, 12: Overlapped,
 *                             13: Angle_Harmonic, 14: Angle_Cosine, 15:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Dihedral); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_5, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Tabulated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_6, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Subt_Lj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_7, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1087
 *                             HarmonicDumbbellBond, 3: RigidBond, 5:
 *                             Dihedral, 6: Tabulated, 7: Subt_Lj, 9:
 *                             Virtual, 11: Endangledist, 12: Overlapped,             # <<<<<<<<<<<<<<
 *                             13: Angle_Harmonic, 14: Angle_Cosine, 15:
 *                             Angle_Cossquare, 16: Stretching_Force, 17:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Virtual); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_9, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Endangledist); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_11, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Overlapped); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_12, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1088
 *                             Dihedral, 6: Tabulated, 7: Subt_Lj, 9:
 *                             Virtual, 11: Endangledist, 12: Overlapped,
 *                             13: Angle_Harmonic, 14: Angle_Cosine, 15:             # <<<<<<<<<<<<<<
 *                             Angle_Cossquare, 16: Stretching_Force, 17:
 *                             Area_Force_Local, 18: Bending_Force, 19:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Angle_Harmonic); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_13, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Angle_Cosine); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_14, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1089
 *                             Virtual, 11: Endangledist, 12: Overlapped,
 *                             13: Angle_Harmonic, 14: Angle_Cosine, 15:
 *                             Angle_Cossquare, 16: Stretching_Force, 17:             # <<<<<<<<<<<<<<
 *                             Area_Force_Local, 18: Bending_Force, 19:
 *                             Volume_Force, 20: Area_Force_Global, 21:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Angle_Cossquare); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_15, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Stretching_Force); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_16, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1090
 *                             13: Angle_Harmonic, 14: Angle_Cosine, 15:
 *                             Angle_Cossquare, 16: Stretching_Force, 17:
 *                             Area_Force_Local, 18: Bending_Force, 19:             # <<<<<<<<<<<<<<
 *                             Volume_Force, 20: Area_Force_Global, 21:
 *                             Stretchlin_Force}
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Area_Force_Local); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_17, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Bending_Force); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_18, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1091
 *                             Angle_Cossquare, 16: Stretching_Force, 17:
 *                             Area_Force_Local, 18: Bending_Force, 19:
 *                             Volume_Force, 20: Area_Force_Global, 21:             # <<<<<<<<<<<<<<
 *                             Stretchlin_Force}
 * 
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Volume_Force); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_19, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Area_Force_Global); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_20, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1092
 *                             Area_Force_Local, 18: Bending_Force, 19:
 *                             Volume_Force, 20: Area_Force_Global, 21:
 *                             Stretchlin_Force}             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_Stretchlin_Force); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_21, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_bondedInteractionClasses, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1095
 * 
 * 
 * class BondedInteractions:             # <<<<<<<<<<<<<<
 * 
 *     """Represents the bonded interactions. Individual interactions can be accessed using
 */
  __pyx_t_1 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_BondedInteractions, __pyx_n_s_BondedInteractions, (PyObject *) NULL, __pyx_n_s_espressomd_interactions, __pyx_kp_s_Represents_the_bonded_interactio); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "espressomd/interactions.pyx":1101
 *     BondedInteractionHandle"""
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if not isinstance(key, int):
 *             raise ValueError(
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_18BondedInteractions_1__getitem__, 0, __pyx_n_s_BondedInteractions___getitem, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__333)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s_getitem, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1123
 *         return bondClass(key)
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         # Validate arguments
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_NewEx(&__pyx_mdef_10espressomd_12interactions_18BondedInteractions_3__setitem__, 0, __pyx_n_s_BondedInteractions___setitem, NULL, __pyx_n_s_espressomd_interactions, __pyx_d, ((PyObject *)__pyx_codeobj__335)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetItem(__pyx_t_1, __pyx_n_s_setitem, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "espressomd/interactions.pyx":1095
 * 
 * 
 * class BondedInteractions:             # <<<<<<<<<<<<<<
 * 
 *     """Represents the bonded interactions. Individual interactions can be accessed using
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_BondedInteractions, __pyx_empty_tuple, __pyx_t_1, NULL, 0, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BondedInteractions, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "espressomd/interactions.pyx":1
 * #             # <<<<<<<<<<<<<<
 * # Copyright (C) 2013,2014 The ESPResSo project
 * #
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../../../../../usr/lib/python3.4/site-packages/Cython/Includes/numpy/__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init espressomd.interactions", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init espressomd.interactions");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(tmp_type, tmp_value, tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_PyObject_CallMethod1((PyObject*)&PyDict_Type, __pyx_n_s_keys, d);
    else
        return PyDict_Keys(d);
}

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    Py_DECREF(res);
    return 0;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CyFunctionObject, func.m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyMem_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
#if CYTHON_COMPILING_IN_PYPY
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    Py_ssize_t size;
    switch (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST)) {
    case METH_VARARGS:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0)
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0) {
            size = PyTuple_GET_SIZE(arg);
            if (size == 0)
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0) {
            size = PyTuple_GET_SIZE(arg);
            if (size == 1)
                return (*meth)(self, PyTuple_GET_ITEM(arg, 0));
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
#else
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
	return PyCFunction_Call(func, arg, kw);
}
#endif
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_Call,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __Pyx_CyFunction_init(void) {
#if !CYTHON_COMPILING_IN_PYPY
    __pyx_CyFunctionType_type.tp_call = PyCFunction_Call;
#endif
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (__pyx_CyFunctionType == NULL) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyMem_Malloc(size);
    if (!m->defaults)
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
